

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 30 20:17:20 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F887 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     008F                     	;# 
   150     0090                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0093                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0095                     	;# 
   158     0096                     	;# 
   159     0097                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009A                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     0105                     	;# 
   169     0107                     	;# 
   170     0108                     	;# 
   171     0109                     	;# 
   172     010C                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     0185                     	;# 
   178     0187                     	;# 
   179     0188                     	;# 
   180     0189                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0000                     	;# 
   184     0001                     	;# 
   185     0002                     	;# 
   186     0003                     	;# 
   187     0004                     	;# 
   188     0005                     	;# 
   189     0006                     	;# 
   190     0007                     	;# 
   191     0008                     	;# 
   192     0009                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000D                     	;# 
   197     000E                     	;# 
   198     000E                     	;# 
   199     000F                     	;# 
   200     0010                     	;# 
   201     0011                     	;# 
   202     0012                     	;# 
   203     0013                     	;# 
   204     0014                     	;# 
   205     0015                     	;# 
   206     0015                     	;# 
   207     0016                     	;# 
   208     0017                     	;# 
   209     0018                     	;# 
   210     0019                     	;# 
   211     001A                     	;# 
   212     001B                     	;# 
   213     001B                     	;# 
   214     001C                     	;# 
   215     001D                     	;# 
   216     001E                     	;# 
   217     001F                     	;# 
   218     0081                     	;# 
   219     0085                     	;# 
   220     0086                     	;# 
   221     0087                     	;# 
   222     0088                     	;# 
   223     0089                     	;# 
   224     008C                     	;# 
   225     008D                     	;# 
   226     008E                     	;# 
   227     008F                     	;# 
   228     0090                     	;# 
   229     0091                     	;# 
   230     0092                     	;# 
   231     0093                     	;# 
   232     0093                     	;# 
   233     0093                     	;# 
   234     0094                     	;# 
   235     0095                     	;# 
   236     0096                     	;# 
   237     0097                     	;# 
   238     0098                     	;# 
   239     0099                     	;# 
   240     009A                     	;# 
   241     009B                     	;# 
   242     009C                     	;# 
   243     009D                     	;# 
   244     009E                     	;# 
   245     009F                     	;# 
   246     0105                     	;# 
   247     0107                     	;# 
   248     0108                     	;# 
   249     0109                     	;# 
   250     010C                     	;# 
   251     010C                     	;# 
   252     010D                     	;# 
   253     010E                     	;# 
   254     010F                     	;# 
   255     0185                     	;# 
   256     0187                     	;# 
   257     0188                     	;# 
   258     0189                     	;# 
   259     018C                     	;# 
   260     018D                     	;# 
   261     0000                     	;# 
   262     0001                     	;# 
   263     0002                     	;# 
   264     0003                     	;# 
   265     0004                     	;# 
   266     0005                     	;# 
   267     0006                     	;# 
   268     0007                     	;# 
   269     0008                     	;# 
   270     0009                     	;# 
   271     000A                     	;# 
   272     000B                     	;# 
   273     000C                     	;# 
   274     000D                     	;# 
   275     000E                     	;# 
   276     000E                     	;# 
   277     000F                     	;# 
   278     0010                     	;# 
   279     0011                     	;# 
   280     0012                     	;# 
   281     0013                     	;# 
   282     0014                     	;# 
   283     0015                     	;# 
   284     0015                     	;# 
   285     0016                     	;# 
   286     0017                     	;# 
   287     0018                     	;# 
   288     0019                     	;# 
   289     001A                     	;# 
   290     001B                     	;# 
   291     001B                     	;# 
   292     001C                     	;# 
   293     001D                     	;# 
   294     001E                     	;# 
   295     001F                     	;# 
   296     0081                     	;# 
   297     0085                     	;# 
   298     0086                     	;# 
   299     0087                     	;# 
   300     0088                     	;# 
   301     0089                     	;# 
   302     008C                     	;# 
   303     008D                     	;# 
   304     008E                     	;# 
   305     008F                     	;# 
   306     0090                     	;# 
   307     0091                     	;# 
   308     0092                     	;# 
   309     0093                     	;# 
   310     0093                     	;# 
   311     0093                     	;# 
   312     0094                     	;# 
   313     0095                     	;# 
   314     0096                     	;# 
   315     0097                     	;# 
   316     0098                     	;# 
   317     0099                     	;# 
   318     009A                     	;# 
   319     009B                     	;# 
   320     009C                     	;# 
   321     009D                     	;# 
   322     009E                     	;# 
   323     009F                     	;# 
   324     0105                     	;# 
   325     0107                     	;# 
   326     0108                     	;# 
   327     0109                     	;# 
   328     010C                     	;# 
   329     010C                     	;# 
   330     010D                     	;# 
   331     010E                     	;# 
   332     010F                     	;# 
   333     0185                     	;# 
   334     0187                     	;# 
   335     0188                     	;# 
   336     0189                     	;# 
   337     018C                     	;# 
   338     018D                     	;# 
   339     0000                     	;# 
   340     0001                     	;# 
   341     0002                     	;# 
   342     0003                     	;# 
   343     0004                     	;# 
   344     0005                     	;# 
   345     0006                     	;# 
   346     0007                     	;# 
   347     0008                     	;# 
   348     0009                     	;# 
   349     000A                     	;# 
   350     000B                     	;# 
   351     000C                     	;# 
   352     000D                     	;# 
   353     000E                     	;# 
   354     000E                     	;# 
   355     000F                     	;# 
   356     0010                     	;# 
   357     0011                     	;# 
   358     0012                     	;# 
   359     0013                     	;# 
   360     0014                     	;# 
   361     0015                     	;# 
   362     0015                     	;# 
   363     0016                     	;# 
   364     0017                     	;# 
   365     0018                     	;# 
   366     0019                     	;# 
   367     001A                     	;# 
   368     001B                     	;# 
   369     001B                     	;# 
   370     001C                     	;# 
   371     001D                     	;# 
   372     001E                     	;# 
   373     001F                     	;# 
   374     0081                     	;# 
   375     0085                     	;# 
   376     0086                     	;# 
   377     0087                     	;# 
   378     0088                     	;# 
   379     0089                     	;# 
   380     008C                     	;# 
   381     008D                     	;# 
   382     008E                     	;# 
   383     008F                     	;# 
   384     0090                     	;# 
   385     0091                     	;# 
   386     0092                     	;# 
   387     0093                     	;# 
   388     0093                     	;# 
   389     0093                     	;# 
   390     0094                     	;# 
   391     0095                     	;# 
   392     0096                     	;# 
   393     0097                     	;# 
   394     0098                     	;# 
   395     0099                     	;# 
   396     009A                     	;# 
   397     009B                     	;# 
   398     009C                     	;# 
   399     009D                     	;# 
   400     009E                     	;# 
   401     009F                     	;# 
   402     0105                     	;# 
   403     0107                     	;# 
   404     0108                     	;# 
   405     0109                     	;# 
   406     010C                     	;# 
   407     010C                     	;# 
   408     010D                     	;# 
   409     010E                     	;# 
   410     010F                     	;# 
   411     0185                     	;# 
   412     0187                     	;# 
   413     0188                     	;# 
   414     0189                     	;# 
   415     018C                     	;# 
   416     018D                     	;# 
   417     0000                     	;# 
   418     0001                     	;# 
   419     0002                     	;# 
   420     0003                     	;# 
   421     0004                     	;# 
   422     0005                     	;# 
   423     0006                     	;# 
   424     0007                     	;# 
   425     0008                     	;# 
   426     0009                     	;# 
   427     000A                     	;# 
   428     000B                     	;# 
   429     000C                     	;# 
   430     000D                     	;# 
   431     000E                     	;# 
   432     000E                     	;# 
   433     000F                     	;# 
   434     0010                     	;# 
   435     0011                     	;# 
   436     0012                     	;# 
   437     0013                     	;# 
   438     0014                     	;# 
   439     0015                     	;# 
   440     0015                     	;# 
   441     0016                     	;# 
   442     0017                     	;# 
   443     0018                     	;# 
   444     0019                     	;# 
   445     001A                     	;# 
   446     001B                     	;# 
   447     001B                     	;# 
   448     001C                     	;# 
   449     001D                     	;# 
   450     001E                     	;# 
   451     001F                     	;# 
   452     0081                     	;# 
   453     0085                     	;# 
   454     0086                     	;# 
   455     0087                     	;# 
   456     0088                     	;# 
   457     0089                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     008E                     	;# 
   461     008F                     	;# 
   462     0090                     	;# 
   463     0091                     	;# 
   464     0092                     	;# 
   465     0093                     	;# 
   466     0093                     	;# 
   467     0093                     	;# 
   468     0094                     	;# 
   469     0095                     	;# 
   470     0096                     	;# 
   471     0097                     	;# 
   472     0098                     	;# 
   473     0099                     	;# 
   474     009A                     	;# 
   475     009B                     	;# 
   476     009C                     	;# 
   477     009D                     	;# 
   478     009E                     	;# 
   479     009F                     	;# 
   480     0105                     	;# 
   481     0107                     	;# 
   482     0108                     	;# 
   483     0109                     	;# 
   484     010C                     	;# 
   485     010C                     	;# 
   486     010D                     	;# 
   487     010E                     	;# 
   488     010F                     	;# 
   489     0185                     	;# 
   490     0187                     	;# 
   491     0188                     	;# 
   492     0189                     	;# 
   493     018C                     	;# 
   494     018D                     	;# 
   495     0000                     	;# 
   496     0001                     	;# 
   497     0002                     	;# 
   498     0003                     	;# 
   499     0004                     	;# 
   500     0005                     	;# 
   501     0006                     	;# 
   502     0007                     	;# 
   503     0008                     	;# 
   504     0009                     	;# 
   505     000A                     	;# 
   506     000B                     	;# 
   507     000C                     	;# 
   508     000D                     	;# 
   509     000E                     	;# 
   510     000E                     	;# 
   511     000F                     	;# 
   512     0010                     	;# 
   513     0011                     	;# 
   514     0012                     	;# 
   515     0013                     	;# 
   516     0014                     	;# 
   517     0015                     	;# 
   518     0015                     	;# 
   519     0016                     	;# 
   520     0017                     	;# 
   521     0018                     	;# 
   522     0019                     	;# 
   523     001A                     	;# 
   524     001B                     	;# 
   525     001B                     	;# 
   526     001C                     	;# 
   527     001D                     	;# 
   528     001E                     	;# 
   529     001F                     	;# 
   530     0081                     	;# 
   531     0085                     	;# 
   532     0086                     	;# 
   533     0087                     	;# 
   534     0088                     	;# 
   535     0089                     	;# 
   536     008C                     	;# 
   537     008D                     	;# 
   538     008E                     	;# 
   539     008F                     	;# 
   540     0090                     	;# 
   541     0091                     	;# 
   542     0092                     	;# 
   543     0093                     	;# 
   544     0093                     	;# 
   545     0093                     	;# 
   546     0094                     	;# 
   547     0095                     	;# 
   548     0096                     	;# 
   549     0097                     	;# 
   550     0098                     	;# 
   551     0099                     	;# 
   552     009A                     	;# 
   553     009B                     	;# 
   554     009C                     	;# 
   555     009D                     	;# 
   556     009E                     	;# 
   557     009F                     	;# 
   558     0105                     	;# 
   559     0107                     	;# 
   560     0108                     	;# 
   561     0109                     	;# 
   562     010C                     	;# 
   563     010C                     	;# 
   564     010D                     	;# 
   565     010E                     	;# 
   566     010F                     	;# 
   567     0185                     	;# 
   568     0187                     	;# 
   569     0188                     	;# 
   570     0189                     	;# 
   571     018C                     	;# 
   572     018D                     	;# 
   573                           
   574                           	psect	idataBANK0
   575     1F3B                     __pidataBANK0:
   576                           
   577                           ;initializer for _ala_hour
   578     1F3B  3412               	retlw	18
   579     1F3C  3400               	retlw	0
   580                           
   581                           ;initializer for _sec
   582     1F3D  3432               	retlw	50
   583     1F3E  3400               	retlw	0
   584                           
   585                           ;initializer for _min
   586     1F3F  343B               	retlw	59
   587     1F40  3400               	retlw	0
   588                           
   589                           ;initializer for _hour
   590     1F41  3410               	retlw	16
   591     1F42  3400               	retlw	0
   592     0019                     _TXREG	set	25
   593     000C                     _PIR1bits	set	12
   594     0018                     _RCSTAbits	set	24
   595     0008                     _PORTDbits	set	8
   596     0013                     _SSPBUF	set	19
   597     0014                     _SSPCON	set	20
   598     0006                     _PORTB	set	6
   599     0005                     _PORTA	set	5
   600     0001                     _TMR0	set	1
   601     001A                     _RCREG	set	26
   602     0008                     _PORTD	set	8
   603     0006                     _PORTBbits	set	6
   604     000B                     _INTCONbits	set	11
   605     0043                     _RD3	set	67
   606     0047                     _RD7	set	71
   607     0046                     _RD6	set	70
   608     0045                     _RD5	set	69
   609     0044                     _RD4	set	68
   610     0063                     _SSPIF	set	99
   611     005E                     _PEIE	set	94
   612     005F                     _GIE	set	95
   613     005D                     _T0IE	set	93
   614     0029                     _RA1	set	41
   615     005A                     _T0IF	set	90
   616     0065                     _RCIF	set	101
   617     0099                     _SPBRG	set	153
   618     008C                     _PIE1bits	set	140
   619     0098                     _TXSTAbits	set	152
   620     0081                     _OPTION_REGbits	set	129
   621     0096                     _IOCB	set	150
   622     0095                     _WPUB	set	149
   623     0086                     _TRISB	set	134
   624     0091                     _SSPCON2bits	set	145
   625     0087                     _TRISCbits	set	135
   626     0094                     _SSPSTAT	set	148
   627     0093                     _SSPADD	set	147
   628     0091                     _SSPCON2	set	145
   629     0088                     _TRISD	set	136
   630     0085                     _TRISA	set	133
   631     008F                     _OSCCONbits	set	143
   632     04C1                     _TRMT	set	1217
   633     0463                     _SSPIE	set	1123
   634     043C                     _TRISC4	set	1084
   635     043B                     _TRISC3	set	1083
   636     0408                     _PS0	set	1032
   637     0409                     _PS1	set	1033
   638     040A                     _PS2	set	1034
   639     040B                     _PSA	set	1035
   640     040C                     _T0SE	set	1036
   641     040D                     _T0CS	set	1037
   642     0187                     _BAUDCTLbits	set	391
   643     0189                     _ANSELH	set	393
   644     0188                     _ANSEL	set	392
   645                           
   646                           	psect	strings
   647     1000                     __pstrings:
   648     1000                     stringtab:
   649     1000                     __stringtab:
   650                           
   651                           ;	String table - string pointers are 1 byte each
   652     1000  1BFF               	btfsc	btemp+1,7
   653     1001  280A               	ljmp	stringcode
   654     1002  1383               	bcf	3,7
   655     1003  187F               	btfsc	btemp+1,0
   656     1004  1783               	bsf	3,7
   657     1005  0800               	movf	0,w
   658     1006  0A84               	incf	4,f
   659     1007  1903               	skipnz
   660     1008  0AFF               	incf	btemp+1,f
   661     1009  0008               	return
   662     100A                     stringcode:
   663     100A                     stringdir:
   664     100A  3010               	movlw	high stringdir
   665     100B  008A               	movwf	10
   666     100C  0804               	movf	4,w
   667     100D  0A84               	incf	4,f
   668     100E  0782               	addwf	2,f
   669     100F                     __stringbase:
   670     100F  3400               	retlw	0
   671     1010                     __end_of__stringtab:
   672     1010                     STR_10:
   673     1010  3442               	retlw	66	;'B'
   674     1011  3469               	retlw	105	;'i'
   675     1012  3465               	retlw	101	;'e'
   676     1013  346E               	retlw	110	;'n'
   677     1014  3476               	retlw	118	;'v'
   678     1015  3465               	retlw	101	;'e'
   679     1016  346E               	retlw	110	;'n'
   680     1017  3469               	retlw	105	;'i'
   681     1018  3464               	retlw	100	;'d'
   682     1019  346F               	retlw	111	;'o'
   683     101A  3400               	retlw	0
   684     101B                     STR_11:
   685     101B  3443               	retlw	67	;'C'
   686     101C  3461               	retlw	97	;'a'
   687     101D  3472               	retlw	114	;'r'
   688     101E  3467               	retlw	103	;'g'
   689     101F  3461               	retlw	97	;'a'
   690     1020  346E               	retlw	110	;'n'
   691     1021  3464               	retlw	100	;'d'
   692     1022  346F               	retlw	111	;'o'
   693     1023  3400               	retlw	0
   694     1024                     STR_3:
   695     1024  3454               	retlw	84	;'T'
   696     1025  3469               	retlw	105	;'i'
   697     1026  346D               	retlw	109	;'m'
   698     1027  3465               	retlw	101	;'e'
   699     1028  343A               	retlw	58	;':'
   700     1029  3420               	retlw	32	;' '
   701     102A  3400               	retlw	0
   702     102B                     STR_6:
   703     102B  3448               	retlw	72	;'H'
   704     102C  343A               	retlw	58	;':'
   705     102D  3400               	retlw	0
   706     102E                     STR_4:
   707     102E  3451               	retlw	81	;'Q'
   708     102F  343A               	retlw	58	;':'
   709     1030  3400               	retlw	0
   710     1031                     STR_8:
   711     1031  3454               	retlw	84	;'T'
   712     1032  343A               	retlw	58	;':'
   713     1033  3400               	retlw	0
   714     1034                     STR_1:
   715     1034  3430               	retlw	48	;'0'
   716     1035  3400               	retlw	0
   717     1036                     STR_9:
   718     1036  3431               	retlw	49	;'1'
   719     1037  3400               	retlw	0
   720     1029                     
   721                           	psect	cinit
   722     0015                     start_initialization:	
   723                           ; #config settings
   724                           
   725     0015                     __initialization:
   726                           
   727                           ; Initialize objects allocated to BANK0
   728     0015  1383               	bcf	3,7	;select IRP bank0
   729     0016  3063               	movlw	low (__pdataBANK0+8)
   730     0017  00FD               	movwf	btemp+-1
   731     0018  301F               	movlw	high __pidataBANK0
   732     0019  00FE               	movwf	btemp
   733     001A  303B               	movlw	low __pidataBANK0
   734     001B  00FF               	movwf	btemp+1
   735     001C  305B               	movlw	low __pdataBANK0
   736     001D  0084               	movwf	4
   737     001E  120A  158A  2007  120A  118A  	fcall	init_ram0
   738                           
   739                           ; Clear objects allocated to BANK1
   740     0023  30A0               	movlw	low __pbssBANK1
   741     0024  0084               	movwf	4
   742     0025  30BC               	movlw	low (__pbssBANK1+28)
   743     0026  160A  158A  2733  120A  118A  	fcall	clear_ram0
   744                           
   745                           ; Clear objects allocated to BANK0
   746     002B  3050               	movlw	low __pbssBANK0
   747     002C  0084               	movwf	4
   748     002D  305B               	movlw	low (__pbssBANK0+11)
   749     002E  160A  158A  2733  120A  118A  	fcall	clear_ram0
   750                           
   751                           ; Clear objects allocated to COMMON
   752     0033  01FD               	clrf	__pbssCOMMON& (0+127)
   753     0034                     end_of_initialization:	
   754                           ;End of C runtime variable initialization code
   755                           
   756     0034                     __end_of__initialization:
   757     0034  0183               	clrf	3
   758     0035  120A  118A  2838   	ljmp	_main	;jump to C main() function
   759                           
   760                           	psect	bssCOMMON
   761     007D                     __pbssCOMMON:
   762     007D                     _count:
   763     007D                     	ds	1
   764                           
   765                           	psect	bssBANK0
   766     0050                     __pbssBANK0:
   767     0050                     _on_time:
   768     0050                     	ds	2
   769     0052                     _ala_sec:
   770     0052                     	ds	2
   771     0054                     _ala_min:
   772     0054                     	ds	2
   773     0056                     _servoPos:
   774     0056                     	ds	1
   775     0057                     _bufferAlarm:
   776     0057                     	ds	1
   777     0058                     _HumidityValue:
   778     0058                     	ds	1
   779     0059                     _TemperatureValue:
   780     0059                     	ds	1
   781     005A                     _qPulse_Value:
   782     005A                     	ds	1
   783                           
   784                           	psect	dataBANK0
   785     005B                     __pdataBANK0:
   786     005B                     _ala_hour:
   787     005B                     	ds	2
   788     005D                     _sec:
   789     005D                     	ds	2
   790     005F                     _min:
   791     005F                     	ds	2
   792     0061                     _hour:
   793     0061                     	ds	2
   794                           
   795                           	psect	bssBANK1
   796     00A0                     __pbssBANK1:
   797     00A0                     _caudal:
   798     00A0                     	ds	4
   799     00A4                     _bufferTemp:
   800     00A4                     	ds	4
   801     00A8                     _bufferHum:
   802     00A8                     	ds	4
   803     00AC                     _bufferQ:
   804     00AC                     	ds	4
   805     00B0                     _bufferMin:
   806     00B0                     	ds	4
   807     00B4                     _bufferSec:
   808     00B4                     	ds	4
   809     00B8                     _bufferHour:
   810     00B8                     	ds	4
   811                           
   812                           	psect	inittext
   813     0803                     init_fetch0:	
   814                           ;	Called with low address in FSR and high address in W
   815                           
   816     0803  087E               	movf	btemp,w
   817     0804  008A               	movwf	10
   818     0805  087F               	movf	btemp+1,w
   819     0806  0082               	movwf	2
   820     0807                     init_ram0:	
   821                           ;Called with:
   822                           ;	high address of idata address in btemp 
   823                           ;	low address of idata address in btemp+1 
   824                           ;	low address of data in FSR
   825                           ;	high address + 1 of data in btemp-1
   826                           
   827     0807  120A  158A  2003  120A  158A  	fcall	init_fetch0
   828     080C  0080               	movwf	0
   829     080D  0A84               	incf	4,f
   830     080E  0804               	movf	4,w
   831     080F  067D               	xorwf	btemp+-1,w
   832     0810  1903               	btfsc	3,2
   833     0811  3400               	retlw	0
   834     0812  0AFF               	incf	btemp+1,f
   835     0813  1903               	btfsc	3,2
   836     0814  0AFE               	incf	btemp,f
   837     0815  2807               	goto	init_ram0
   838                           
   839                           	psect	clrtext
   840     1F33                     clear_ram0:	
   841                           ;	Called with FSR containing the base address, and
   842                           ;	W with the last address+1
   843                           
   844     1F33  0064               	clrwdt	;clear the watchdog before getting into this loop
   845     1F34                     clrloop0:
   846     1F34  0180               	clrf	0	;clear RAM location pointed to by FSR
   847     1F35  0A84               	incf	4,f	;increment pointer
   848     1F36  0604               	xorwf	4,w	;XOR with final address
   849     1F37  1903               	btfsc	3,2	;have we reached the end yet?
   850     1F38  3400               	retlw	0	;all done for this memory range, return
   851     1F39  0604               	xorwf	4,w	;XOR again to restore value
   852     1F3A  2F34               	goto	clrloop0	;do the next byte
   853                           
   854                           	psect	cstackBANK1
   855     00BC                     __pcstackBANK1:
   856     00BC                     ?_floatToStr:
   857     00BC                     floatToStr@value:	
   858                           ; 1 bytes @ 0x0
   859                           
   860                           
   861                           ; 4 bytes @ 0x0
   862     00BC                     	ds	4
   863     00C0                     floatToStr@buffer:
   864                           
   865                           ; 1 bytes @ 0x4
   866     00C0                     	ds	1
   867     00C1                     floatToStr@precision:
   868                           
   869                           ; 2 bytes @ 0x5
   870     00C1                     	ds	2
   871     00C3                     ??_floatToStr:
   872                           
   873                           ; 1 bytes @ 0x7
   874     00C3                     	ds	1
   875     00C4                     floatToStr@roundedFloatingPart:
   876                           
   877                           ; 2 bytes @ 0x8
   878     00C4                     	ds	2
   879     00C6                     floatToStr@integerLength:
   880                           
   881                           ; 2 bytes @ 0xA
   882     00C6                     	ds	2
   883     00C8                     floatToStr@floatingLength:
   884                           
   885                           ; 2 bytes @ 0xC
   886     00C8                     	ds	2
   887     00CA                     floatToStr@i:
   888                           
   889                           ; 2 bytes @ 0xE
   890     00CA                     	ds	2
   891     00CC                     floatToStr@integerPart:
   892                           
   893                           ; 2 bytes @ 0x10
   894     00CC                     	ds	2
   895     00CE                     floatToStr@floatingPart:
   896                           
   897                           ; 4 bytes @ 0x12
   898     00CE                     	ds	4
   899     00D2                     ??_main:
   900                           
   901                           ; 1 bytes @ 0x16
   902     00D2                     	ds	3
   903                           
   904                           	psect	cstackCOMMON
   905     0070                     __pcstackCOMMON:
   906     0070                     ?_I2C_Master_Start:
   907     0070                     ?_I2C_Master_Stop:	
   908                           ; 1 bytes @ 0x0
   909                           
   910     0070                     ?_setup:	
   911                           ; 1 bytes @ 0x0
   912                           
   913     0070                     ?_I2C_Master_RepeatedStart:	
   914                           ; 1 bytes @ 0x0
   915                           
   916     0070                     ?_Lcd_Clear:	
   917                           ; 1 bytes @ 0x0
   918                           
   919     0070                     ?_Lcd_Write_Char:	
   920                           ; 1 bytes @ 0x0
   921                           
   922     0070                     ?_Lcd_Init:	
   923                           ; 1 bytes @ 0x0
   924                           
   925     0070                     ?_isr:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ?_main:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_I2C_Master_Wait:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ?_Lcd_Port:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_Lcd_Cmd:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?_USART_send:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ?i1_I2C_Master_Wait:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ??i1_I2C_Master_Wait:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ?i1_I2C_Master_Start:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     ??i1_I2C_Master_Start:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ?i1_I2C_Master_Stop:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0070                     ??i1_I2C_Master_Stop:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0070                     ?i1_USART_send:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0070                     ??i1_USART_send:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0070                     ?_ioc_init:	
   968                           ; 1 bytes @ 0x0
   969                           
   970     0070                     ?i1___wmul:	
   971                           ; 2 bytes @ 0x0
   972                           
   973     0070                     ?i1___awdiv:	
   974                           ; 2 bytes @ 0x0
   975                           
   976     0070                     ?i1___awmod:	
   977                           ; 2 bytes @ 0x0
   978                           
   979     0070                     i1USART_send@data:	
   980                           ; 2 bytes @ 0x0
   981                           
   982     0070                     i1___wmul@multiplier:	
   983                           ; 1 bytes @ 0x0
   984                           
   985     0070                     i1___awdiv@divisor:	
   986                           ; 2 bytes @ 0x0
   987                           
   988     0070                     i1___awmod@divisor:	
   989                           ; 2 bytes @ 0x0
   990                           
   991                           
   992                           ; 2 bytes @ 0x0
   993     0070                     	ds	1
   994     0071                     ?i1_USART_print:
   995     0071                     i1USART_print@string:	
   996                           ; 1 bytes @ 0x1
   997                           
   998                           
   999                           ; 2 bytes @ 0x1
  1000     0071                     	ds	1
  1001     0072                     i1___wmul@multiplicand:
  1002     0072                     i1___awdiv@dividend:	
  1003                           ; 2 bytes @ 0x2
  1004                           
  1005     0072                     i1___awmod@dividend:	
  1006                           ; 2 bytes @ 0x2
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0x2
  1010     0072                     	ds	1
  1011     0073                     ??i1_USART_print:
  1012                           
  1013                           ; 1 bytes @ 0x3
  1014     0073                     	ds	1
  1015     0074                     ??i1___wmul:
  1016     0074                     ??i1___awdiv:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019     0074                     ??i1___awmod:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022     0074                     i1___wmul@product:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025                           
  1026                           ; 2 bytes @ 0x4
  1027     0074                     	ds	1
  1028     0075                     i1___awdiv@counter:
  1029     0075                     i1___awmod@counter:	
  1030                           ; 1 bytes @ 0x5
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x5
  1034     0075                     	ds	1
  1035     0076                     i1___awdiv@sign:
  1036     0076                     i1___awmod@sign:	
  1037                           ; 1 bytes @ 0x6
  1038                           
  1039     0076                     i1USART_print@i:	
  1040                           ; 1 bytes @ 0x6
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x6
  1044     0076                     	ds	1
  1045     0077                     i1___awdiv@quotient:
  1046                           
  1047                           ; 2 bytes @ 0x7
  1048     0077                     	ds	2
  1049     0079                     ?i1_d2b:
  1050     0079                     i1d2b@to_convert:	
  1051                           ; 2 bytes @ 0x9
  1052                           
  1053                           
  1054                           ; 2 bytes @ 0x9
  1055     0079                     	ds	2
  1056     007B                     ??i1_d2b:
  1057     007B                     ?i1_I2C_Master_Write:	
  1058                           ; 1 bytes @ 0xB
  1059                           
  1060     007B                     i1I2C_Master_Write@d:	
  1061                           ; 1 bytes @ 0xB
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0xB
  1065     007B                     	ds	2
  1066     007D                     ??i1_I2C_Master_Write:
  1067                           
  1068                           	psect	cstackBANK0
  1069     0020                     __pcstackBANK0:	
  1070                           ; 1 bytes @ 0xD
  1071                           
  1072     0020                     i1d2b@digit:
  1073                           
  1074                           ; 2 bytes @ 0x0
  1075     0020                     	ds	2
  1076     0022                     i1d2b@bcd:
  1077                           
  1078                           ; 2 bytes @ 0x2
  1079     0022                     	ds	2
  1080     0024                     i1d2b@multiplier:
  1081                           
  1082                           ; 2 bytes @ 0x4
  1083     0024                     	ds	2
  1084     0026                     ??_isr:
  1085                           
  1086                           ; 1 bytes @ 0x6
  1087     0026                     	ds	7
  1088     002D                     ?___flge:
  1089     002D                     ??_I2C_Master_Start:	
  1090                           ; 1 bit 
  1091                           
  1092     002D                     ??_I2C_Master_Stop:	
  1093                           ; 1 bytes @ 0xD
  1094                           
  1095     002D                     ??_I2C_Master_RepeatedStart:	
  1096                           ; 1 bytes @ 0xD
  1097                           
  1098     002D                     ??_ioc_init:	
  1099                           ; 1 bytes @ 0xD
  1100                           
  1101     002D                     ?_reverse:	
  1102                           ; 1 bytes @ 0xD
  1103                           
  1104     002D                     ??_I2C_Master_Wait:	
  1105                           ; 1 bytes @ 0xD
  1106                           
  1107     002D                     ??_Lcd_Port:	
  1108                           ; 1 bytes @ 0xD
  1109                           
  1110     002D                     ??_USART_send:	
  1111                           ; 1 bytes @ 0xD
  1112                           
  1113     002D                     ?_I2C_Master_Read:	
  1114                           ; 1 bytes @ 0xD
  1115                           
  1116     002D                     ?__Umul8_16:	
  1117                           ; 2 bytes @ 0xD
  1118                           
  1119     002D                     ?___wmul:	
  1120                           ; 2 bytes @ 0xD
  1121                           
  1122     002D                     ?___awdiv:	
  1123                           ; 2 bytes @ 0xD
  1124                           
  1125     002D                     ?___awmod:	
  1126                           ; 2 bytes @ 0xD
  1127                           
  1128     002D                     ?___lldiv:	
  1129                           ; 2 bytes @ 0xD
  1130                           
  1131     002D                     ?___flneg:	
  1132                           ; 4 bytes @ 0xD
  1133                           
  1134     002D                     ?___fladd:	
  1135                           ; 4 bytes @ 0xD
  1136                           
  1137     002D                     ioc_init@pin:	
  1138                           ; 4 bytes @ 0xD
  1139                           
  1140     002D                     Lcd_Port@a:	
  1141                           ; 1 bytes @ 0xD
  1142                           
  1143     002D                     USART_send@data:	
  1144                           ; 1 bytes @ 0xD
  1145                           
  1146     002D                     __Umul8_16@multiplicand:	
  1147                           ; 1 bytes @ 0xD
  1148                           
  1149     002D                     reverse@length:	
  1150                           ; 1 bytes @ 0xD
  1151                           
  1152     002D                     I2C_Master_Read@a:	
  1153                           ; 2 bytes @ 0xD
  1154                           
  1155     002D                     ___wmul@multiplier:	
  1156                           ; 2 bytes @ 0xD
  1157                           
  1158     002D                     ___awdiv@divisor:	
  1159                           ; 2 bytes @ 0xD
  1160                           
  1161     002D                     ___awmod@divisor:	
  1162                           ; 2 bytes @ 0xD
  1163                           
  1164     002D                     ___lldiv@divisor:	
  1165                           ; 2 bytes @ 0xD
  1166                           
  1167     002D                     ___flge@ff1:	
  1168                           ; 4 bytes @ 0xD
  1169                           
  1170     002D                     ___flneg@f1:	
  1171                           ; 4 bytes @ 0xD
  1172                           
  1173     002D                     ___fladd@b:	
  1174                           ; 4 bytes @ 0xD
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0xD
  1178     002D                     	ds	1
  1179     002E                     ?_USART_print:
  1180     002E                     ??_Lcd_Write_Char:	
  1181                           ; 1 bytes @ 0xE
  1182                           
  1183     002E                     ??_Lcd_Cmd:	
  1184                           ; 1 bytes @ 0xE
  1185                           
  1186     002E                     USART_print@string:	
  1187                           ; 1 bytes @ 0xE
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0xE
  1191     002E                     	ds	1
  1192     002F                     ??_I2C_Master_Read:
  1193     002F                     ??__Umul8_16:	
  1194                           ; 1 bytes @ 0xF
  1195                           
  1196     002F                     ??_reverse:	
  1197                           ; 1 bytes @ 0xF
  1198                           
  1199     002F                     Lcd_Write_Char@temp:	
  1200                           ; 1 bytes @ 0xF
  1201                           
  1202     002F                     ___wmul@multiplicand:	
  1203                           ; 1 bytes @ 0xF
  1204                           
  1205     002F                     ___awdiv@dividend:	
  1206                           ; 2 bytes @ 0xF
  1207                           
  1208     002F                     ___awmod@dividend:	
  1209                           ; 2 bytes @ 0xF
  1210                           
  1211                           
  1212                           ; 2 bytes @ 0xF
  1213     002F                     	ds	1
  1214     0030                     ??_USART_print:
  1215     0030                     Lcd_Cmd@a:	
  1216                           ; 1 bytes @ 0x10
  1217                           
  1218     0030                     Lcd_Write_Char@y:	
  1219                           ; 1 bytes @ 0x10
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x10
  1223     0030                     	ds	1
  1224     0031                     ??_Lcd_Clear:
  1225     0031                     ?_Lcd_Set_Cursor:	
  1226                           ; 1 bytes @ 0x11
  1227                           
  1228     0031                     ??_Lcd_Init:	
  1229                           ; 1 bytes @ 0x11
  1230                           
  1231     0031                     ??___wmul:	
  1232                           ; 1 bytes @ 0x11
  1233                           
  1234     0031                     ??___awdiv:	
  1235                           ; 1 bytes @ 0x11
  1236                           
  1237     0031                     ??___awmod:	
  1238                           ; 1 bytes @ 0x11
  1239                           
  1240     0031                     ??___flneg:	
  1241                           ; 1 bytes @ 0x11
  1242                           
  1243     0031                     Lcd_Set_Cursor@b:	
  1244                           ; 1 bytes @ 0x11
  1245                           
  1246     0031                     Lcd_Write_Char@a:	
  1247                           ; 1 bytes @ 0x11
  1248                           
  1249     0031                     I2C_Master_Read@temp:	
  1250                           ; 1 bytes @ 0x11
  1251                           
  1252     0031                     ___wmul@product:	
  1253                           ; 2 bytes @ 0x11
  1254                           
  1255     0031                     __Umul8_16@product:	
  1256                           ; 2 bytes @ 0x11
  1257                           
  1258     0031                     ___lldiv@dividend:	
  1259                           ; 2 bytes @ 0x11
  1260                           
  1261     0031                     ___flge@ff2:	
  1262                           ; 4 bytes @ 0x11
  1263                           
  1264     0031                     ___fladd@a:	
  1265                           ; 4 bytes @ 0x11
  1266                           
  1267                           
  1268                           ; 4 bytes @ 0x11
  1269     0031                     	ds	1
  1270     0032                     ??_Lcd_Set_Cursor:
  1271     0032                     ?_Lcd_Write_String:	
  1272                           ; 1 bytes @ 0x12
  1273                           
  1274     0032                     reverse@temp:	
  1275                           ; 1 bytes @ 0x12
  1276                           
  1277     0032                     ___awdiv@counter:	
  1278                           ; 1 bytes @ 0x12
  1279                           
  1280     0032                     ___awmod@counter:	
  1281                           ; 1 bytes @ 0x12
  1282                           
  1283     0032                     Lcd_Write_String@a:	
  1284                           ; 1 bytes @ 0x12
  1285                           
  1286                           
  1287                           ; 2 bytes @ 0x12
  1288     0032                     	ds	1
  1289     0033                     ?_b2d:
  1290     0033                     Lcd_Set_Cursor@a:	
  1291                           ; 2 bytes @ 0x13
  1292                           
  1293     0033                     ___awdiv@sign:	
  1294                           ; 1 bytes @ 0x13
  1295                           
  1296     0033                     ___awmod@sign:	
  1297                           ; 1 bytes @ 0x13
  1298                           
  1299     0033                     b2d@to_convert:	
  1300                           ; 1 bytes @ 0x13
  1301                           
  1302     0033                     reverse@start:	
  1303                           ; 2 bytes @ 0x13
  1304                           
  1305     0033                     USART_print@i:	
  1306                           ; 2 bytes @ 0x13
  1307                           
  1308     0033                     __Umul8_16@word_mpld:	
  1309                           ; 2 bytes @ 0x13
  1310                           
  1311                           
  1312                           ; 2 bytes @ 0x13
  1313     0033                     	ds	1
  1314     0034                     ??_Lcd_Write_String:
  1315     0034                     Lcd_Set_Cursor@z:	
  1316                           ; 1 bytes @ 0x14
  1317                           
  1318     0034                     ___awdiv@quotient:	
  1319                           ; 1 bytes @ 0x14
  1320                           
  1321                           
  1322                           ; 2 bytes @ 0x14
  1323     0034                     	ds	1
  1324     0035                     ??_b2d:
  1325     0035                     ??___lldiv:	
  1326                           ; 1 bytes @ 0x15
  1327                           
  1328     0035                     ??___flge:	
  1329                           ; 1 bytes @ 0x15
  1330                           
  1331     0035                     ??___fladd:	
  1332                           ; 1 bytes @ 0x15
  1333                           
  1334     0035                     Lcd_Set_Cursor@y:	
  1335                           ; 1 bytes @ 0x15
  1336                           
  1337     0035                     __Umul8_16@multiplier:	
  1338                           ; 1 bytes @ 0x15
  1339                           
  1340     0035                     reverse@end:	
  1341                           ; 1 bytes @ 0x15
  1342                           
  1343                           
  1344                           ; 2 bytes @ 0x15
  1345     0035                     	ds	1
  1346     0036                     ?_uint8ToString:
  1347     0036                     ?_d2b:	
  1348                           ; 1 bytes @ 0x16
  1349                           
  1350     0036                     ?___flmul:	
  1351                           ; 2 bytes @ 0x16
  1352                           
  1353     0036                     ?___xxtofl:	
  1354                           ; 4 bytes @ 0x16
  1355                           
  1356     0036                     uint8ToString@str:	
  1357                           ; 4 bytes @ 0x16
  1358                           
  1359     0036                     Lcd_Set_Cursor@temp:	
  1360                           ; 1 bytes @ 0x16
  1361                           
  1362     0036                     d2b@to_convert:	
  1363                           ; 1 bytes @ 0x16
  1364                           
  1365     0036                     ___lldiv@quotient:	
  1366                           ; 2 bytes @ 0x16
  1367                           
  1368     0036                     ___flmul@b:	
  1369                           ; 4 bytes @ 0x16
  1370                           
  1371     0036                     ___xxtofl@val:	
  1372                           ; 4 bytes @ 0x16
  1373                           
  1374                           
  1375                           ; 4 bytes @ 0x16
  1376     0036                     	ds	1
  1377     0037                     ??_uint8ToString:
  1378     0037                     reverse@str:	
  1379                           ; 1 bytes @ 0x17
  1380                           
  1381     0037                     Lcd_Write_String@i:	
  1382                           ; 1 bytes @ 0x17
  1383                           
  1384                           
  1385                           ; 2 bytes @ 0x17
  1386     0037                     	ds	1
  1387     0038                     ??_d2b:
  1388     0038                     ?_intToStr:	
  1389                           ; 1 bytes @ 0x18
  1390                           
  1391     0038                     d2b@digit:	
  1392                           ; 2 bytes @ 0x18
  1393                           
  1394     0038                     intToStr@x:	
  1395                           ; 2 bytes @ 0x18
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x18
  1399     0038                     	ds	2
  1400     003A                     ??___xxtofl:
  1401     003A                     uint8ToString@num:	
  1402                           ; 1 bytes @ 0x1A
  1403                           
  1404     003A                     intToStr@str:	
  1405                           ; 1 bytes @ 0x1A
  1406                           
  1407     003A                     ___lldiv@counter:	
  1408                           ; 1 bytes @ 0x1A
  1409                           
  1410     003A                     d2b@bcd:	
  1411                           ; 1 bytes @ 0x1A
  1412                           
  1413     003A                     ___flmul@a:	
  1414                           ; 2 bytes @ 0x1A
  1415                           
  1416                           
  1417                           ; 4 bytes @ 0x1A
  1418     003A                     	ds	1
  1419     003B                     ?_USART_init_baud:
  1420     003B                     ?_I2C_Master_Init:	
  1421                           ; 1 bytes @ 0x1B
  1422                           
  1423     003B                     uint8ToString@tempChar:	
  1424                           ; 1 bytes @ 0x1B
  1425                           
  1426     003B                     intToStr@d:	
  1427                           ; 1 bytes @ 0x1B
  1428                           
  1429     003B                     I2C_Master_Init@c:	
  1430                           ; 2 bytes @ 0x1B
  1431                           
  1432     003B                     USART_init_baud@baudrate:	
  1433                           ; 4 bytes @ 0x1B
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x1B
  1437     003B                     	ds	1
  1438     003C                     uint8ToString@i:
  1439     003C                     d2b@multiplier:	
  1440                           ; 1 bytes @ 0x1C
  1441                           
  1442                           
  1443                           ; 2 bytes @ 0x1C
  1444     003C                     	ds	1
  1445     003D                     ??_intToStr:
  1446     003D                     uint8ToString@left:	
  1447                           ; 1 bytes @ 0x1D
  1448                           
  1449     003D                     ___fladd@signs:	
  1450                           ; 1 bytes @ 0x1D
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x1D
  1454     003D                     	ds	1
  1455     003E                     ?_I2C_Master_Write:
  1456     003E                     ??___flmul:	
  1457                           ; 1 bytes @ 0x1E
  1458                           
  1459     003E                     uint8ToString@right:	
  1460                           ; 1 bytes @ 0x1E
  1461                           
  1462     003E                     ___fladd@aexp:	
  1463                           ; 1 bytes @ 0x1E
  1464                           
  1465     003E                     ___xxtofl@sign:	
  1466                           ; 1 bytes @ 0x1E
  1467                           
  1468     003E                     intToStr@i:	
  1469                           ; 1 bytes @ 0x1E
  1470                           
  1471     003E                     I2C_Master_Write@d:	
  1472                           ; 2 bytes @ 0x1E
  1473                           
  1474                           
  1475                           ; 2 bytes @ 0x1E
  1476     003E                     	ds	1
  1477     003F                     ??_USART_init_baud:
  1478     003F                     ??_I2C_Master_Init:	
  1479                           ; 1 bytes @ 0x1F
  1480                           
  1481     003F                     uint8ToString@temp:	
  1482                           ; 1 bytes @ 0x1F
  1483                           
  1484     003F                     ___fladd@bexp:	
  1485                           ; 1 bytes @ 0x1F
  1486                           
  1487     003F                     ___xxtofl@exp:	
  1488                           ; 1 bytes @ 0x1F
  1489                           
  1490                           
  1491                           ; 1 bytes @ 0x1F
  1492     003F                     	ds	1
  1493     0040                     ??_I2C_Master_Write:
  1494     0040                     ___fladd@grs:	
  1495                           ; 1 bytes @ 0x20
  1496                           
  1497     0040                     ___xxtofl@arg:	
  1498                           ; 1 bytes @ 0x20
  1499                           
  1500                           
  1501                           ; 4 bytes @ 0x20
  1502     0040                     	ds	1
  1503     0041                     ?___fltol:
  1504     0041                     ___fltol@f1:	
  1505                           ; 4 bytes @ 0x21
  1506                           
  1507                           
  1508                           ; 4 bytes @ 0x21
  1509     0041                     	ds	2
  1510     0043                     ___flmul@sign:
  1511     0043                     USART_init_baud@value:	
  1512                           ; 1 bytes @ 0x23
  1513                           
  1514                           
  1515                           ; 2 bytes @ 0x23
  1516     0043                     	ds	1
  1517     0044                     ?___flsub:
  1518     0044                     ___flsub@a:	
  1519                           ; 4 bytes @ 0x24
  1520                           
  1521     0044                     ___flmul@grs:	
  1522                           ; 4 bytes @ 0x24
  1523                           
  1524                           
  1525                           ; 4 bytes @ 0x24
  1526     0044                     	ds	1
  1527     0045                     ??_setup:
  1528     0045                     ??___fltol:	
  1529                           ; 1 bytes @ 0x25
  1530                           
  1531                           
  1532                           ; 1 bytes @ 0x25
  1533     0045                     	ds	3
  1534     0048                     ___flmul@aexp:
  1535     0048                     ___flsub@b:	
  1536                           ; 1 bytes @ 0x28
  1537                           
  1538                           
  1539                           ; 4 bytes @ 0x28
  1540     0048                     	ds	1
  1541     0049                     ___fltol@sign1:
  1542     0049                     ___flmul@bexp:	
  1543                           ; 1 bytes @ 0x29
  1544                           
  1545                           
  1546                           ; 1 bytes @ 0x29
  1547     0049                     	ds	1
  1548     004A                     ___fltol@exp1:
  1549     004A                     ___flmul@prod:	
  1550                           ; 1 bytes @ 0x2A
  1551                           
  1552                           
  1553                           ; 4 bytes @ 0x2A
  1554     004A                     	ds	2
  1555     004C                     ??___flsub:
  1556                           
  1557                           ; 1 bytes @ 0x2C
  1558     004C                     	ds	2
  1559     004E                     ___flmul@temp:
  1560                           
  1561                           ; 2 bytes @ 0x2E
  1562     004E                     	ds	2
  1563                           
  1564                           	psect	maintext
  1565     0038                     __pmaintext:	
  1566 ;;
  1567 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1568 ;;
  1569 ;; *************** function _main *****************
  1570 ;; Defined at:
  1571 ;;		line 166 in file "masterProyecto.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : B00/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0
  1587 ;;      Temps:          0       0       3       0       0
  1588 ;;      Totals:         0       0       3       0       0
  1589 ;;Total ram usage:        3 bytes
  1590 ;; Hardware stack levels required when called: 7
  1591 ;; This function calls:
  1592 ;;		_I2C_Master_Read
  1593 ;;		_I2C_Master_RepeatedStart
  1594 ;;		_I2C_Master_Start
  1595 ;;		_I2C_Master_Stop
  1596 ;;		_I2C_Master_Write
  1597 ;;		_Lcd_Clear
  1598 ;;		_Lcd_Set_Cursor
  1599 ;;		_Lcd_Write_Char
  1600 ;;		_Lcd_Write_String
  1601 ;;		_USART_print
  1602 ;;		___awdiv
  1603 ;;		___xxtofl
  1604 ;;		_b2d
  1605 ;;		_d2b
  1606 ;;		_floatToStr
  1607 ;;		_setup
  1608 ;;		_uint8ToString
  1609 ;; This function is called by:
  1610 ;;		Startup code after reset
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614     0038                     _main:	
  1615                           ;psect for function _main
  1616                           
  1617     0038                     l3838:	
  1618                           ;incstack = 0
  1619                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1620                           
  1621                           
  1622                           ;masterProyecto.c: 167:     setup();
  1623     0038  120A  118A  277F  120A  118A  	fcall	_setup
  1624                           
  1625                           ;masterProyecto.c: 168:     USART_print(" ");
  1626     003D  301A               	movlw	(low (((STR_3+5)-__stringbase)| (0+32768)))& (0+255)
  1627     003E  1283               	bcf	3,5	;RP0=0, select bank0
  1628     003F  1303               	bcf	3,6	;RP1=0, select bank0
  1629     0040  00AE               	movwf	USART_print@string
  1630     0041  3080               	movlw	128
  1631     0042  00AF               	movwf	USART_print@string+1
  1632     0043  160A  118A  220B  120A  118A  	fcall	_USART_print
  1633     0048                     l3840:
  1634                           
  1635                           ;masterProyecto.c: 172:     I2C_Master_Start();
  1636     0048  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  1637     004D                     l3842:
  1638                           
  1639                           ;masterProyecto.c: 173:     I2C_Master_Write(0xD0);
  1640     004D  30D0               	movlw	208
  1641     004E  1283               	bcf	3,5	;RP0=0, select bank0
  1642     004F  1303               	bcf	3,6	;RP1=0, select bank0
  1643     0050  00BE               	movwf	I2C_Master_Write@d
  1644     0051  3000               	movlw	0
  1645     0052  00BF               	movwf	I2C_Master_Write@d+1
  1646     0053  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1647     0058                     l3844:
  1648                           
  1649                           ;masterProyecto.c: 174:     I2C_Master_Write(0x00);
  1650     0058  3000               	movlw	0
  1651     0059  1283               	bcf	3,5	;RP0=0, select bank0
  1652     005A  1303               	bcf	3,6	;RP1=0, select bank0
  1653     005B  00BE               	movwf	I2C_Master_Write@d
  1654     005C  00BF               	movwf	I2C_Master_Write@d+1
  1655     005D  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1656     0062                     l3846:
  1657                           
  1658                           ;masterProyecto.c: 175:     I2C_Master_Write(d2b(sec));
  1659     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1660     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1661     0064  085E               	movf	_sec+1,w
  1662     0065  00B7               	movwf	d2b@to_convert+1
  1663     0066  085D               	movf	_sec,w
  1664     0067  00B6               	movwf	d2b@to_convert
  1665     0068  160A  118A  2491  120A  118A  	fcall	_d2b
  1666     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1667     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1668     006F  0837               	movf	?_d2b+1,w
  1669     0070  00BF               	movwf	I2C_Master_Write@d+1
  1670     0071  0836               	movf	?_d2b,w
  1671     0072  00BE               	movwf	I2C_Master_Write@d
  1672     0073  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1673     0078                     l3848:
  1674                           
  1675                           ;masterProyecto.c: 176:     I2C_Master_Stop();
  1676     0078  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1677     007D                     l3850:
  1678                           
  1679                           ;masterProyecto.c: 177:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1680     007D  3002               	movlw	2
  1681     007E  1683               	bsf	3,5	;RP0=1, select bank1
  1682     007F  1303               	bcf	3,6	;RP1=0, select bank1
  1683     0080  00D4               	movwf	(??_main^(0+128)+2)
  1684     0081  3004               	movlw	4
  1685     0082  00D3               	movwf	(??_main^(0+128)+1)
  1686     0083  30B9               	movlw	185
  1687     0084  00D2               	movwf	??_main^(0+128)
  1688     0085                     u4777:
  1689     0085  0BD2               	decfsz	??_main^(0+128),f
  1690     0086  2885               	goto	u4777
  1691     0087  0BD3               	decfsz	(??_main^(0+128)+1),f
  1692     0088  2885               	goto	u4777
  1693     0089  0BD4               	decfsz	(??_main^(0+128)+2),f
  1694     008A  2885               	goto	u4777
  1695     008B  288C               	nop2
  1696     008C                     l3852:
  1697                           
  1698                           ;masterProyecto.c: 181:     I2C_Master_Start();
  1699     008C  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  1700     0091                     l3854:
  1701                           
  1702                           ;masterProyecto.c: 182:     I2C_Master_Write(0xD0);
  1703     0091  30D0               	movlw	208
  1704     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1705     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1706     0094  00BE               	movwf	I2C_Master_Write@d
  1707     0095  3000               	movlw	0
  1708     0096  00BF               	movwf	I2C_Master_Write@d+1
  1709     0097  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1710     009C                     l3856:
  1711                           
  1712                           ;masterProyecto.c: 183:     I2C_Master_Write(0x01);
  1713     009C  3001               	movlw	1
  1714     009D  1283               	bcf	3,5	;RP0=0, select bank0
  1715     009E  1303               	bcf	3,6	;RP1=0, select bank0
  1716     009F  00BE               	movwf	I2C_Master_Write@d
  1717     00A0  3000               	movlw	0
  1718     00A1  00BF               	movwf	I2C_Master_Write@d+1
  1719     00A2  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1720     00A7                     l3858:
  1721                           
  1722                           ;masterProyecto.c: 184:     I2C_Master_Write(d2b(min));
  1723     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1724     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1725     00A9  0860               	movf	_min+1,w
  1726     00AA  00B7               	movwf	d2b@to_convert+1
  1727     00AB  085F               	movf	_min,w
  1728     00AC  00B6               	movwf	d2b@to_convert
  1729     00AD  160A  118A  2491  120A  118A  	fcall	_d2b
  1730     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1731     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1732     00B4  0837               	movf	?_d2b+1,w
  1733     00B5  00BF               	movwf	I2C_Master_Write@d+1
  1734     00B6  0836               	movf	?_d2b,w
  1735     00B7  00BE               	movwf	I2C_Master_Write@d
  1736     00B8  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1737     00BD                     l3860:
  1738                           
  1739                           ;masterProyecto.c: 185:     I2C_Master_Stop();
  1740     00BD  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1741     00C2                     l3862:
  1742                           
  1743                           ;masterProyecto.c: 186:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1744     00C2  3002               	movlw	2
  1745     00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1746     00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1747     00C5  00D4               	movwf	(??_main^(0+128)+2)
  1748     00C6  3004               	movlw	4
  1749     00C7  00D3               	movwf	(??_main^(0+128)+1)
  1750     00C8  30B9               	movlw	185
  1751     00C9  00D2               	movwf	??_main^(0+128)
  1752     00CA                     u4787:
  1753     00CA  0BD2               	decfsz	??_main^(0+128),f
  1754     00CB  28CA               	goto	u4787
  1755     00CC  0BD3               	decfsz	(??_main^(0+128)+1),f
  1756     00CD  28CA               	goto	u4787
  1757     00CE  0BD4               	decfsz	(??_main^(0+128)+2),f
  1758     00CF  28CA               	goto	u4787
  1759     00D0  28D1               	nop2
  1760     00D1                     l3864:
  1761                           
  1762                           ;masterProyecto.c: 189:     I2C_Master_Start();
  1763     00D1  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  1764     00D6                     l3866:
  1765                           
  1766                           ;masterProyecto.c: 190:     I2C_Master_Write(0xD0);
  1767     00D6  30D0               	movlw	208
  1768     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1769     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1770     00D9  00BE               	movwf	I2C_Master_Write@d
  1771     00DA  3000               	movlw	0
  1772     00DB  00BF               	movwf	I2C_Master_Write@d+1
  1773     00DC  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1774     00E1                     l3868:
  1775                           
  1776                           ;masterProyecto.c: 191:     I2C_Master_Write(0x02);
  1777     00E1  3002               	movlw	2
  1778     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1779     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1780     00E4  00BE               	movwf	I2C_Master_Write@d
  1781     00E5  3000               	movlw	0
  1782     00E6  00BF               	movwf	I2C_Master_Write@d+1
  1783     00E7  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1784     00EC                     l3870:
  1785                           
  1786                           ;masterProyecto.c: 192:     I2C_Master_Write(d2b(hour));
  1787     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1788     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1789     00EE  0862               	movf	_hour+1,w
  1790     00EF  00B7               	movwf	d2b@to_convert+1
  1791     00F0  0861               	movf	_hour,w
  1792     00F1  00B6               	movwf	d2b@to_convert
  1793     00F2  160A  118A  2491  120A  118A  	fcall	_d2b
  1794     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1795     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1796     00F9  0837               	movf	?_d2b+1,w
  1797     00FA  00BF               	movwf	I2C_Master_Write@d+1
  1798     00FB  0836               	movf	?_d2b,w
  1799     00FC  00BE               	movwf	I2C_Master_Write@d
  1800     00FD  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1801     0102                     l3872:
  1802                           
  1803                           ;masterProyecto.c: 193:     I2C_Master_Stop();
  1804     0102  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1805     0107                     l3874:
  1806                           
  1807                           ;masterProyecto.c: 194:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1808     0107  3002               	movlw	2
  1809     0108  1683               	bsf	3,5	;RP0=1, select bank1
  1810     0109  1303               	bcf	3,6	;RP1=0, select bank1
  1811     010A  00D4               	movwf	(??_main^(0+128)+2)
  1812     010B  3004               	movlw	4
  1813     010C  00D3               	movwf	(??_main^(0+128)+1)
  1814     010D  30B9               	movlw	185
  1815     010E  00D2               	movwf	??_main^(0+128)
  1816     010F                     u4797:
  1817     010F  0BD2               	decfsz	??_main^(0+128),f
  1818     0110  290F               	goto	u4797
  1819     0111  0BD3               	decfsz	(??_main^(0+128)+1),f
  1820     0112  290F               	goto	u4797
  1821     0113  0BD4               	decfsz	(??_main^(0+128)+2),f
  1822     0114  290F               	goto	u4797
  1823     0115  2916               	nop2
  1824     0116                     l3876:
  1825                           
  1826                           ;masterProyecto.c: 199:         I2C_Master_Start();
  1827     0116  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  1828     011B                     l3878:
  1829                           
  1830                           ;masterProyecto.c: 200:         I2C_Master_Write(0x50);
  1831     011B  3050               	movlw	80
  1832     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1833     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1834     011E  00BE               	movwf	I2C_Master_Write@d
  1835     011F  3000               	movlw	0
  1836     0120  00BF               	movwf	I2C_Master_Write@d+1
  1837     0121  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1838     0126                     l3880:
  1839                           
  1840                           ;masterProyecto.c: 201:         I2C_Master_Write(0);
  1841     0126  3000               	movlw	0
  1842     0127  1283               	bcf	3,5	;RP0=0, select bank0
  1843     0128  1303               	bcf	3,6	;RP1=0, select bank0
  1844     0129  00BE               	movwf	I2C_Master_Write@d
  1845     012A  00BF               	movwf	I2C_Master_Write@d+1
  1846     012B  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1847     0130                     l3882:
  1848                           
  1849                           ;masterProyecto.c: 202:         I2C_Master_Stop();
  1850     0130  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1851     0135                     l3884:
  1852                           
  1853                           ;masterProyecto.c: 203:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1854     0135  3002               	movlw	2
  1855     0136  1683               	bsf	3,5	;RP0=1, select bank1
  1856     0137  1303               	bcf	3,6	;RP1=0, select bank1
  1857     0138  00D4               	movwf	(??_main^(0+128)+2)
  1858     0139  3004               	movlw	4
  1859     013A  00D3               	movwf	(??_main^(0+128)+1)
  1860     013B  30B9               	movlw	185
  1861     013C  00D2               	movwf	??_main^(0+128)
  1862     013D                     u4807:
  1863     013D  0BD2               	decfsz	??_main^(0+128),f
  1864     013E  293D               	goto	u4807
  1865     013F  0BD3               	decfsz	(??_main^(0+128)+1),f
  1866     0140  293D               	goto	u4807
  1867     0141  0BD4               	decfsz	(??_main^(0+128)+2),f
  1868     0142  293D               	goto	u4807
  1869     0143  2944               	nop2
  1870     0144                     l3886:
  1871                           
  1872                           ;masterProyecto.c: 205:         I2C_Master_Start();
  1873     0144  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  1874     0149                     l3888:
  1875                           
  1876                           ;masterProyecto.c: 206:         I2C_Master_Write(0x51);
  1877     0149  3051               	movlw	81
  1878     014A  1283               	bcf	3,5	;RP0=0, select bank0
  1879     014B  1303               	bcf	3,6	;RP1=0, select bank0
  1880     014C  00BE               	movwf	I2C_Master_Write@d
  1881     014D  3000               	movlw	0
  1882     014E  00BF               	movwf	I2C_Master_Write@d+1
  1883     014F  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1884     0154                     l3890:
  1885                           
  1886                           ;masterProyecto.c: 207:         qPulse_Value = I2C_Master_Read(0);
  1887     0154  3000               	movlw	0
  1888     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1889     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1890     0157  00AD               	movwf	I2C_Master_Read@a
  1891     0158  00AE               	movwf	I2C_Master_Read@a+1
  1892     0159  160A  118A  2124  120A  118A  	fcall	_I2C_Master_Read
  1893     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1894     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1895     0160  082D               	movf	?_I2C_Master_Read,w
  1896     0161  00DA               	movwf	_qPulse_Value
  1897     0162                     l3892:
  1898                           
  1899                           ;masterProyecto.c: 208:         I2C_Master_Stop();
  1900     0162  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1901     0167                     l3894:
  1902                           
  1903                           ;masterProyecto.c: 209:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1904     0167  3002               	movlw	2
  1905     0168  1683               	bsf	3,5	;RP0=1, select bank1
  1906     0169  1303               	bcf	3,6	;RP1=0, select bank1
  1907     016A  00D4               	movwf	(??_main^(0+128)+2)
  1908     016B  3004               	movlw	4
  1909     016C  00D3               	movwf	(??_main^(0+128)+1)
  1910     016D  30B9               	movlw	185
  1911     016E  00D2               	movwf	??_main^(0+128)
  1912     016F                     u4817:
  1913     016F  0BD2               	decfsz	??_main^(0+128),f
  1914     0170  296F               	goto	u4817
  1915     0171  0BD3               	decfsz	(??_main^(0+128)+1),f
  1916     0172  296F               	goto	u4817
  1917     0173  0BD4               	decfsz	(??_main^(0+128)+2),f
  1918     0174  296F               	goto	u4817
  1919     0175  2976               	nop2
  1920     0176                     l3896:
  1921                           
  1922                           ;masterProyecto.c: 214:         I2C_Master_Start();
  1923     0176  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  1924     017B                     l3898:
  1925                           
  1926                           ;masterProyecto.c: 215:         I2C_Master_Write(0x80);
  1927     017B  3080               	movlw	128
  1928     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1929     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1930     017E  00BE               	movwf	I2C_Master_Write@d
  1931     017F  3000               	movlw	0
  1932     0180  00BF               	movwf	I2C_Master_Write@d+1
  1933     0181  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1934     0186                     l3900:
  1935                           
  1936                           ;masterProyecto.c: 216:         I2C_Master_Write(0);
  1937     0186  3000               	movlw	0
  1938     0187  1283               	bcf	3,5	;RP0=0, select bank0
  1939     0188  1303               	bcf	3,6	;RP1=0, select bank0
  1940     0189  00BE               	movwf	I2C_Master_Write@d
  1941     018A  00BF               	movwf	I2C_Master_Write@d+1
  1942     018B  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1943     0190                     l3902:
  1944                           
  1945                           ;masterProyecto.c: 217:         I2C_Master_Stop();
  1946     0190  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1947     0195                     l3904:
  1948                           
  1949                           ;masterProyecto.c: 218:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1950     0195  3002               	movlw	2
  1951     0196  1683               	bsf	3,5	;RP0=1, select bank1
  1952     0197  1303               	bcf	3,6	;RP1=0, select bank1
  1953     0198  00D4               	movwf	(??_main^(0+128)+2)
  1954     0199  3004               	movlw	4
  1955     019A  00D3               	movwf	(??_main^(0+128)+1)
  1956     019B  30B9               	movlw	185
  1957     019C  00D2               	movwf	??_main^(0+128)
  1958     019D                     u4827:
  1959     019D  0BD2               	decfsz	??_main^(0+128),f
  1960     019E  299D               	goto	u4827
  1961     019F  0BD3               	decfsz	(??_main^(0+128)+1),f
  1962     01A0  299D               	goto	u4827
  1963     01A1  0BD4               	decfsz	(??_main^(0+128)+2),f
  1964     01A2  299D               	goto	u4827
  1965     01A3  29A4               	nop2
  1966     01A4                     l3906:
  1967                           
  1968                           ;masterProyecto.c: 220:         I2C_Master_Start();
  1969     01A4  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  1970     01A9                     l3908:
  1971                           
  1972                           ;masterProyecto.c: 221:         I2C_Master_Write(0x81);
  1973     01A9  3081               	movlw	129
  1974     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1975     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1976     01AC  00BE               	movwf	I2C_Master_Write@d
  1977     01AD  3000               	movlw	0
  1978     01AE  00BF               	movwf	I2C_Master_Write@d+1
  1979     01AF  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  1980     01B4                     l3910:
  1981                           
  1982                           ;masterProyecto.c: 222:         HumidityValue = I2C_Master_Read(0);
  1983     01B4  3000               	movlw	0
  1984     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1985     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1986     01B7  00AD               	movwf	I2C_Master_Read@a
  1987     01B8  00AE               	movwf	I2C_Master_Read@a+1
  1988     01B9  160A  118A  2124  120A  118A  	fcall	_I2C_Master_Read
  1989     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1990     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1991     01C0  082D               	movf	?_I2C_Master_Read,w
  1992     01C1  00D8               	movwf	_HumidityValue
  1993     01C2                     l3912:
  1994                           
  1995                           ;masterProyecto.c: 223:         I2C_Master_Stop();
  1996     01C2  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1997     01C7                     l3914:
  1998                           
  1999                           ;masterProyecto.c: 224:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2000     01C7  3002               	movlw	2
  2001     01C8  1683               	bsf	3,5	;RP0=1, select bank1
  2002     01C9  1303               	bcf	3,6	;RP1=0, select bank1
  2003     01CA  00D4               	movwf	(??_main^(0+128)+2)
  2004     01CB  3004               	movlw	4
  2005     01CC  00D3               	movwf	(??_main^(0+128)+1)
  2006     01CD  30B9               	movlw	185
  2007     01CE  00D2               	movwf	??_main^(0+128)
  2008     01CF                     u4837:
  2009     01CF  0BD2               	decfsz	??_main^(0+128),f
  2010     01D0  29CF               	goto	u4837
  2011     01D1  0BD3               	decfsz	(??_main^(0+128)+1),f
  2012     01D2  29CF               	goto	u4837
  2013     01D3  0BD4               	decfsz	(??_main^(0+128)+2),f
  2014     01D4  29CF               	goto	u4837
  2015     01D5  29D6               	nop2
  2016     01D6                     l3916:
  2017                           
  2018                           ;masterProyecto.c: 226:         I2C_Master_Start();
  2019     01D6  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  2020     01DB                     l3918:
  2021                           
  2022                           ;masterProyecto.c: 227:         I2C_Master_Write(0x80);
  2023     01DB  3080               	movlw	128
  2024     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2025     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2026     01DE  00BE               	movwf	I2C_Master_Write@d
  2027     01DF  3000               	movlw	0
  2028     01E0  00BF               	movwf	I2C_Master_Write@d+1
  2029     01E1  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2030     01E6                     l3920:
  2031                           
  2032                           ;masterProyecto.c: 228:         I2C_Master_Write(1);
  2033     01E6  3001               	movlw	1
  2034     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2035     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2036     01E9  00BE               	movwf	I2C_Master_Write@d
  2037     01EA  3000               	movlw	0
  2038     01EB  00BF               	movwf	I2C_Master_Write@d+1
  2039     01EC  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2040     01F1                     l3922:
  2041                           
  2042                           ;masterProyecto.c: 229:         I2C_Master_Stop();
  2043     01F1  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  2044     01F6                     l3924:
  2045                           
  2046                           ;masterProyecto.c: 230:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2047     01F6  3002               	movlw	2
  2048     01F7  1683               	bsf	3,5	;RP0=1, select bank1
  2049     01F8  1303               	bcf	3,6	;RP1=0, select bank1
  2050     01F9  00D4               	movwf	(??_main^(0+128)+2)
  2051     01FA  3004               	movlw	4
  2052     01FB  00D3               	movwf	(??_main^(0+128)+1)
  2053     01FC  30B9               	movlw	185
  2054     01FD  00D2               	movwf	??_main^(0+128)
  2055     01FE                     u4847:
  2056     01FE  0BD2               	decfsz	??_main^(0+128),f
  2057     01FF  29FE               	goto	u4847
  2058     0200  0BD3               	decfsz	(??_main^(0+128)+1),f
  2059     0201  29FE               	goto	u4847
  2060     0202  0BD4               	decfsz	(??_main^(0+128)+2),f
  2061     0203  29FE               	goto	u4847
  2062     0204  2A05               	nop2
  2063     0205                     l3926:
  2064                           
  2065                           ;masterProyecto.c: 232:         I2C_Master_Start();
  2066     0205  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  2067     020A                     l3928:
  2068                           
  2069                           ;masterProyecto.c: 233:         I2C_Master_Write(0x81);
  2070     020A  3081               	movlw	129
  2071     020B  1283               	bcf	3,5	;RP0=0, select bank0
  2072     020C  1303               	bcf	3,6	;RP1=0, select bank0
  2073     020D  00BE               	movwf	I2C_Master_Write@d
  2074     020E  3000               	movlw	0
  2075     020F  00BF               	movwf	I2C_Master_Write@d+1
  2076     0210  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2077     0215                     l3930:
  2078                           
  2079                           ;masterProyecto.c: 234:         TemperatureValue = I2C_Master_Read(0);
  2080     0215  3000               	movlw	0
  2081     0216  1283               	bcf	3,5	;RP0=0, select bank0
  2082     0217  1303               	bcf	3,6	;RP1=0, select bank0
  2083     0218  00AD               	movwf	I2C_Master_Read@a
  2084     0219  00AE               	movwf	I2C_Master_Read@a+1
  2085     021A  160A  118A  2124  120A  118A  	fcall	_I2C_Master_Read
  2086     021F  1283               	bcf	3,5	;RP0=0, select bank0
  2087     0220  1303               	bcf	3,6	;RP1=0, select bank0
  2088     0221  082D               	movf	?_I2C_Master_Read,w
  2089     0222  00D9               	movwf	_TemperatureValue
  2090     0223                     l3932:
  2091                           
  2092                           ;masterProyecto.c: 235:         I2C_Master_Stop();
  2093     0223  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  2094     0228                     l3934:
  2095                           
  2096                           ;masterProyecto.c: 236:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2097     0228  3002               	movlw	2
  2098     0229  1683               	bsf	3,5	;RP0=1, select bank1
  2099     022A  1303               	bcf	3,6	;RP1=0, select bank1
  2100     022B  00D4               	movwf	(??_main^(0+128)+2)
  2101     022C  3004               	movlw	4
  2102     022D  00D3               	movwf	(??_main^(0+128)+1)
  2103     022E  30B9               	movlw	185
  2104     022F  00D2               	movwf	??_main^(0+128)
  2105     0230                     u4857:
  2106     0230  0BD2               	decfsz	??_main^(0+128),f
  2107     0231  2A30               	goto	u4857
  2108     0232  0BD3               	decfsz	(??_main^(0+128)+1),f
  2109     0233  2A30               	goto	u4857
  2110     0234  0BD4               	decfsz	(??_main^(0+128)+2),f
  2111     0235  2A30               	goto	u4857
  2112     0236  2A37               	nop2
  2113     0237                     l3936:
  2114                           
  2115                           ;masterProyecto.c: 243:         I2C_Master_Start();
  2116     0237  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  2117     023C                     l3938:
  2118                           
  2119                           ;masterProyecto.c: 244:         I2C_Master_Write(0xD0);
  2120     023C  30D0               	movlw	208
  2121     023D  1283               	bcf	3,5	;RP0=0, select bank0
  2122     023E  1303               	bcf	3,6	;RP1=0, select bank0
  2123     023F  00BE               	movwf	I2C_Master_Write@d
  2124     0240  3000               	movlw	0
  2125     0241  00BF               	movwf	I2C_Master_Write@d+1
  2126     0242  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2127     0247                     l3940:
  2128                           
  2129                           ;masterProyecto.c: 245:         I2C_Master_Write(0x00);
  2130     0247  3000               	movlw	0
  2131     0248  1283               	bcf	3,5	;RP0=0, select bank0
  2132     0249  1303               	bcf	3,6	;RP1=0, select bank0
  2133     024A  00BE               	movwf	I2C_Master_Write@d
  2134     024B  00BF               	movwf	I2C_Master_Write@d+1
  2135     024C  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2136     0251                     l3942:
  2137                           
  2138                           ;masterProyecto.c: 246:         I2C_Master_RepeatedStart();
  2139     0251  160A  158A  2755  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2140     0256                     l3944:
  2141                           
  2142                           ;masterProyecto.c: 247:         I2C_Master_Write(0xD1);
  2143     0256  30D1               	movlw	209
  2144     0257  1283               	bcf	3,5	;RP0=0, select bank0
  2145     0258  1303               	bcf	3,6	;RP1=0, select bank0
  2146     0259  00BE               	movwf	I2C_Master_Write@d
  2147     025A  3000               	movlw	0
  2148     025B  00BF               	movwf	I2C_Master_Write@d+1
  2149     025C  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2150     0261                     l3946:
  2151                           
  2152                           ;masterProyecto.c: 248:         sec = b2d(I2C_Master_Read(0));
  2153     0261  3000               	movlw	0
  2154     0262  1283               	bcf	3,5	;RP0=0, select bank0
  2155     0263  1303               	bcf	3,6	;RP1=0, select bank0
  2156     0264  00AD               	movwf	I2C_Master_Read@a
  2157     0265  00AE               	movwf	I2C_Master_Read@a+1
  2158     0266  160A  118A  2124  120A  118A  	fcall	_I2C_Master_Read
  2159     026B  1283               	bcf	3,5	;RP0=0, select bank0
  2160     026C  1303               	bcf	3,6	;RP1=0, select bank0
  2161     026D  082E               	movf	?_I2C_Master_Read+1,w
  2162     026E  00B4               	movwf	b2d@to_convert+1
  2163     026F  082D               	movf	?_I2C_Master_Read,w
  2164     0270  00B3               	movwf	b2d@to_convert
  2165     0271  160A  118A  20D2  120A  118A  	fcall	_b2d
  2166     0276  1283               	bcf	3,5	;RP0=0, select bank0
  2167     0277  1303               	bcf	3,6	;RP1=0, select bank0
  2168     0278  0834               	movf	?_b2d+1,w
  2169     0279  00DE               	movwf	_sec+1
  2170     027A  0833               	movf	?_b2d,w
  2171     027B  00DD               	movwf	_sec
  2172     027C                     l3948:
  2173                           
  2174                           ;masterProyecto.c: 249:         I2C_Master_Stop();
  2175     027C  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  2176     0281                     l3950:
  2177                           
  2178                           ;masterProyecto.c: 252:         I2C_Master_Start();
  2179     0281  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  2180     0286                     l3952:
  2181                           
  2182                           ;masterProyecto.c: 253:         I2C_Master_Write(0xD0);
  2183     0286  30D0               	movlw	208
  2184     0287  1283               	bcf	3,5	;RP0=0, select bank0
  2185     0288  1303               	bcf	3,6	;RP1=0, select bank0
  2186     0289  00BE               	movwf	I2C_Master_Write@d
  2187     028A  3000               	movlw	0
  2188     028B  00BF               	movwf	I2C_Master_Write@d+1
  2189     028C  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2190     0291                     l3954:
  2191                           
  2192                           ;masterProyecto.c: 254:         I2C_Master_Write(0x01);
  2193     0291  3001               	movlw	1
  2194     0292  1283               	bcf	3,5	;RP0=0, select bank0
  2195     0293  1303               	bcf	3,6	;RP1=0, select bank0
  2196     0294  00BE               	movwf	I2C_Master_Write@d
  2197     0295  3000               	movlw	0
  2198     0296  00BF               	movwf	I2C_Master_Write@d+1
  2199     0297  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2200     029C                     l3956:
  2201                           
  2202                           ;masterProyecto.c: 255:         I2C_Master_RepeatedStart();
  2203     029C  160A  158A  2755  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2204     02A1                     l3958:
  2205                           
  2206                           ;masterProyecto.c: 256:         I2C_Master_Write(0xD1);
  2207     02A1  30D1               	movlw	209
  2208     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2209     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2210     02A4  00BE               	movwf	I2C_Master_Write@d
  2211     02A5  3000               	movlw	0
  2212     02A6  00BF               	movwf	I2C_Master_Write@d+1
  2213     02A7  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2214     02AC                     l3960:
  2215                           
  2216                           ;masterProyecto.c: 257:         min = b2d(I2C_Master_Read(0));
  2217     02AC  3000               	movlw	0
  2218     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2219     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2220     02AF  00AD               	movwf	I2C_Master_Read@a
  2221     02B0  00AE               	movwf	I2C_Master_Read@a+1
  2222     02B1  160A  118A  2124  120A  118A  	fcall	_I2C_Master_Read
  2223     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2224     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2225     02B8  082E               	movf	?_I2C_Master_Read+1,w
  2226     02B9  00B4               	movwf	b2d@to_convert+1
  2227     02BA  082D               	movf	?_I2C_Master_Read,w
  2228     02BB  00B3               	movwf	b2d@to_convert
  2229     02BC  160A  118A  20D2  120A  118A  	fcall	_b2d
  2230     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2231     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2232     02C3  0834               	movf	?_b2d+1,w
  2233     02C4  00E0               	movwf	_min+1
  2234     02C5  0833               	movf	?_b2d,w
  2235     02C6  00DF               	movwf	_min
  2236     02C7                     l3962:
  2237                           
  2238                           ;masterProyecto.c: 258:         I2C_Master_Stop();
  2239     02C7  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  2240     02CC                     l3964:
  2241                           
  2242                           ;masterProyecto.c: 261:         I2C_Master_Start();
  2243     02CC  160A  158A  275E  120A  118A  	fcall	_I2C_Master_Start
  2244     02D1                     l3966:
  2245                           
  2246                           ;masterProyecto.c: 262:         I2C_Master_Write(0xD0);
  2247     02D1  30D0               	movlw	208
  2248     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2249     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2250     02D4  00BE               	movwf	I2C_Master_Write@d
  2251     02D5  3000               	movlw	0
  2252     02D6  00BF               	movwf	I2C_Master_Write@d+1
  2253     02D7  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2254     02DC                     l3968:
  2255                           
  2256                           ;masterProyecto.c: 263:         I2C_Master_Write(0x02);
  2257     02DC  3002               	movlw	2
  2258     02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2259     02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2260     02DF  00BE               	movwf	I2C_Master_Write@d
  2261     02E0  3000               	movlw	0
  2262     02E1  00BF               	movwf	I2C_Master_Write@d+1
  2263     02E2  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2264     02E7                     l3970:
  2265                           
  2266                           ;masterProyecto.c: 264:         I2C_Master_RepeatedStart();
  2267     02E7  160A  158A  2755  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2268     02EC                     l3972:
  2269                           
  2270                           ;masterProyecto.c: 265:         I2C_Master_Write(0xD1);
  2271     02EC  30D1               	movlw	209
  2272     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2273     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2274     02EF  00BE               	movwf	I2C_Master_Write@d
  2275     02F0  3000               	movlw	0
  2276     02F1  00BF               	movwf	I2C_Master_Write@d+1
  2277     02F2  160A  118A  2038  120A  118A  	fcall	_I2C_Master_Write
  2278     02F7                     l3974:
  2279                           
  2280                           ;masterProyecto.c: 266:         hour = b2d(I2C_Master_Read(0));
  2281     02F7  3000               	movlw	0
  2282     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2283     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2284     02FA  00AD               	movwf	I2C_Master_Read@a
  2285     02FB  00AE               	movwf	I2C_Master_Read@a+1
  2286     02FC  160A  118A  2124  120A  118A  	fcall	_I2C_Master_Read
  2287     0301  1283               	bcf	3,5	;RP0=0, select bank0
  2288     0302  1303               	bcf	3,6	;RP1=0, select bank0
  2289     0303  082E               	movf	?_I2C_Master_Read+1,w
  2290     0304  00B4               	movwf	b2d@to_convert+1
  2291     0305  082D               	movf	?_I2C_Master_Read,w
  2292     0306  00B3               	movwf	b2d@to_convert
  2293     0307  160A  118A  20D2  120A  118A  	fcall	_b2d
  2294     030C  1283               	bcf	3,5	;RP0=0, select bank0
  2295     030D  1303               	bcf	3,6	;RP1=0, select bank0
  2296     030E  0834               	movf	?_b2d+1,w
  2297     030F  00E2               	movwf	_hour+1
  2298     0310  0833               	movf	?_b2d,w
  2299     0311  00E1               	movwf	_hour
  2300     0312                     l3976:
  2301                           
  2302                           ;masterProyecto.c: 267:         I2C_Master_Stop();
  2303     0312  160A  158A  2767  120A  118A  	fcall	_I2C_Master_Stop
  2304     0317                     l3978:
  2305                           
  2306                           ;masterProyecto.c: 269:        uint8ToString(hour,bufferHour);
  2307     0317  30B8               	movlw	(low (_bufferHour| 0))& (0+255)
  2308     0318  1283               	bcf	3,5	;RP0=0, select bank0
  2309     0319  1303               	bcf	3,6	;RP1=0, select bank0
  2310     031A  00B6               	movwf	uint8ToString@str
  2311     031B  0861               	movf	_hour,w
  2312     031C  160A  118A  2779  120A  118A  	fcall	_uint8ToString
  2313     0321                     l3980:
  2314                           
  2315                           ;masterProyecto.c: 270:         uint8ToString(sec,bufferSec);
  2316     0321  30B4               	movlw	(low (_bufferSec| 0))& (0+255)
  2317     0322  1283               	bcf	3,5	;RP0=0, select bank0
  2318     0323  1303               	bcf	3,6	;RP1=0, select bank0
  2319     0324  00B6               	movwf	uint8ToString@str
  2320     0325  085D               	movf	_sec,w
  2321     0326  160A  118A  2779  120A  118A  	fcall	_uint8ToString
  2322     032B                     l3982:
  2323                           
  2324                           ;masterProyecto.c: 271:         uint8ToString(min,bufferMin);
  2325     032B  30B0               	movlw	(low (_bufferMin| 0))& (0+255)
  2326     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2327     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2328     032E  00B6               	movwf	uint8ToString@str
  2329     032F  085F               	movf	_min,w
  2330     0330  160A  118A  2779  120A  118A  	fcall	_uint8ToString
  2331     0335                     l3984:
  2332                           
  2333                           ;masterProyecto.c: 277:         Lcd_Clear();
  2334     0335  160A  158A  27AD  120A  118A  	fcall	_Lcd_Clear
  2335     033A                     l3986:
  2336                           
  2337                           ;masterProyecto.c: 278:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2338     033A  3020               	movlw	32
  2339     033B  1683               	bsf	3,5	;RP0=1, select bank1
  2340     033C  1303               	bcf	3,6	;RP1=0, select bank1
  2341     033D  00D2               	movwf	??_main^(0+128)
  2342     033E                     u4867:
  2343     033E  0BD2               	decfsz	??_main^(0+128),f
  2344     033F  2B3E               	goto	u4867
  2345     0340  0000               	nop
  2346                           
  2347                           ;masterProyecto.c: 279:         Lcd_Set_Cursor(1,1);
  2348     0341  1283               	bcf	3,5	;RP0=0, select bank0
  2349     0342  1303               	bcf	3,6	;RP1=0, select bank0
  2350     0343  01B1               	clrf	Lcd_Set_Cursor@b
  2351     0344  0AB1               	incf	Lcd_Set_Cursor@b,f
  2352     0345  3001               	movlw	1
  2353     0346  160A  118A  22DF  120A  118A  	fcall	_Lcd_Set_Cursor
  2354     034B                     l3988:
  2355                           
  2356                           ;masterProyecto.c: 280:         Lcd_Write_String("Time: ");
  2357     034B  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2358     034C  1283               	bcf	3,5	;RP0=0, select bank0
  2359     034D  1303               	bcf	3,6	;RP1=0, select bank0
  2360     034E  00B2               	movwf	Lcd_Write_String@a
  2361     034F  3080               	movlw	128
  2362     0350  00B3               	movwf	Lcd_Write_String@a+1
  2363     0351  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2364     0356                     l3990:
  2365                           
  2366                           ;masterProyecto.c: 281:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2367     0356  3020               	movlw	32
  2368     0357  1683               	bsf	3,5	;RP0=1, select bank1
  2369     0358  1303               	bcf	3,6	;RP1=0, select bank1
  2370     0359  00D2               	movwf	??_main^(0+128)
  2371     035A                     u4877:
  2372     035A  0BD2               	decfsz	??_main^(0+128),f
  2373     035B  2B5A               	goto	u4877
  2374     035C  0000               	nop
  2375     035D                     l3992:
  2376                           
  2377                           ;masterProyecto.c: 282:         Lcd_Write_String(bufferHour);
  2378     035D  30B8               	movlw	(low (_bufferHour| 0))& (0+255)
  2379     035E  1283               	bcf	3,5	;RP0=0, select bank0
  2380     035F  1303               	bcf	3,6	;RP1=0, select bank0
  2381     0360  00B2               	movwf	Lcd_Write_String@a
  2382     0361  3000               	movlw	0
  2383     0362  00B3               	movwf	Lcd_Write_String@a+1
  2384     0363  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2385     0368                     l3994:
  2386                           
  2387                           ;masterProyecto.c: 283:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2388     0368  3020               	movlw	32
  2389     0369  1683               	bsf	3,5	;RP0=1, select bank1
  2390     036A  1303               	bcf	3,6	;RP1=0, select bank1
  2391     036B  00D2               	movwf	??_main^(0+128)
  2392     036C                     u4887:
  2393     036C  0BD2               	decfsz	??_main^(0+128),f
  2394     036D  2B6C               	goto	u4887
  2395     036E  0000               	nop
  2396                           
  2397                           ;masterProyecto.c: 284:         Lcd_Write_Char(':');
  2398     036F  303A               	movlw	58
  2399     0370  160A  118A  2156  120A  118A  	fcall	_Lcd_Write_Char
  2400     0375                     l3996:
  2401                           
  2402                           ;masterProyecto.c: 285:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2403     0375  3020               	movlw	32
  2404     0376  1683               	bsf	3,5	;RP0=1, select bank1
  2405     0377  1303               	bcf	3,6	;RP1=0, select bank1
  2406     0378  00D2               	movwf	??_main^(0+128)
  2407     0379                     u4897:
  2408     0379  0BD2               	decfsz	??_main^(0+128),f
  2409     037A  2B79               	goto	u4897
  2410     037B  0000               	nop
  2411     037C                     l3998:
  2412                           
  2413                           ;masterProyecto.c: 286:         Lcd_Write_String(bufferMin);
  2414     037C  30B0               	movlw	(low (_bufferMin| 0))& (0+255)
  2415     037D  1283               	bcf	3,5	;RP0=0, select bank0
  2416     037E  1303               	bcf	3,6	;RP1=0, select bank0
  2417     037F  00B2               	movwf	Lcd_Write_String@a
  2418     0380  3000               	movlw	0
  2419     0381  00B3               	movwf	Lcd_Write_String@a+1
  2420     0382  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2421     0387                     l4000:
  2422                           
  2423                           ;masterProyecto.c: 287:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2424     0387  3020               	movlw	32
  2425     0388  1683               	bsf	3,5	;RP0=1, select bank1
  2426     0389  1303               	bcf	3,6	;RP1=0, select bank1
  2427     038A  00D2               	movwf	??_main^(0+128)
  2428     038B                     u4907:
  2429     038B  0BD2               	decfsz	??_main^(0+128),f
  2430     038C  2B8B               	goto	u4907
  2431     038D  0000               	nop
  2432     038E                     l4002:
  2433                           
  2434                           ;masterProyecto.c: 288:         Lcd_Write_Char(':');
  2435     038E  303A               	movlw	58
  2436     038F  160A  118A  2156  120A  118A  	fcall	_Lcd_Write_Char
  2437     0394                     l4004:
  2438                           
  2439                           ;masterProyecto.c: 289:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2440     0394  3020               	movlw	32
  2441     0395  1683               	bsf	3,5	;RP0=1, select bank1
  2442     0396  1303               	bcf	3,6	;RP1=0, select bank1
  2443     0397  00D2               	movwf	??_main^(0+128)
  2444     0398                     u4917:
  2445     0398  0BD2               	decfsz	??_main^(0+128),f
  2446     0399  2B98               	goto	u4917
  2447     039A  0000               	nop
  2448     039B                     l4006:
  2449                           
  2450                           ;masterProyecto.c: 290:         Lcd_Write_String(bufferSec);
  2451     039B  30B4               	movlw	(low (_bufferSec| 0))& (0+255)
  2452     039C  1283               	bcf	3,5	;RP0=0, select bank0
  2453     039D  1303               	bcf	3,6	;RP1=0, select bank0
  2454     039E  00B2               	movwf	Lcd_Write_String@a
  2455     039F  3000               	movlw	0
  2456     03A0  00B3               	movwf	Lcd_Write_String@a+1
  2457     03A1  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2458                           
  2459                           ;masterProyecto.c: 292:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2460     03A6  3020               	movlw	32
  2461     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2462     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2463     03A9  00D2               	movwf	??_main^(0+128)
  2464     03AA                     u4927:
  2465     03AA  0BD2               	decfsz	??_main^(0+128),f
  2466     03AB  2BAA               	goto	u4927
  2467     03AC  0000               	nop
  2468     03AD                     l4008:
  2469                           
  2470                           ;masterProyecto.c: 295:         caudal = qPulse_Value/(98/2);
  2471     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2472     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2473     03AF  085A               	movf	_qPulse_Value,w
  2474     03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2475     03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2476     03B2  00D2               	movwf	??_main^(0+128)
  2477     03B3  01D3               	clrf	(??_main^(0+128)+1)
  2478     03B4  0852               	movf	??_main^(0+128),w
  2479     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2480     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2481     03B7  00AF               	movwf	___awdiv@dividend
  2482     03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2483     03B9  1303               	bcf	3,6	;RP1=0, select bank1
  2484     03BA  0853               	movf	(??_main+1)^(0+128),w
  2485     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2486     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2487     03BD  00B0               	movwf	___awdiv@dividend+1
  2488     03BE  3031               	movlw	49
  2489     03BF  00AD               	movwf	___awdiv@divisor
  2490     03C0  3000               	movlw	0
  2491     03C1  00AE               	movwf	___awdiv@divisor+1
  2492     03C2  160A  118A  2623  120A  118A  	fcall	___awdiv
  2493     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2494     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2495     03C9  082D               	movf	?___awdiv,w
  2496     03CA  00B6               	movwf	___xxtofl@val
  2497     03CB  082E               	movf	?___awdiv+1,w
  2498     03CC  00B7               	movwf	___xxtofl@val+1
  2499     03CD  3000               	movlw	0
  2500     03CE  1BB7               	btfsc	___xxtofl@val+1,7
  2501     03CF  30FF               	movlw	255
  2502     03D0  00B8               	movwf	___xxtofl@val+2
  2503     03D1  00B9               	movwf	___xxtofl@val+3
  2504     03D2  3001               	movlw	1
  2505     03D3  120A  158A  20BA  120A  118A  	fcall	___xxtofl
  2506     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2507     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2508     03DA  0839               	movf	?___xxtofl+3,w
  2509     03DB  1683               	bsf	3,5	;RP0=1, select bank1
  2510     03DC  1303               	bcf	3,6	;RP1=0, select bank1
  2511     03DD  00A3               	movwf	(_caudal+3)^(0+128)
  2512     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2513     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2514     03E0  0838               	movf	?___xxtofl+2,w
  2515     03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2516     03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2517     03E3  00A2               	movwf	(_caudal+2)^(0+128)
  2518     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2519     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2520     03E6  0837               	movf	?___xxtofl+1,w
  2521     03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2522     03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2523     03E9  00A1               	movwf	(_caudal+1)^(0+128)
  2524     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2525     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2526     03EC  0836               	movf	?___xxtofl,w
  2527     03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2528     03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2529     03EF  00A0               	movwf	_caudal^(0+128)
  2530     03F0                     l4010:
  2531                           
  2532                           ;masterProyecto.c: 296:         floatToStr(caudal, bufferQ, 1);
  2533     03F0  0823               	movf	(_caudal+3)^(0+128),w
  2534     03F1  00BF               	movwf	(floatToStr@value+3)^(0+128)
  2535     03F2  0822               	movf	(_caudal+2)^(0+128),w
  2536     03F3  00BE               	movwf	(floatToStr@value+2)^(0+128)
  2537     03F4  0821               	movf	(_caudal+1)^(0+128),w
  2538     03F5  00BD               	movwf	(floatToStr@value+1)^(0+128)
  2539     03F6  0820               	movf	_caudal^(0+128),w
  2540     03F7  00BC               	movwf	floatToStr@value^(0+128)
  2541     03F8  30AC               	movlw	(low (_bufferQ| 0))& (0+255)
  2542     03F9  00C0               	movwf	floatToStr@buffer^(0+128)
  2543     03FA  3001               	movlw	1
  2544     03FB  00C1               	movwf	floatToStr@precision^(0+128)
  2545     03FC  3000               	movlw	0
  2546     03FD  00C2               	movwf	(floatToStr@precision^(0+128)+1)
  2547     03FE  120A  158A  22C9  120A  118A  	fcall	_floatToStr
  2548     0403                     l4012:
  2549                           
  2550                           ;masterProyecto.c: 297:         uint8ToString(TemperatureValue, bufferTemp);
  2551     0403  30A4               	movlw	(low (_bufferTemp| 0))& (0+255)
  2552     0404  1283               	bcf	3,5	;RP0=0, select bank0
  2553     0405  1303               	bcf	3,6	;RP1=0, select bank0
  2554     0406  00B6               	movwf	uint8ToString@str
  2555     0407  0859               	movf	_TemperatureValue,w
  2556     0408  160A  118A  2779  120A  118A  	fcall	_uint8ToString
  2557     040D                     l4014:
  2558                           
  2559                           ;masterProyecto.c: 298:         uint8ToString(HumidityValue,bufferHum);
  2560     040D  30A8               	movlw	(low (_bufferHum| 0))& (0+255)
  2561     040E  1283               	bcf	3,5	;RP0=0, select bank0
  2562     040F  1303               	bcf	3,6	;RP1=0, select bank0
  2563     0410  00B6               	movwf	uint8ToString@str
  2564     0411  0858               	movf	_HumidityValue,w
  2565     0412  160A  118A  2779  120A  118A  	fcall	_uint8ToString
  2566     0417                     l4016:
  2567                           
  2568                           ;masterProyecto.c: 302:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2569     0417  3020               	movlw	32
  2570     0418  1683               	bsf	3,5	;RP0=1, select bank1
  2571     0419  1303               	bcf	3,6	;RP1=0, select bank1
  2572     041A  00D2               	movwf	??_main^(0+128)
  2573     041B                     u4937:
  2574     041B  0BD2               	decfsz	??_main^(0+128),f
  2575     041C  2C1B               	goto	u4937
  2576     041D  0000               	nop
  2577     041E                     l4018:
  2578                           
  2579                           ;masterProyecto.c: 303:         Lcd_Set_Cursor(2,1);
  2580     041E  1283               	bcf	3,5	;RP0=0, select bank0
  2581     041F  1303               	bcf	3,6	;RP1=0, select bank0
  2582     0420  01B1               	clrf	Lcd_Set_Cursor@b
  2583     0421  0AB1               	incf	Lcd_Set_Cursor@b,f
  2584     0422  3002               	movlw	2
  2585     0423  160A  118A  22DF  120A  118A  	fcall	_Lcd_Set_Cursor
  2586     0428                     l4020:
  2587                           
  2588                           ;masterProyecto.c: 304:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2589     0428  3020               	movlw	32
  2590     0429  1683               	bsf	3,5	;RP0=1, select bank1
  2591     042A  1303               	bcf	3,6	;RP1=0, select bank1
  2592     042B  00D2               	movwf	??_main^(0+128)
  2593     042C                     u4947:
  2594     042C  0BD2               	decfsz	??_main^(0+128),f
  2595     042D  2C2C               	goto	u4947
  2596     042E  0000               	nop
  2597     042F                     l4022:
  2598                           
  2599                           ;masterProyecto.c: 305:         Lcd_Write_String("Q:");
  2600     042F  301F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2601     0430  1283               	bcf	3,5	;RP0=0, select bank0
  2602     0431  1303               	bcf	3,6	;RP1=0, select bank0
  2603     0432  00B2               	movwf	Lcd_Write_String@a
  2604     0433  3080               	movlw	128
  2605     0434  00B3               	movwf	Lcd_Write_String@a+1
  2606     0435  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2607                           
  2608                           ;masterProyecto.c: 306:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2609     043A  3020               	movlw	32
  2610     043B  1683               	bsf	3,5	;RP0=1, select bank1
  2611     043C  1303               	bcf	3,6	;RP1=0, select bank1
  2612     043D  00D2               	movwf	??_main^(0+128)
  2613     043E                     u4957:
  2614     043E  0BD2               	decfsz	??_main^(0+128),f
  2615     043F  2C3E               	goto	u4957
  2616     0440  0000               	nop
  2617     0441                     l4024:
  2618                           
  2619                           ;masterProyecto.c: 307:         Lcd_Write_String(bufferQ);
  2620     0441  30AC               	movlw	(low (_bufferQ| 0))& (0+255)
  2621     0442  1283               	bcf	3,5	;RP0=0, select bank0
  2622     0443  1303               	bcf	3,6	;RP1=0, select bank0
  2623     0444  00B2               	movwf	Lcd_Write_String@a
  2624     0445  3000               	movlw	0
  2625     0446  00B3               	movwf	Lcd_Write_String@a+1
  2626     0447  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2627     044C                     l4026:
  2628                           
  2629                           ;masterProyecto.c: 308:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2630     044C  3020               	movlw	32
  2631     044D  1683               	bsf	3,5	;RP0=1, select bank1
  2632     044E  1303               	bcf	3,6	;RP1=0, select bank1
  2633     044F  00D2               	movwf	??_main^(0+128)
  2634     0450                     u4967:
  2635     0450  0BD2               	decfsz	??_main^(0+128),f
  2636     0451  2C50               	goto	u4967
  2637     0452  0000               	nop
  2638                           
  2639                           ;masterProyecto.c: 309:         Lcd_Write_String(" ");
  2640     0453  301A               	movlw	(low (((STR_3+5)-__stringbase)| (0+32768)))& (0+255)
  2641     0454  1283               	bcf	3,5	;RP0=0, select bank0
  2642     0455  1303               	bcf	3,6	;RP1=0, select bank0
  2643     0456  00B2               	movwf	Lcd_Write_String@a
  2644     0457  3080               	movlw	128
  2645     0458  00B3               	movwf	Lcd_Write_String@a+1
  2646     0459  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2647     045E                     l4028:
  2648                           
  2649                           ;masterProyecto.c: 310:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2650     045E  3020               	movlw	32
  2651     045F  1683               	bsf	3,5	;RP0=1, select bank1
  2652     0460  1303               	bcf	3,6	;RP1=0, select bank1
  2653     0461  00D2               	movwf	??_main^(0+128)
  2654     0462                     u4977:
  2655     0462  0BD2               	decfsz	??_main^(0+128),f
  2656     0463  2C62               	goto	u4977
  2657     0464  0000               	nop
  2658     0465                     l4030:
  2659                           
  2660                           ;masterProyecto.c: 311:         Lcd_Write_String("H:");
  2661     0465  301C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2662     0466  1283               	bcf	3,5	;RP0=0, select bank0
  2663     0467  1303               	bcf	3,6	;RP1=0, select bank0
  2664     0468  00B2               	movwf	Lcd_Write_String@a
  2665     0469  3080               	movlw	128
  2666     046A  00B3               	movwf	Lcd_Write_String@a+1
  2667     046B  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2668                           
  2669                           ;masterProyecto.c: 312:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2670     0470  3020               	movlw	32
  2671     0471  1683               	bsf	3,5	;RP0=1, select bank1
  2672     0472  1303               	bcf	3,6	;RP1=0, select bank1
  2673     0473  00D2               	movwf	??_main^(0+128)
  2674     0474                     u4987:
  2675     0474  0BD2               	decfsz	??_main^(0+128),f
  2676     0475  2C74               	goto	u4987
  2677     0476  0000               	nop
  2678     0477                     l4032:
  2679                           
  2680                           ;masterProyecto.c: 313:         Lcd_Write_String(bufferHum);
  2681     0477  30A8               	movlw	(low (_bufferHum| 0))& (0+255)
  2682     0478  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0479  1303               	bcf	3,6	;RP1=0, select bank0
  2684     047A  00B2               	movwf	Lcd_Write_String@a
  2685     047B  3000               	movlw	0
  2686     047C  00B3               	movwf	Lcd_Write_String@a+1
  2687     047D  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2688     0482                     l4034:
  2689                           
  2690                           ;masterProyecto.c: 315:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2691     0482  3020               	movlw	32
  2692     0483  1683               	bsf	3,5	;RP0=1, select bank1
  2693     0484  1303               	bcf	3,6	;RP1=0, select bank1
  2694     0485  00D2               	movwf	??_main^(0+128)
  2695     0486                     u4997:
  2696     0486  0BD2               	decfsz	??_main^(0+128),f
  2697     0487  2C86               	goto	u4997
  2698     0488  0000               	nop
  2699                           
  2700                           ;masterProyecto.c: 316:         Lcd_Write_String(" ");
  2701     0489  301A               	movlw	(low (((STR_3+5)-__stringbase)| (0+32768)))& (0+255)
  2702     048A  1283               	bcf	3,5	;RP0=0, select bank0
  2703     048B  1303               	bcf	3,6	;RP1=0, select bank0
  2704     048C  00B2               	movwf	Lcd_Write_String@a
  2705     048D  3080               	movlw	128
  2706     048E  00B3               	movwf	Lcd_Write_String@a+1
  2707     048F  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2708     0494                     l4036:
  2709                           
  2710                           ;masterProyecto.c: 317:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2711     0494  3020               	movlw	32
  2712     0495  1683               	bsf	3,5	;RP0=1, select bank1
  2713     0496  1303               	bcf	3,6	;RP1=0, select bank1
  2714     0497  00D2               	movwf	??_main^(0+128)
  2715     0498                     u5007:
  2716     0498  0BD2               	decfsz	??_main^(0+128),f
  2717     0499  2C98               	goto	u5007
  2718     049A  0000               	nop
  2719     049B                     l4038:
  2720                           
  2721                           ;masterProyecto.c: 318:         Lcd_Write_String("T:");
  2722     049B  3022               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2723     049C  1283               	bcf	3,5	;RP0=0, select bank0
  2724     049D  1303               	bcf	3,6	;RP1=0, select bank0
  2725     049E  00B2               	movwf	Lcd_Write_String@a
  2726     049F  3080               	movlw	128
  2727     04A0  00B3               	movwf	Lcd_Write_String@a+1
  2728     04A1  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2729                           
  2730                           ;masterProyecto.c: 319:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2731     04A6  3020               	movlw	32
  2732     04A7  1683               	bsf	3,5	;RP0=1, select bank1
  2733     04A8  1303               	bcf	3,6	;RP1=0, select bank1
  2734     04A9  00D2               	movwf	??_main^(0+128)
  2735     04AA                     u5017:
  2736     04AA  0BD2               	decfsz	??_main^(0+128),f
  2737     04AB  2CAA               	goto	u5017
  2738     04AC  0000               	nop
  2739     04AD                     l4040:
  2740                           
  2741                           ;masterProyecto.c: 320:         Lcd_Write_String(bufferTemp);
  2742     04AD  30A4               	movlw	(low (_bufferTemp| 0))& (0+255)
  2743     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2744     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2745     04B0  00B2               	movwf	Lcd_Write_String@a
  2746     04B1  3000               	movlw	0
  2747     04B2  00B3               	movwf	Lcd_Write_String@a+1
  2748     04B3  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  2749     04B8                     l4042:
  2750                           
  2751                           ;masterProyecto.c: 321:          _delay((unsigned long)((50)*(8000000/4000000.0)));
  2752     04B8  3020               	movlw	32
  2753     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  2754     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  2755     04BB  00D2               	movwf	??_main^(0+128)
  2756     04BC                     u5027:
  2757     04BC  0BD2               	decfsz	??_main^(0+128),f
  2758     04BD  2CBC               	goto	u5027
  2759     04BE  0000               	nop
  2760     04BF                     l4044:
  2761                           
  2762                           ;masterProyecto.c: 323:         if (ala_hour == hour){
  2763     04BF  3012               	movlw	18
  2764     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2765     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2766     04C2  0661               	xorwf	_hour,w
  2767     04C3  0462               	iorwf	_hour+1,w
  2768     04C4  1D03               	btfss	3,2
  2769     04C5  2CC7               	goto	u4711
  2770     04C6  2CC8               	goto	u4710
  2771     04C7                     u4711:
  2772     04C7  2D14               	goto	l4062
  2773     04C8                     u4710:
  2774     04C8                     l4046:
  2775                           
  2776                           ;masterProyecto.c: 324:             if (ala_min == min){
  2777     04C8  085F               	movf	_min,w
  2778     04C9  0460               	iorwf	_min+1,w
  2779     04CA  1D03               	btfss	3,2
  2780     04CB  2CCD               	goto	u4721
  2781     04CC  2CCE               	goto	u4720
  2782     04CD                     u4721:
  2783     04CD  2D14               	goto	l4062
  2784     04CE                     u4720:
  2785     04CE                     l4048:
  2786                           
  2787                           ;masterProyecto.c: 325:                 if (ala_sec == sec){
  2788     04CE  085D               	movf	_sec,w
  2789     04CF  045E               	iorwf	_sec+1,w
  2790     04D0  1D03               	btfss	3,2
  2791     04D1  2CD3               	goto	u4731
  2792     04D2  2CD4               	goto	u4730
  2793     04D3                     u4731:
  2794     04D3  2D14               	goto	l4062
  2795     04D4                     u4730:
  2796     04D4                     l4050:
  2797                           
  2798                           ;masterProyecto.c: 326:                 PORTA = 0b00000001;
  2799     04D4  3001               	movlw	1
  2800     04D5  0085               	movwf	5	;volatile
  2801                           
  2802                           ;masterProyecto.c: 327:                 bufferAlarm = "1";
  2803     04D6  3027               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2804     04D7  00D7               	movwf	_bufferAlarm
  2805                           
  2806                           ;masterProyecto.c: 330:                 if (HumidityValue<= 69){
  2807     04D8  3046               	movlw	70
  2808     04D9  0258               	subwf	_HumidityValue,w
  2809     04DA  1803               	skipnc
  2810     04DB  2CDD               	goto	u4741
  2811     04DC  2CDE               	goto	u4740
  2812     04DD                     u4741:
  2813     04DD  2CEE               	goto	l4054
  2814     04DE                     u4740:
  2815     04DE                     l4052:
  2816                           
  2817                           ;masterProyecto.c: 331:                     _delay((unsigned long)((9000)*(8000000/4000.
      +                          0)));
  2818     04DE  305C               	movlw	92
  2819     04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2820     04E0  1303               	bcf	3,6	;RP1=0, select bank1
  2821     04E1  00D4               	movwf	(??_main^(0+128)+2)
  2822     04E2  3051               	movlw	81
  2823     04E3  00D3               	movwf	(??_main^(0+128)+1)
  2824     04E4  305F               	movlw	95
  2825     04E5  00D2               	movwf	??_main^(0+128)
  2826     04E6                     u5037:
  2827     04E6  0BD2               	decfsz	??_main^(0+128),f
  2828     04E7  2CE6               	goto	u5037
  2829     04E8  0BD3               	decfsz	(??_main^(0+128)+1),f
  2830     04E9  2CE6               	goto	u5037
  2831     04EA  0BD4               	decfsz	(??_main^(0+128)+2),f
  2832     04EB  2CE6               	goto	u5037
  2833     04EC  2CED               	nop2
  2834                           
  2835                           ;masterProyecto.c: 332:                 } else if (HumidityValue >= 91){
  2836     04ED  2D11               	goto	l4060
  2837     04EE                     l4054:
  2838     04EE  305B               	movlw	91
  2839     04EF  0258               	subwf	_HumidityValue,w
  2840     04F0  1C03               	skipc
  2841     04F1  2CF3               	goto	u4751
  2842     04F2  2CF4               	goto	u4750
  2843     04F3                     u4751:
  2844     04F3  2D03               	goto	l4058
  2845     04F4                     u4750:
  2846     04F4                     l4056:
  2847                           
  2848                           ;masterProyecto.c: 333:                     _delay((unsigned long)((2900)*(8000000/4000.
      +                          0)));
  2849     04F4  301E               	movlw	30
  2850     04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2851     04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2852     04F7  00D4               	movwf	(??_main^(0+128)+2)
  2853     04F8  306D               	movlw	109
  2854     04F9  00D3               	movwf	(??_main^(0+128)+1)
  2855     04FA  3061               	movlw	97
  2856     04FB  00D2               	movwf	??_main^(0+128)
  2857     04FC                     u5047:
  2858     04FC  0BD2               	decfsz	??_main^(0+128),f
  2859     04FD  2CFC               	goto	u5047
  2860     04FE  0BD3               	decfsz	(??_main^(0+128)+1),f
  2861     04FF  2CFC               	goto	u5047
  2862     0500  0BD4               	decfsz	(??_main^(0+128)+2),f
  2863     0501  2CFC               	goto	u5047
  2864                           
  2865                           ;masterProyecto.c: 334:                 }else {
  2866     0502  2D11               	goto	l4060
  2867     0503                     l4058:
  2868                           
  2869                           ;masterProyecto.c: 335:                     _delay((unsigned long)((3600)*(8000000/4000.
      +                          0)));
  2870     0503  3025               	movlw	37
  2871     0504  1683               	bsf	3,5	;RP0=1, select bank1
  2872     0505  1303               	bcf	3,6	;RP1=0, select bank1
  2873     0506  00D4               	movwf	(??_main^(0+128)+2)
  2874     0507  3087               	movlw	135
  2875     0508  00D3               	movwf	(??_main^(0+128)+1)
  2876     0509  308B               	movlw	139
  2877     050A  00D2               	movwf	??_main^(0+128)
  2878     050B                     u5057:
  2879     050B  0BD2               	decfsz	??_main^(0+128),f
  2880     050C  2D0B               	goto	u5057
  2881     050D  0BD3               	decfsz	(??_main^(0+128)+1),f
  2882     050E  2D0B               	goto	u5057
  2883     050F  0BD4               	decfsz	(??_main^(0+128)+2),f
  2884     0510  2D0B               	goto	u5057
  2885     0511                     l4060:
  2886                           
  2887                           ;masterProyecto.c: 337:                 PORTA = 0;
  2888     0511  1283               	bcf	3,5	;RP0=0, select bank0
  2889     0512  1303               	bcf	3,6	;RP1=0, select bank0
  2890     0513  0185               	clrf	5	;volatile
  2891     0514                     l4062:
  2892                           
  2893                           ;masterProyecto.c: 342:          if (TemperatureValue >= 27 ){
  2894     0514  301B               	movlw	27
  2895     0515  0259               	subwf	_TemperatureValue,w
  2896     0516  1C03               	skipc
  2897     0517  2D19               	goto	u4761
  2898     0518  2D1A               	goto	u4760
  2899     0519                     u4761:
  2900     0519  2D1F               	goto	l4066
  2901     051A                     u4760:
  2902     051A                     l4064:
  2903                           
  2904                           ;masterProyecto.c: 343:              on_time = 21;
  2905     051A  3015               	movlw	21
  2906     051B  00D0               	movwf	_on_time
  2907     051C  3000               	movlw	0
  2908     051D  00D1               	movwf	_on_time+1
  2909                           
  2910                           ;masterProyecto.c: 344:          }else {
  2911     051E  2916               	goto	l3876
  2912     051F                     l4066:
  2913                           
  2914                           ;masterProyecto.c: 345:              on_time = 10;
  2915     051F  300A               	movlw	10
  2916     0520  00D0               	movwf	_on_time
  2917     0521  3000               	movlw	0
  2918     0522  00D1               	movwf	_on_time+1
  2919     0523  2916               	goto	l3876
  2920     0524  120A  118A  2812   	ljmp	start
  2921     0527                     __end_of_main:
  2922                           
  2923                           	psect	text1
  2924     1779                     __ptext1:	
  2925 ;; *************** function _uint8ToString *****************
  2926 ;; Defined at:
  2927 ;;		line 416 in file "masterProyecto.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  num             1    wreg     unsigned char 
  2930 ;;  str             1   22[BANK0 ] PTR unsigned char 
  2931 ;;		 -> bufferMin(4), bufferSec(4), bufferHour(4), bufferHum(4), 
  2932 ;;		 -> bufferTemp(4), 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  num             1   26[BANK0 ] unsigned char 
  2935 ;;  tempChar        1   27[BANK0 ] unsigned char 
  2936 ;;  temp            1   31[BANK0 ] unsigned char 
  2937 ;;  right           1   30[BANK0 ] char 
  2938 ;;  left            1   29[BANK0 ] char 
  2939 ;;  i               1   28[BANK0 ] char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         0       1       0       0       0
  2950 ;;      Locals:         0       6       0       0       0
  2951 ;;      Temps:          0       3       0       0       0
  2952 ;;      Totals:         0      10       0       0       0
  2953 ;;Total ram usage:       10 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 4
  2956 ;; This function calls:
  2957 ;;		___awdiv
  2958 ;;		___awmod
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964     1779                     _uint8ToString:	
  2965                           ;psect for function _uint8ToString
  2966                           
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in _uint8ToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2970                           ;uint8ToString@num stored from wreg
  2971     1779  1283               	bcf	3,5	;RP0=0, select bank0
  2972     177A  1303               	bcf	3,6	;RP1=0, select bank0
  2973     177B  00BA               	movwf	uint8ToString@num
  2974     177C                     l3348:
  2975                           
  2976                           ;masterProyecto.c: 417:     uint8_t temp = num;
  2977     177C  083A               	movf	uint8ToString@num,w
  2978     177D  00BF               	movwf	uint8ToString@temp
  2979     177E                     l3350:
  2980                           
  2981                           ;masterProyecto.c: 418:     int8_t i = 0;
  2982     177E  01BC               	clrf	uint8ToString@i
  2983     177F                     l3352:
  2984                           
  2985                           ;masterProyecto.c: 421:     if (temp == 0) {
  2986     177F  083F               	movf	uint8ToString@temp,w
  2987     1780  1D03               	btfss	3,2
  2988     1781  2F83               	goto	u4361
  2989     1782  2F84               	goto	u4360
  2990     1783                     u4361:
  2991     1783  2FC0               	goto	l3366
  2992     1784                     u4360:
  2993     1784                     l3354:
  2994                           
  2995                           ;masterProyecto.c: 422:         str[0] = '0';
  2996     1784  0836               	movf	uint8ToString@str,w
  2997     1785  0084               	movwf	4
  2998     1786  3030               	movlw	48
  2999     1787  1383               	bcf	3,7	;select IRP bank0
  3000     1788  0080               	movwf	0
  3001     1789                     l3356:
  3002                           
  3003                           ;masterProyecto.c: 423:         str[1] = '\0';
  3004     1789  0A36               	incf	uint8ToString@str,w
  3005     178A  0084               	movwf	4
  3006     178B  0180               	clrf	0
  3007     178C  2FFF               	goto	l182
  3008     178D                     l3360:
  3009                           
  3010                           ;masterProyecto.c: 429:         str[i++] = '0' + (temp % 10);
  3011     178D  083C               	movf	uint8ToString@i,w
  3012     178E  0736               	addwf	uint8ToString@str,w
  3013     178F  00B7               	movwf	??_uint8ToString
  3014     1790  0837               	movf	??_uint8ToString,w
  3015     1791  0084               	movwf	4
  3016     1792  300A               	movlw	10
  3017     1793  00AD               	movwf	___awmod@divisor
  3018     1794  3000               	movlw	0
  3019     1795  00AE               	movwf	___awmod@divisor+1
  3020     1796  083F               	movf	uint8ToString@temp,w
  3021     1797  00B8               	movwf	??_uint8ToString+1
  3022     1798  01B9               	clrf	??_uint8ToString+2
  3023     1799  0838               	movf	??_uint8ToString+1,w
  3024     179A  00AF               	movwf	___awmod@dividend
  3025     179B  0839               	movf	??_uint8ToString+2,w
  3026     179C  00B0               	movwf	___awmod@dividend+1
  3027     179D  160A  118A  23D9  160A  118A  	fcall	___awmod
  3028     17A2  1283               	bcf	3,5	;RP0=0, select bank0
  3029     17A3  1303               	bcf	3,6	;RP1=0, select bank0
  3030     17A4  082D               	movf	?___awmod,w
  3031     17A5  3E30               	addlw	48
  3032     17A6  1383               	bcf	3,7	;select IRP bank0
  3033     17A7  0080               	movwf	0
  3034     17A8                     l3362:
  3035     17A8  3001               	movlw	1
  3036     17A9  00B7               	movwf	??_uint8ToString
  3037     17AA  0837               	movf	??_uint8ToString,w
  3038     17AB  07BC               	addwf	uint8ToString@i,f
  3039     17AC                     l3364:
  3040                           
  3041                           ;masterProyecto.c: 430:         temp /= 10;
  3042     17AC  300A               	movlw	10
  3043     17AD  00AD               	movwf	___awdiv@divisor
  3044     17AE  3000               	movlw	0
  3045     17AF  00AE               	movwf	___awdiv@divisor+1
  3046     17B0  083F               	movf	uint8ToString@temp,w
  3047     17B1  00B7               	movwf	??_uint8ToString
  3048     17B2  01B8               	clrf	??_uint8ToString+1
  3049     17B3  0837               	movf	??_uint8ToString,w
  3050     17B4  00AF               	movwf	___awdiv@dividend
  3051     17B5  0838               	movf	??_uint8ToString+1,w
  3052     17B6  00B0               	movwf	___awdiv@dividend+1
  3053     17B7  160A  118A  2623  160A  118A  	fcall	___awdiv
  3054     17BC  1283               	bcf	3,5	;RP0=0, select bank0
  3055     17BD  1303               	bcf	3,6	;RP1=0, select bank0
  3056     17BE  082D               	movf	?___awdiv,w
  3057     17BF  00BF               	movwf	uint8ToString@temp
  3058     17C0                     l3366:
  3059                           
  3060                           ;masterProyecto.c: 428:     while (temp > 0) {
  3061     17C0  083F               	movf	uint8ToString@temp,w
  3062     17C1  1D03               	btfss	3,2
  3063     17C2  2FC4               	goto	u4371
  3064     17C3  2FC5               	goto	u4370
  3065     17C4                     u4371:
  3066     17C4  2F8D               	goto	l3360
  3067     17C5                     u4370:
  3068     17C5                     l3368:
  3069                           
  3070                           ;masterProyecto.c: 434:     str[i] = '\0';
  3071     17C5  083C               	movf	uint8ToString@i,w
  3072     17C6  0736               	addwf	uint8ToString@str,w
  3073     17C7  00B7               	movwf	??_uint8ToString
  3074     17C8  0837               	movf	??_uint8ToString,w
  3075     17C9  0084               	movwf	4
  3076     17CA  1383               	bcf	3,7	;select IRP bank0
  3077     17CB  0180               	clrf	0
  3078     17CC                     l3370:
  3079                           
  3080                           ;masterProyecto.c: 437:     int8_t left = 0;
  3081     17CC  01BD               	clrf	uint8ToString@left
  3082     17CD                     l3372:
  3083                           
  3084                           ;masterProyecto.c: 438:     int8_t right = i - 1;
  3085     17CD  083C               	movf	uint8ToString@i,w
  3086     17CE  3EFF               	addlw	-1
  3087     17CF  00BE               	movwf	uint8ToString@right
  3088                           
  3089                           ;masterProyecto.c: 439:     while (left < right) {
  3090     17D0  2FF5               	goto	l3380
  3091     17D1                     l3374:
  3092                           
  3093                           ;masterProyecto.c: 440:         char tempChar = str[left];
  3094     17D1  083D               	movf	uint8ToString@left,w
  3095     17D2  0736               	addwf	uint8ToString@str,w
  3096     17D3  00B7               	movwf	??_uint8ToString
  3097     17D4  0837               	movf	??_uint8ToString,w
  3098     17D5  0084               	movwf	4
  3099     17D6  0800               	movf	0,w
  3100     17D7  00BB               	movwf	uint8ToString@tempChar
  3101                           
  3102                           ;masterProyecto.c: 441:         str[left] = str[right];
  3103     17D8  083E               	movf	uint8ToString@right,w
  3104     17D9  0736               	addwf	uint8ToString@str,w
  3105     17DA  00B7               	movwf	??_uint8ToString
  3106     17DB  0837               	movf	??_uint8ToString,w
  3107     17DC  0084               	movwf	4
  3108     17DD  0800               	movf	0,w
  3109     17DE  00B8               	movwf	??_uint8ToString+1
  3110     17DF  083D               	movf	uint8ToString@left,w
  3111     17E0  0736               	addwf	uint8ToString@str,w
  3112     17E1  00B9               	movwf	??_uint8ToString+2
  3113     17E2  0839               	movf	??_uint8ToString+2,w
  3114     17E3  0084               	movwf	4
  3115     17E4  0838               	movf	??_uint8ToString+1,w
  3116     17E5  0080               	movwf	0
  3117                           
  3118                           ;masterProyecto.c: 442:         str[right] = tempChar;
  3119     17E6  083E               	movf	uint8ToString@right,w
  3120     17E7  0736               	addwf	uint8ToString@str,w
  3121     17E8  00B7               	movwf	??_uint8ToString
  3122     17E9  0837               	movf	??_uint8ToString,w
  3123     17EA  0084               	movwf	4
  3124     17EB  083B               	movf	uint8ToString@tempChar,w
  3125     17EC  0080               	movwf	0
  3126     17ED                     l3376:
  3127                           
  3128                           ;masterProyecto.c: 443:         left++;
  3129     17ED  3001               	movlw	1
  3130     17EE  00B7               	movwf	??_uint8ToString
  3131     17EF  0837               	movf	??_uint8ToString,w
  3132     17F0  07BD               	addwf	uint8ToString@left,f
  3133     17F1                     l3378:
  3134                           
  3135                           ;masterProyecto.c: 444:         right--;
  3136     17F1  30FF               	movlw	255
  3137     17F2  00B7               	movwf	??_uint8ToString
  3138     17F3  0837               	movf	??_uint8ToString,w
  3139     17F4  07BE               	addwf	uint8ToString@right,f
  3140     17F5                     l3380:
  3141                           
  3142                           ;masterProyecto.c: 439:     while (left < right) {
  3143     17F5  083D               	movf	uint8ToString@left,w
  3144     17F6  3A80               	xorlw	128
  3145     17F7  00B7               	movwf	??_uint8ToString
  3146     17F8  083E               	movf	uint8ToString@right,w
  3147     17F9  3A80               	xorlw	128
  3148     17FA  02B7               	subwf	??_uint8ToString,f
  3149     17FB  1C03               	skipc
  3150     17FC  2FFE               	goto	u4381
  3151     17FD  2FFF               	goto	u4380
  3152     17FE                     u4381:
  3153     17FE  2FD1               	goto	l3374
  3154     17FF                     u4380:
  3155     17FF                     l182:
  3156     17FF  0008               	return
  3157     1800                     __end_of_uint8ToString:
  3158                           
  3159                           	psect	text2
  3160     077F                     __ptext2:	
  3161 ;; *************** function _setup *****************
  3162 ;; Defined at:
  3163 ;;		line 357 in file "masterProyecto.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3177 ;;      Params:         0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0
  3180 ;;      Totals:         0       0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 6
  3184 ;; This function calls:
  3185 ;;		_I2C_Master_Init
  3186 ;;		_Lcd_Clear
  3187 ;;		_Lcd_Init
  3188 ;;		_Lcd_Set_Cursor
  3189 ;;		_Lcd_Write_String
  3190 ;;		_USART_init_baud
  3191 ;;		_ioc_init
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197     077F                     _setup:	
  3198                           ;psect for function _setup
  3199                           
  3200     077F                     l3286:	
  3201                           ;incstack = 0
  3202                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3203                           
  3204                           
  3205                           ;masterProyecto.c: 359:     OSCCONbits.IRCF2 = 1;
  3206     077F  1683               	bsf	3,5	;RP0=1, select bank1
  3207     0780  1303               	bcf	3,6	;RP1=0, select bank1
  3208     0781  170F               	bsf	15,6	;volatile
  3209                           
  3210                           ;masterProyecto.c: 360:     OSCCONbits.IRCF1 = 1;
  3211     0782  168F               	bsf	15,5	;volatile
  3212                           
  3213                           ;masterProyecto.c: 361:     OSCCONbits.IRCF0 = 1;
  3214     0783  160F               	bsf	15,4	;volatile
  3215                           
  3216                           ;masterProyecto.c: 362:     OSCCONbits.SCS = 1;
  3217     0784  140F               	bsf	15,0	;volatile
  3218     0785                     l3288:
  3219                           
  3220                           ;masterProyecto.c: 363:     ANSEL = 0;
  3221     0785  1683               	bsf	3,5	;RP0=1, select bank3
  3222     0786  1703               	bsf	3,6	;RP1=1, select bank3
  3223     0787  0188               	clrf	8	;volatile
  3224                           
  3225                           ;masterProyecto.c: 364:     ANSELH = 0;
  3226     0788  0189               	clrf	9	;volatile
  3227                           
  3228                           ;masterProyecto.c: 365:     TRISA =0;
  3229     0789  1683               	bsf	3,5	;RP0=1, select bank1
  3230     078A  1303               	bcf	3,6	;RP1=0, select bank1
  3231     078B  0185               	clrf	5	;volatile
  3232                           
  3233                           ;masterProyecto.c: 366:     PORTA = 0;
  3234     078C  1283               	bcf	3,5	;RP0=0, select bank0
  3235     078D  1303               	bcf	3,6	;RP1=0, select bank0
  3236     078E  0185               	clrf	5	;volatile
  3237     078F                     l3290:
  3238                           
  3239                           ;masterProyecto.c: 367:     ioc_init(0xFF);
  3240     078F  30FF               	movlw	255
  3241     0790  160A  158A  27E4  120A  118A  	fcall	_ioc_init
  3242     0795                     l3292:
  3243                           
  3244                           ;masterProyecto.c: 368:     TRISD = 0;
  3245     0795  1683               	bsf	3,5	;RP0=1, select bank1
  3246     0796  1303               	bcf	3,6	;RP1=0, select bank1
  3247     0797  0188               	clrf	8	;volatile
  3248     0798                     l3294:
  3249                           
  3250                           ;masterProyecto.c: 369:     PORTB = 0;
  3251     0798  1283               	bcf	3,5	;RP0=0, select bank0
  3252     0799  1303               	bcf	3,6	;RP1=0, select bank0
  3253     079A  0186               	clrf	6	;volatile
  3254     079B                     l3296:
  3255                           
  3256                           ;masterProyecto.c: 370:     PORTD = 0;
  3257     079B  0188               	clrf	8	;volatile
  3258                           
  3259                           ;masterProyecto.c: 372:     USART_init_baud(9600);
  3260     079C  3000               	movlw	0
  3261     079D  00BE               	movwf	USART_init_baud@baudrate+3
  3262     079E  3000               	movlw	0
  3263     079F  00BD               	movwf	USART_init_baud@baudrate+2
  3264     07A0  3025               	movlw	37
  3265     07A1  00BC               	movwf	USART_init_baud@baudrate+1
  3266     07A2  3080               	movlw	128
  3267     07A3  00BB               	movwf	USART_init_baud@baudrate
  3268     07A4  160A  118A  232B  120A  118A  	fcall	_USART_init_baud
  3269     07A9                     l3298:
  3270                           
  3271                           ;masterProyecto.c: 374:     INTCONbits.PEIE = 1;
  3272     07A9  170B               	bsf	11,6	;volatile
  3273     07AA                     l3300:
  3274                           
  3275                           ;masterProyecto.c: 375:     INTCONbits.GIE = 1;
  3276     07AA  178B               	bsf	11,7	;volatile
  3277                           
  3278                           ;masterProyecto.c: 376:     I2C_Master_Init(100000);
  3279     07AB  3000               	movlw	0
  3280     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3281     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3282     07AE  00BE               	movwf	I2C_Master_Init@c+3
  3283     07AF  3001               	movlw	1
  3284     07B0  00BD               	movwf	I2C_Master_Init@c+2
  3285     07B1  3086               	movlw	134
  3286     07B2  00BC               	movwf	I2C_Master_Init@c+1
  3287     07B3  30A0               	movlw	160
  3288     07B4  00BB               	movwf	I2C_Master_Init@c
  3289     07B5  160A  118A  218F  120A  118A  	fcall	_I2C_Master_Init
  3290                           
  3291                           ;masterProyecto.c: 378:     Lcd_Init();
  3292     07BA  160A  118A  24F2  120A  118A  	fcall	_Lcd_Init
  3293                           
  3294                           ;masterProyecto.c: 379:      Lcd_Clear();
  3295     07BF  160A  158A  27AD  120A  118A  	fcall	_Lcd_Clear
  3296                           
  3297                           ;masterProyecto.c: 380:         Lcd_Set_Cursor(1,1);
  3298     07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3299     07C5  1303               	bcf	3,6	;RP1=0, select bank0
  3300     07C6  01B1               	clrf	Lcd_Set_Cursor@b
  3301     07C7  0AB1               	incf	Lcd_Set_Cursor@b,f
  3302     07C8  3001               	movlw	1
  3303     07C9  160A  118A  22DF  120A  118A  	fcall	_Lcd_Set_Cursor
  3304     07CE                     l3302:
  3305                           
  3306                           ;masterProyecto.c: 382:         Lcd_Write_String("Bienvenido");
  3307     07CE  3001               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3308     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  3309     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  3310     07D1  00B2               	movwf	Lcd_Write_String@a
  3311     07D2  3080               	movlw	128
  3312     07D3  00B3               	movwf	Lcd_Write_String@a+1
  3313     07D4  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  3314     07D9                     l3304:
  3315                           
  3316                           ;masterProyecto.c: 383:         Lcd_Set_Cursor(2,1);
  3317     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  3318     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  3319     07DB  01B1               	clrf	Lcd_Set_Cursor@b
  3320     07DC  0AB1               	incf	Lcd_Set_Cursor@b,f
  3321     07DD  3002               	movlw	2
  3322     07DE  160A  118A  22DF  120A  118A  	fcall	_Lcd_Set_Cursor
  3323                           
  3324                           ;masterProyecto.c: 384:         Lcd_Write_String("Cargando");
  3325     07E3  300C               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3326     07E4  1283               	bcf	3,5	;RP0=0, select bank0
  3327     07E5  1303               	bcf	3,6	;RP1=0, select bank0
  3328     07E6  00B2               	movwf	Lcd_Write_String@a
  3329     07E7  3080               	movlw	128
  3330     07E8  00B3               	movwf	Lcd_Write_String@a+1
  3331     07E9  160A  118A  2251  120A  118A  	fcall	_Lcd_Write_String
  3332     07EE                     l3306:
  3333                           
  3334                           ;masterProyecto.c: 388: T0CS = 0;
  3335     07EE  1683               	bsf	3,5	;RP0=1, select bank1
  3336     07EF  1303               	bcf	3,6	;RP1=0, select bank1
  3337     07F0  1281               	bcf	1,5	;volatile
  3338     07F1                     l3308:
  3339                           
  3340                           ;masterProyecto.c: 389: T0SE = 0;
  3341     07F1  1201               	bcf	1,4	;volatile
  3342     07F2                     l3310:
  3343                           
  3344                           ;masterProyecto.c: 390: PSA = 0;
  3345     07F2  1181               	bcf	1,3	;volatile
  3346     07F3                     l3312:
  3347                           
  3348                           ;masterProyecto.c: 391: PS2 = 0;
  3349     07F3  1101               	bcf	1,2	;volatile
  3350     07F4                     l3314:
  3351                           
  3352                           ;masterProyecto.c: 392: PS1 = 0;
  3353     07F4  1081               	bcf	1,1	;volatile
  3354     07F5                     l3316:
  3355                           
  3356                           ;masterProyecto.c: 393: PS0 = 1;
  3357     07F5  1401               	bsf	1,0	;volatile
  3358     07F6                     l3318:
  3359                           
  3360                           ;masterProyecto.c: 394: TMR0 = 217;
  3361     07F6  30D9               	movlw	217
  3362     07F7  1283               	bcf	3,5	;RP0=0, select bank0
  3363     07F8  1303               	bcf	3,6	;RP1=0, select bank0
  3364     07F9  0081               	movwf	1	;volatile
  3365     07FA                     l3320:
  3366                           
  3367                           ;masterProyecto.c: 395: T0IE = 1;
  3368     07FA  168B               	bsf	11,5	;volatile
  3369     07FB                     l3322:
  3370                           
  3371                           ;masterProyecto.c: 396: T0IF = 0;
  3372     07FB  110B               	bcf	11,2	;volatile
  3373     07FC                     l169:
  3374     07FC  0008               	return
  3375     07FD                     __end_of_setup:
  3376                           
  3377                           	psect	text3
  3378     1FE4                     __ptext3:	
  3379 ;; *************** function _ioc_init *****************
  3380 ;; Defined at:
  3381 ;;		line 5 in file "IOCB.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  pin             1    wreg     unsigned char 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  pin             1   13[BANK0 ] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  2   60[None  ] int 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       0       0       0       0
  3396 ;;      Locals:         0       1       0       0       0
  3397 ;;      Temps:          0       0       0       0       0
  3398 ;;      Totals:         0       1       0       0       0
  3399 ;;Total ram usage:        1 bytes
  3400 ;; Hardware stack levels used: 1
  3401 ;; Hardware stack levels required when called: 3
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_setup
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409     1FE4                     _ioc_init:	
  3410                           ;psect for function _ioc_init
  3411                           
  3412                           
  3413                           ;incstack = 0
  3414                           ; Regs used in _ioc_init: [wreg+status,2]
  3415                           ;ioc_init@pin stored from wreg
  3416     1FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3417     1FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3418     1FE6  00AD               	movwf	ioc_init@pin
  3419     1FE7                     l2804:
  3420                           
  3421                           ;IOCB.c: 6:     TRISB = pin;
  3422     1FE7  082D               	movf	ioc_init@pin,w
  3423     1FE8  1683               	bsf	3,5	;RP0=1, select bank1
  3424     1FE9  1303               	bcf	3,6	;RP1=0, select bank1
  3425     1FEA  0086               	movwf	6	;volatile
  3426                           
  3427                           ;IOCB.c: 7:     WPUB = pin;
  3428     1FEB  1283               	bcf	3,5	;RP0=0, select bank0
  3429     1FEC  1303               	bcf	3,6	;RP1=0, select bank0
  3430     1FED  082D               	movf	ioc_init@pin,w
  3431     1FEE  1683               	bsf	3,5	;RP0=1, select bank1
  3432     1FEF  1303               	bcf	3,6	;RP1=0, select bank1
  3433     1FF0  0095               	movwf	21	;volatile
  3434                           
  3435                           ;IOCB.c: 8:     IOCB = pin;
  3436     1FF1  1283               	bcf	3,5	;RP0=0, select bank0
  3437     1FF2  1303               	bcf	3,6	;RP1=0, select bank0
  3438     1FF3  082D               	movf	ioc_init@pin,w
  3439     1FF4  1683               	bsf	3,5	;RP0=1, select bank1
  3440     1FF5  1303               	bcf	3,6	;RP1=0, select bank1
  3441     1FF6  0096               	movwf	22	;volatile
  3442     1FF7                     l2806:
  3443                           
  3444                           ;IOCB.c: 9:     PORTB=0;
  3445     1FF7  1283               	bcf	3,5	;RP0=0, select bank0
  3446     1FF8  1303               	bcf	3,6	;RP1=0, select bank0
  3447     1FF9  0186               	clrf	6	;volatile
  3448     1FFA                     l2808:
  3449                           
  3450                           ;IOCB.c: 10:     OPTION_REGbits.nRBPU=0;
  3451     1FFA  1683               	bsf	3,5	;RP0=1, select bank1
  3452     1FFB  1303               	bcf	3,6	;RP1=0, select bank1
  3453     1FFC  1381               	bcf	1,7	;volatile
  3454     1FFD                     l2810:
  3455                           
  3456                           ;IOCB.c: 11:     INTCONbits.RBIE=1;
  3457     1FFD  158B               	bsf	11,3	;volatile
  3458     1FFE                     l2812:
  3459                           
  3460                           ;IOCB.c: 12:     INTCONbits.RBIF=0;
  3461     1FFE  100B               	bcf	11,0	;volatile
  3462     1FFF                     l281:
  3463     1FFF  0008               	return
  3464     2000                     __end_of_ioc_init:
  3465                           
  3466                           	psect	text4
  3467     132B                     __ptext4:	
  3468 ;; *************** function _USART_init_baud *****************
  3469 ;; Defined at:
  3470 ;;		line 6 in file "USART.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  baudrate        4   27[BANK0 ] const unsigned long 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  value           2   35[BANK0 ] unsigned int 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       4       0       0       0
  3485 ;;      Locals:         0       2       0       0       0
  3486 ;;      Temps:          0       4       0       0       0
  3487 ;;      Totals:         0      10       0       0       0
  3488 ;;Total ram usage:       10 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 4
  3491 ;; This function calls:
  3492 ;;		___lldiv
  3493 ;; This function is called by:
  3494 ;;		_setup
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498     132B                     _USART_init_baud:	
  3499                           ;psect for function _USART_init_baud
  3500                           
  3501     132B                     l2814:	
  3502                           ;incstack = 0
  3503                           ; Regs used in _USART_init_baud: [wreg+status,2+status,0+pclath+cstack]
  3504                           
  3505                           
  3506                           ;USART.c: 6: void USART_init_baud(const unsigned long int baudrate);USART.c: 7: {;USART.
      +                          c: 9:     TXSTAbits.SYNC = 0;
  3507     132B  1683               	bsf	3,5	;RP0=1, select bank1
  3508     132C  1303               	bcf	3,6	;RP1=0, select bank1
  3509     132D  1218               	bcf	24,4	;volatile
  3510                           
  3511                           ;USART.c: 10:     TXSTAbits.BRGH = 1;
  3512     132E  1518               	bsf	24,2	;volatile
  3513                           
  3514                           ;USART.c: 11:     BAUDCTLbits.BRG16 = 1;
  3515     132F  1683               	bsf	3,5	;RP0=1, select bank3
  3516     1330  1703               	bsf	3,6	;RP1=1, select bank3
  3517     1331  1587               	bsf	7,3	;volatile
  3518                           
  3519                           ;USART.c: 12:     RCSTAbits.SPEN = 1;
  3520     1332  1283               	bcf	3,5	;RP0=0, select bank0
  3521     1333  1303               	bcf	3,6	;RP1=0, select bank0
  3522     1334  1798               	bsf	24,7	;volatile
  3523                           
  3524                           ;USART.c: 13:     RCSTAbits.RX9 = 0;
  3525     1335  1318               	bcf	24,6	;volatile
  3526                           
  3527                           ;USART.c: 14:     RCSTAbits.CREN = 1;
  3528     1336  1618               	bsf	24,4	;volatile
  3529                           
  3530                           ;USART.c: 15:     TXSTAbits.TXEN = 1;
  3531     1337  1683               	bsf	3,5	;RP0=1, select bank1
  3532     1338  1303               	bcf	3,6	;RP1=0, select bank1
  3533     1339  1698               	bsf	24,5	;volatile
  3534                           
  3535                           ;USART.c: 16:     PIR1bits.RCIF = 0;
  3536     133A  1283               	bcf	3,5	;RP0=0, select bank0
  3537     133B  1303               	bcf	3,6	;RP1=0, select bank0
  3538     133C  128C               	bcf	12,5	;volatile
  3539                           
  3540                           ;USART.c: 17:     PIE1bits.RCIE = 1;
  3541     133D  1683               	bsf	3,5	;RP0=1, select bank1
  3542     133E  1303               	bcf	3,6	;RP1=0, select bank1
  3543     133F  168C               	bsf	12,5	;volatile
  3544     1340                     l2816:
  3545     1340                     l2818:
  3546                           
  3547                           ;USART.c: 20:     value = (8000000 /(4*baudrate))-1;
  3548     1340  1283               	bcf	3,5	;RP0=0, select bank0
  3549     1341  1303               	bcf	3,6	;RP1=0, select bank0
  3550     1342  083B               	movf	USART_init_baud@baudrate,w
  3551     1343  00BF               	movwf	??_USART_init_baud
  3552     1344  083C               	movf	USART_init_baud@baudrate+1,w
  3553     1345  00C0               	movwf	??_USART_init_baud+1
  3554     1346  083D               	movf	USART_init_baud@baudrate+2,w
  3555     1347  00C1               	movwf	??_USART_init_baud+2
  3556     1348  083E               	movf	USART_init_baud@baudrate+3,w
  3557     1349  00C2               	movwf	??_USART_init_baud+3
  3558     134A  3002               	movlw	2
  3559     134B                     u3235:
  3560     134B  1003               	clrc
  3561     134C  0DBF               	rlf	??_USART_init_baud,f
  3562     134D  0DC0               	rlf	??_USART_init_baud+1,f
  3563     134E  0DC1               	rlf	??_USART_init_baud+2,f
  3564     134F  0DC2               	rlf	??_USART_init_baud+3,f
  3565     1350                     u3230:
  3566     1350  3EFF               	addlw	-1
  3567     1351  1D03               	skipz
  3568     1352  2B4B               	goto	u3235
  3569     1353  0842               	movf	??_USART_init_baud+3,w
  3570     1354  00B0               	movwf	___lldiv@divisor+3
  3571     1355  0841               	movf	??_USART_init_baud+2,w
  3572     1356  00AF               	movwf	___lldiv@divisor+2
  3573     1357  0840               	movf	??_USART_init_baud+1,w
  3574     1358  00AE               	movwf	___lldiv@divisor+1
  3575     1359  083F               	movf	??_USART_init_baud,w
  3576     135A  00AD               	movwf	___lldiv@divisor
  3577     135B  3000               	movlw	0
  3578     135C  00B4               	movwf	___lldiv@dividend+3
  3579     135D  307A               	movlw	122
  3580     135E  00B3               	movwf	___lldiv@dividend+2
  3581     135F  3012               	movlw	18
  3582     1360  00B2               	movwf	___lldiv@dividend+1
  3583     1361  3000               	movlw	0
  3584     1362  00B1               	movwf	___lldiv@dividend
  3585     1363  160A  118A  25BB  160A  118A  	fcall	___lldiv
  3586     1368  1283               	bcf	3,5	;RP0=0, select bank0
  3587     1369  1303               	bcf	3,6	;RP1=0, select bank0
  3588     136A  082D               	movf	?___lldiv,w
  3589     136B  3EFF               	addlw	255
  3590     136C  00C3               	movwf	USART_init_baud@value
  3591     136D  082E               	movf	?___lldiv+1,w
  3592     136E  1803               	skipnc
  3593     136F  3E01               	addlw	1
  3594     1370  3EFF               	addlw	255
  3595     1371  00C4               	movwf	USART_init_baud@value+1
  3596     1372                     l2820:
  3597                           
  3598                           ;USART.c: 23:     if(value < 256)
  3599     1372  3001               	movlw	1
  3600     1373  0244               	subwf	USART_init_baud@value+1,w
  3601     1374  3000               	movlw	0
  3602     1375  1903               	skipnz
  3603     1376  0243               	subwf	USART_init_baud@value,w
  3604     1377  1803               	skipnc
  3605     1378  2B7A               	goto	u3241
  3606     1379  2B7B               	goto	u3240
  3607     137A                     u3241:
  3608     137A  2B7F               	goto	l360
  3609     137B                     u3240:
  3610     137B                     l2822:
  3611                           
  3612                           ;USART.c: 24:     {;USART.c: 25:        SPBRG = value;
  3613     137B  0843               	movf	USART_init_baud@value,w
  3614     137C  1683               	bsf	3,5	;RP0=1, select bank1
  3615     137D  1303               	bcf	3,6	;RP1=0, select bank1
  3616     137E  0099               	movwf	25	;volatile
  3617     137F                     l360:
  3618     137F  0008               	return
  3619     1380                     __end_of_USART_init_baud:
  3620                           
  3621                           	psect	text5
  3622     1251                     __ptext5:	
  3623 ;; *************** function _Lcd_Write_String *****************
  3624 ;; Defined at:
  3625 ;;		line 88 in file "LCD.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  a               2   18[BANK0 ] PTR unsigned char 
  3628 ;;		 -> STR_11(9), STR_10(11), STR_8(3), STR_7(2), 
  3629 ;;		 -> STR_6(3), STR_5(2), STR_4(3), STR_3(7), 
  3630 ;;		 -> bufferMin(4), bufferSec(4), bufferHour(4), bufferHum(4), 
  3631 ;;		 -> bufferTemp(4), bufferQ(4), 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  i               2   23[BANK0 ] int 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3643 ;;      Params:         0       2       0       0       0
  3644 ;;      Locals:         0       2       0       0       0
  3645 ;;      Temps:          0       3       0       0       0
  3646 ;;      Totals:         0       7       0       0       0
  3647 ;;Total ram usage:        7 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; Hardware stack levels required when called: 5
  3650 ;; This function calls:
  3651 ;;		_Lcd_Write_Char
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;;		_setup
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658     1251                     _Lcd_Write_String:	
  3659                           ;psect for function _Lcd_Write_String
  3660                           
  3661     1251                     l2796:	
  3662                           ;incstack = 0
  3663                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3664                           
  3665                           
  3666                           ;LCD.c: 89:     int i;;LCD.c: 90:     for (i = 0; a[i] != '\0'; i++)
  3667     1251  1283               	bcf	3,5	;RP0=0, select bank0
  3668     1252  1303               	bcf	3,6	;RP1=0, select bank0
  3669     1253  01B7               	clrf	Lcd_Write_String@i
  3670     1254  01B8               	clrf	Lcd_Write_String@i+1
  3671     1255  2A7A               	goto	l2802
  3672     1256                     l2798:
  3673                           
  3674                           ;LCD.c: 91:         Lcd_Write_Char(a[i]);
  3675     1256  0837               	movf	Lcd_Write_String@i,w
  3676     1257  0732               	addwf	Lcd_Write_String@a,w
  3677     1258  00B5               	movwf	??_Lcd_Write_String+1
  3678     1259  0833               	movf	Lcd_Write_String@a+1,w
  3679     125A  00B4               	movwf	??_Lcd_Write_String
  3680     125B  1803               	skipnc
  3681     125C  0AB4               	incf	??_Lcd_Write_String,f
  3682     125D  1FB7               	btfss	Lcd_Write_String@i,7
  3683     125E  2A60               	goto	u3200
  3684     125F  03B4               	decf	??_Lcd_Write_String,f
  3685     1260                     u3200:
  3686     1260  1283               	bcf	3,5	;RP0=0, select bank0
  3687     1261  1303               	bcf	3,6	;RP1=0, select bank0
  3688     1262  0834               	movf	??_Lcd_Write_String,w
  3689     1263  00B6               	movwf	??_Lcd_Write_String+2
  3690     1264  0836               	movf	??_Lcd_Write_String+2,w
  3691     1265  00FF               	movwf	btemp+1
  3692     1266  0835               	movf	??_Lcd_Write_String+1,w
  3693     1267  0084               	movwf	4
  3694     1268  160A  118A  2000  160A  118A  	fcall	stringtab
  3695     126D  160A  118A  2156  160A  118A  	fcall	_Lcd_Write_Char
  3696     1272                     l2800:
  3697     1272  3001               	movlw	1
  3698     1273  1283               	bcf	3,5	;RP0=0, select bank0
  3699     1274  1303               	bcf	3,6	;RP1=0, select bank0
  3700     1275  07B7               	addwf	Lcd_Write_String@i,f
  3701     1276  1803               	skipnc
  3702     1277  0AB8               	incf	Lcd_Write_String@i+1,f
  3703     1278  3000               	movlw	0
  3704     1279  07B8               	addwf	Lcd_Write_String@i+1,f
  3705     127A                     l2802:
  3706     127A  0837               	movf	Lcd_Write_String@i,w
  3707     127B  0732               	addwf	Lcd_Write_String@a,w
  3708     127C  00B5               	movwf	??_Lcd_Write_String+1
  3709     127D  0833               	movf	Lcd_Write_String@a+1,w
  3710     127E  00B4               	movwf	??_Lcd_Write_String
  3711     127F  1803               	skipnc
  3712     1280  0AB4               	incf	??_Lcd_Write_String,f
  3713     1281  1FB7               	btfss	Lcd_Write_String@i,7
  3714     1282  2A84               	goto	u3210
  3715     1283  03B4               	decf	??_Lcd_Write_String,f
  3716     1284                     u3210:
  3717     1284  1283               	bcf	3,5	;RP0=0, select bank0
  3718     1285  1303               	bcf	3,6	;RP1=0, select bank0
  3719     1286  0834               	movf	??_Lcd_Write_String,w
  3720     1287  00B6               	movwf	??_Lcd_Write_String+2
  3721     1288  0836               	movf	??_Lcd_Write_String+2,w
  3722     1289  00FF               	movwf	btemp+1
  3723     128A  0835               	movf	??_Lcd_Write_String+1,w
  3724     128B  0084               	movwf	4
  3725     128C  160A  118A  2000  160A  118A  	fcall	stringtab
  3726     1291  3A00               	xorlw	0
  3727     1292  1D03               	skipz
  3728     1293  2A95               	goto	u3221
  3729     1294  2A96               	goto	u3220
  3730     1295                     u3221:
  3731     1295  2A56               	goto	l2798
  3732     1296                     u3220:
  3733     1296                     l330:
  3734     1296  0008               	return
  3735     1297                     __end_of_Lcd_Write_String:
  3736                           
  3737                           	psect	text6
  3738     1156                     __ptext6:	
  3739 ;; *************** function _Lcd_Write_Char *****************
  3740 ;; Defined at:
  3741 ;;		line 73 in file "LCD.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  a               1    wreg     unsigned char 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  a               1   17[BANK0 ] unsigned char 
  3746 ;;  y               1   16[BANK0 ] unsigned char 
  3747 ;;  temp            1   15[BANK0 ] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       0       0       0
  3758 ;;      Locals:         0       3       0       0       0
  3759 ;;      Temps:          0       1       0       0       0
  3760 ;;      Totals:         0       4       0       0       0
  3761 ;;Total ram usage:        4 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 4
  3764 ;; This function calls:
  3765 ;;		_Lcd_Port
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;;		_Lcd_Write_String
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772     1156                     _Lcd_Write_Char:	
  3773                           ;psect for function _Lcd_Write_Char
  3774                           
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3778                           ;Lcd_Write_Char@a stored from wreg
  3779     1156  1283               	bcf	3,5	;RP0=0, select bank0
  3780     1157  1303               	bcf	3,6	;RP1=0, select bank0
  3781     1158  00B1               	movwf	Lcd_Write_Char@a
  3782     1159                     l2418:
  3783                           
  3784                           ;LCD.c: 74:     char temp, y;;LCD.c: 75:     temp = a & 0x0F;
  3785     1159  0831               	movf	Lcd_Write_Char@a,w
  3786     115A  390F               	andlw	15
  3787     115B  00AF               	movwf	Lcd_Write_Char@temp
  3788                           
  3789                           ;LCD.c: 76:     y = a & 0xF0;
  3790     115C  0831               	movf	Lcd_Write_Char@a,w
  3791     115D  39F0               	andlw	240
  3792     115E  00B0               	movwf	Lcd_Write_Char@y
  3793     115F                     l2420:
  3794                           
  3795                           ;LCD.c: 77:     PORTDbits.RD2 = 1;
  3796     115F  1508               	bsf	8,2	;volatile
  3797     1160                     l2422:
  3798                           
  3799                           ;LCD.c: 78:     Lcd_Port(y >> 4);
  3800     1160  0830               	movf	Lcd_Write_Char@y,w
  3801     1161  00AE               	movwf	??_Lcd_Write_Char
  3802     1162  3004               	movlw	4
  3803     1163                     u2395:
  3804     1163  1003               	clrc
  3805     1164  0CAE               	rrf	??_Lcd_Write_Char,f
  3806     1165  3EFF               	addlw	-1
  3807     1166  1D03               	skipz
  3808     1167  2963               	goto	u2395
  3809     1168  082E               	movf	??_Lcd_Write_Char,w
  3810     1169  160A  118A  2042  160A  118A  	fcall	_Lcd_Port
  3811     116E                     l2424:
  3812                           
  3813                           ;LCD.c: 79:     RD3 = 1;
  3814     116E  1283               	bcf	3,5	;RP0=0, select bank0
  3815     116F  1303               	bcf	3,6	;RP1=0, select bank0
  3816     1170  1588               	bsf	8,3	;volatile
  3817     1171                     l2426:
  3818                           
  3819                           ;LCD.c: 80:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3820     1171  3019               	movlw	25
  3821     1172  1283               	bcf	3,5	;RP0=0, select bank0
  3822     1173  1303               	bcf	3,6	;RP1=0, select bank0
  3823     1174  00AE               	movwf	??_Lcd_Write_Char
  3824     1175                     u5067:
  3825     1175  0BAE               	decfsz	??_Lcd_Write_Char,f
  3826     1176  2975               	goto	u5067
  3827     1177  2978               	nop2
  3828     1178                     l2428:
  3829                           
  3830                           ;LCD.c: 81:     RD3 = 0;
  3831     1178  1283               	bcf	3,5	;RP0=0, select bank0
  3832     1179  1303               	bcf	3,6	;RP1=0, select bank0
  3833     117A  1188               	bcf	8,3	;volatile
  3834     117B                     l2430:
  3835                           
  3836                           ;LCD.c: 82:     Lcd_Port(temp);
  3837     117B  082F               	movf	Lcd_Write_Char@temp,w
  3838     117C  160A  118A  2042  160A  118A  	fcall	_Lcd_Port
  3839     1181                     l2432:
  3840                           
  3841                           ;LCD.c: 83:     RD3 = 1;
  3842     1181  1283               	bcf	3,5	;RP0=0, select bank0
  3843     1182  1303               	bcf	3,6	;RP1=0, select bank0
  3844     1183  1588               	bsf	8,3	;volatile
  3845     1184                     l2434:
  3846                           
  3847                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3848     1184  3019               	movlw	25
  3849     1185  1283               	bcf	3,5	;RP0=0, select bank0
  3850     1186  1303               	bcf	3,6	;RP1=0, select bank0
  3851     1187  00AE               	movwf	??_Lcd_Write_Char
  3852     1188                     u5077:
  3853     1188  0BAE               	decfsz	??_Lcd_Write_Char,f
  3854     1189  2988               	goto	u5077
  3855     118A  298B               	nop2
  3856     118B                     l2436:
  3857                           
  3858                           ;LCD.c: 85:     RD3 = 0;
  3859     118B  1283               	bcf	3,5	;RP0=0, select bank0
  3860     118C  1303               	bcf	3,6	;RP1=0, select bank0
  3861     118D  1188               	bcf	8,3	;volatile
  3862     118E                     l324:
  3863     118E  0008               	return
  3864     118F                     __end_of_Lcd_Write_Char:
  3865                           
  3866                           	psect	text7
  3867     12DF                     __ptext7:	
  3868 ;; *************** function _Lcd_Set_Cursor *****************
  3869 ;; Defined at:
  3870 ;;		line 38 in file "LCD.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  a               1    wreg     unsigned char 
  3873 ;;  b               1   17[BANK0 ] unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  a               1   19[BANK0 ] unsigned char 
  3876 ;;  temp            1   22[BANK0 ] unsigned char 
  3877 ;;  y               1   21[BANK0 ] unsigned char 
  3878 ;;  z               1   20[BANK0 ] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, pclath, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         0       1       0       0       0
  3889 ;;      Locals:         0       4       0       0       0
  3890 ;;      Temps:          0       1       0       0       0
  3891 ;;      Totals:         0       6       0       0       0
  3892 ;;Total ram usage:        6 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 5
  3895 ;; This function calls:
  3896 ;;		_Lcd_Cmd
  3897 ;; This function is called by:
  3898 ;;		_main
  3899 ;;		_setup
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903     12DF                     _Lcd_Set_Cursor:	
  3904                           ;psect for function _Lcd_Set_Cursor
  3905                           
  3906                           
  3907                           ;incstack = 0
  3908                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3909                           ;Lcd_Set_Cursor@a stored from wreg
  3910     12DF  1283               	bcf	3,5	;RP0=0, select bank0
  3911     12E0  1303               	bcf	3,6	;RP1=0, select bank0
  3912     12E1  00B3               	movwf	Lcd_Set_Cursor@a
  3913     12E2                     l2776:
  3914                           
  3915                           ;LCD.c: 39:     char temp, z, y;;LCD.c: 40:     if (a == 1) {
  3916     12E2  0333               	decf	Lcd_Set_Cursor@a,w
  3917     12E3  1D03               	btfss	3,2
  3918     12E4  2AE6               	goto	u3161
  3919     12E5  2AE7               	goto	u3160
  3920     12E6                     u3161:
  3921     12E6  2B06               	goto	l2786
  3922     12E7                     u3160:
  3923     12E7                     l2778:
  3924                           
  3925                           ;LCD.c: 41:         temp = 0x80 + b - 1;
  3926     12E7  0831               	movf	Lcd_Set_Cursor@b,w
  3927     12E8  3E7F               	addlw	127
  3928     12E9  00B6               	movwf	Lcd_Set_Cursor@temp
  3929                           
  3930                           ;LCD.c: 42:         z = temp >> 4;
  3931     12EA  0836               	movf	Lcd_Set_Cursor@temp,w
  3932     12EB  00B2               	movwf	??_Lcd_Set_Cursor
  3933     12EC  3004               	movlw	4
  3934     12ED                     u3175:
  3935     12ED  1003               	clrc
  3936     12EE  0CB2               	rrf	??_Lcd_Set_Cursor,f
  3937     12EF  3EFF               	addlw	-1
  3938     12F0  1D03               	skipz
  3939     12F1  2AED               	goto	u3175
  3940     12F2  0832               	movf	??_Lcd_Set_Cursor,w
  3941     12F3  00B4               	movwf	Lcd_Set_Cursor@z
  3942     12F4                     l2780:
  3943                           
  3944                           ;LCD.c: 43:         y = temp & 0x0F;
  3945     12F4  0836               	movf	Lcd_Set_Cursor@temp,w
  3946     12F5  390F               	andlw	15
  3947     12F6  00B5               	movwf	Lcd_Set_Cursor@y
  3948     12F7                     l2782:
  3949                           
  3950                           ;LCD.c: 44:         Lcd_Cmd(z);
  3951     12F7  0834               	movf	Lcd_Set_Cursor@z,w
  3952     12F8  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  3953     12FD                     l2784:
  3954                           
  3955                           ;LCD.c: 45:         Lcd_Cmd(y);
  3956     12FD  1283               	bcf	3,5	;RP0=0, select bank0
  3957     12FE  1303               	bcf	3,6	;RP1=0, select bank0
  3958     12FF  0835               	movf	Lcd_Set_Cursor@y,w
  3959     1300  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  3960                           
  3961                           ;LCD.c: 46:     } else if (a == 2) {
  3962     1305  2B2A               	goto	l318
  3963     1306                     l2786:
  3964     1306  3002               	movlw	2
  3965     1307  0633               	xorwf	Lcd_Set_Cursor@a,w
  3966     1308  1D03               	btfss	3,2
  3967     1309  2B0B               	goto	u3181
  3968     130A  2B0C               	goto	u3180
  3969     130B                     u3181:
  3970     130B  2B2A               	goto	l318
  3971     130C                     u3180:
  3972     130C                     l2788:
  3973                           
  3974                           ;LCD.c: 47:         temp = 0xC0 + b - 1;
  3975     130C  0831               	movf	Lcd_Set_Cursor@b,w
  3976     130D  3EBF               	addlw	191
  3977     130E  00B6               	movwf	Lcd_Set_Cursor@temp
  3978                           
  3979                           ;LCD.c: 48:         z = temp >> 4;
  3980     130F  0836               	movf	Lcd_Set_Cursor@temp,w
  3981     1310  00B2               	movwf	??_Lcd_Set_Cursor
  3982     1311  3004               	movlw	4
  3983     1312                     u3195:
  3984     1312  1003               	clrc
  3985     1313  0CB2               	rrf	??_Lcd_Set_Cursor,f
  3986     1314  3EFF               	addlw	-1
  3987     1315  1D03               	skipz
  3988     1316  2B12               	goto	u3195
  3989     1317  0832               	movf	??_Lcd_Set_Cursor,w
  3990     1318  00B4               	movwf	Lcd_Set_Cursor@z
  3991     1319                     l2790:
  3992                           
  3993                           ;LCD.c: 49:         y = temp & 0x0F;
  3994     1319  0836               	movf	Lcd_Set_Cursor@temp,w
  3995     131A  390F               	andlw	15
  3996     131B  00B5               	movwf	Lcd_Set_Cursor@y
  3997     131C                     l2792:
  3998                           
  3999                           ;LCD.c: 50:         Lcd_Cmd(z);
  4000     131C  0834               	movf	Lcd_Set_Cursor@z,w
  4001     131D  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4002     1322                     l2794:
  4003                           
  4004                           ;LCD.c: 51:         Lcd_Cmd(y);
  4005     1322  1283               	bcf	3,5	;RP0=0, select bank0
  4006     1323  1303               	bcf	3,6	;RP1=0, select bank0
  4007     1324  0835               	movf	Lcd_Set_Cursor@y,w
  4008     1325  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4009     132A                     l318:
  4010     132A  0008               	return
  4011     132B                     __end_of_Lcd_Set_Cursor:
  4012                           
  4013                           	psect	text8
  4014     14F2                     __ptext8:	
  4015 ;; *************** function _Lcd_Init *****************
  4016 ;; Defined at:
  4017 ;;		line 55 in file "LCD.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;		None
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       0       0       0       0
  4032 ;;      Locals:         0       0       0       0       0
  4033 ;;      Temps:          0       2       0       0       0
  4034 ;;      Totals:         0       2       0       0       0
  4035 ;;Total ram usage:        2 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 5
  4038 ;; This function calls:
  4039 ;;		_Lcd_Cmd
  4040 ;;		_Lcd_Port
  4041 ;; This function is called by:
  4042 ;;		_setup
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046     14F2                     _Lcd_Init:	
  4047                           ;psect for function _Lcd_Init
  4048                           
  4049     14F2                     l2836:	
  4050                           ;incstack = 0
  4051                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4052                           
  4053                           
  4054                           ;LCD.c: 56:     Lcd_Port(0x00);
  4055     14F2  3000               	movlw	0
  4056     14F3  160A  118A  2042  160A  118A  	fcall	_Lcd_Port
  4057     14F8                     l2838:
  4058                           
  4059                           ;LCD.c: 57:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4060     14F8  3034               	movlw	52
  4061     14F9  1283               	bcf	3,5	;RP0=0, select bank0
  4062     14FA  1303               	bcf	3,6	;RP1=0, select bank0
  4063     14FB  00B2               	movwf	??_Lcd_Init+1
  4064     14FC  30F1               	movlw	241
  4065     14FD  00B1               	movwf	??_Lcd_Init
  4066     14FE                     u5087:
  4067     14FE  0BB1               	decfsz	??_Lcd_Init,f
  4068     14FF  2CFE               	goto	u5087
  4069     1500  0BB2               	decfsz	??_Lcd_Init+1,f
  4070     1501  2CFE               	goto	u5087
  4071     1502                     l2840:
  4072                           
  4073                           ;LCD.c: 58:     Lcd_Cmd(0x03);
  4074     1502  3003               	movlw	3
  4075     1503  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4076                           
  4077                           ;LCD.c: 59:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4078     1508  300D               	movlw	13
  4079     1509  1283               	bcf	3,5	;RP0=0, select bank0
  4080     150A  1303               	bcf	3,6	;RP1=0, select bank0
  4081     150B  00B2               	movwf	??_Lcd_Init+1
  4082     150C  30FB               	movlw	251
  4083     150D  00B1               	movwf	??_Lcd_Init
  4084     150E                     u5097:
  4085     150E  0BB1               	decfsz	??_Lcd_Init,f
  4086     150F  2D0E               	goto	u5097
  4087     1510  0BB2               	decfsz	??_Lcd_Init+1,f
  4088     1511  2D0E               	goto	u5097
  4089     1512                     l2842:
  4090                           
  4091                           ;LCD.c: 60:     Lcd_Cmd(0x03);
  4092     1512  3003               	movlw	3
  4093     1513  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4094     1518                     l2844:
  4095                           
  4096                           ;LCD.c: 61:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4097     1518  301D               	movlw	29
  4098     1519  1283               	bcf	3,5	;RP0=0, select bank0
  4099     151A  1303               	bcf	3,6	;RP1=0, select bank0
  4100     151B  00B2               	movwf	??_Lcd_Init+1
  4101     151C  3090               	movlw	144
  4102     151D  00B1               	movwf	??_Lcd_Init
  4103     151E                     u5107:
  4104     151E  0BB1               	decfsz	??_Lcd_Init,f
  4105     151F  2D1E               	goto	u5107
  4106     1520  0BB2               	decfsz	??_Lcd_Init+1,f
  4107     1521  2D1E               	goto	u5107
  4108     1522  0000               	nop
  4109                           
  4110                           ;LCD.c: 62:     Lcd_Cmd(0x03);
  4111     1523  3003               	movlw	3
  4112     1524  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4113                           
  4114                           ;LCD.c: 64:     Lcd_Cmd(0x02);
  4115     1529  3002               	movlw	2
  4116     152A  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4117                           
  4118                           ;LCD.c: 65:     Lcd_Cmd(0x02);
  4119     152F  3002               	movlw	2
  4120     1530  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4121                           
  4122                           ;LCD.c: 66:     Lcd_Cmd(0x08);
  4123     1535  3008               	movlw	8
  4124     1536  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4125                           
  4126                           ;LCD.c: 67:     Lcd_Cmd(0x00);
  4127     153B  3000               	movlw	0
  4128     153C  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4129                           
  4130                           ;LCD.c: 68:     Lcd_Cmd(0x0C);
  4131     1541  300C               	movlw	12
  4132     1542  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4133                           
  4134                           ;LCD.c: 69:     Lcd_Cmd(0x00);
  4135     1547  3000               	movlw	0
  4136     1548  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4137                           
  4138                           ;LCD.c: 70:     Lcd_Cmd(0x06);
  4139     154D  3006               	movlw	6
  4140     154E  160A  158A  27C8  160A  118A  	fcall	_Lcd_Cmd
  4141     1553                     l321:
  4142     1553  0008               	return
  4143     1554                     __end_of_Lcd_Init:
  4144                           
  4145                           	psect	text9
  4146     1FAD                     __ptext9:	
  4147 ;; *************** function _Lcd_Clear *****************
  4148 ;; Defined at:
  4149 ;;		line 33 in file "LCD.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0, pclath, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0
  4166 ;;      Totals:         0       0       0       0       0
  4167 ;;Total ram usage:        0 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; Hardware stack levels required when called: 5
  4170 ;; This function calls:
  4171 ;;		_Lcd_Cmd
  4172 ;; This function is called by:
  4173 ;;		_main
  4174 ;;		_setup
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178     1FAD                     _Lcd_Clear:	
  4179                           ;psect for function _Lcd_Clear
  4180                           
  4181     1FAD                     l2774:	
  4182                           ;incstack = 0
  4183                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4184                           
  4185                           
  4186                           ;LCD.c: 34:     Lcd_Cmd(0);
  4187     1FAD  3000               	movlw	0
  4188     1FAE  160A  158A  27C8  160A  158A  	fcall	_Lcd_Cmd
  4189                           
  4190                           ;LCD.c: 35:     Lcd_Cmd(1);
  4191     1FB3  3001               	movlw	1
  4192     1FB4  160A  158A  27C8  160A  158A  	fcall	_Lcd_Cmd
  4193     1FB9                     l312:
  4194     1FB9  0008               	return
  4195     1FBA                     __end_of_Lcd_Clear:
  4196                           
  4197                           	psect	text10
  4198     1FC8                     __ptext10:	
  4199 ;; *************** function _Lcd_Cmd *****************
  4200 ;; Defined at:
  4201 ;;		line 25 in file "LCD.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  a               1    wreg     unsigned char 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  a               1   16[BANK0 ] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0, pclath, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4215 ;;      Params:         0       0       0       0       0
  4216 ;;      Locals:         0       1       0       0       0
  4217 ;;      Temps:          0       2       0       0       0
  4218 ;;      Totals:         0       3       0       0       0
  4219 ;;Total ram usage:        3 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 4
  4222 ;; This function calls:
  4223 ;;		_Lcd_Port
  4224 ;; This function is called by:
  4225 ;;		_Lcd_Clear
  4226 ;;		_Lcd_Set_Cursor
  4227 ;;		_Lcd_Init
  4228 ;;		_Lcd_Shift_Right
  4229 ;;		_Lcd_Shift_Left
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233     1FC8                     _Lcd_Cmd:	
  4234                           ;psect for function _Lcd_Cmd
  4235                           
  4236                           
  4237                           ;incstack = 0
  4238                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4239                           ;Lcd_Cmd@a stored from wreg
  4240     1FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4241     1FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4242     1FCA  00B0               	movwf	Lcd_Cmd@a
  4243     1FCB                     l2450:
  4244                           
  4245                           ;LCD.c: 26:     PORTDbits.RD2 = 0;
  4246     1FCB  1108               	bcf	8,2	;volatile
  4247     1FCC                     l2452:
  4248                           
  4249                           ;LCD.c: 27:     Lcd_Port(a);
  4250     1FCC  0830               	movf	Lcd_Cmd@a,w
  4251     1FCD  160A  118A  2042  160A  158A  	fcall	_Lcd_Port
  4252     1FD2                     l2454:
  4253                           
  4254                           ;LCD.c: 28:     RD3 = 1;
  4255     1FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4256     1FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4257     1FD4  1588               	bsf	8,3	;volatile
  4258     1FD5                     l2456:
  4259                           
  4260                           ;LCD.c: 29:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4261     1FD5  300B               	movlw	11
  4262     1FD6  1283               	bcf	3,5	;RP0=0, select bank0
  4263     1FD7  1303               	bcf	3,6	;RP1=0, select bank0
  4264     1FD8  00AF               	movwf	??_Lcd_Cmd+1
  4265     1FD9  3061               	movlw	97
  4266     1FDA  00AE               	movwf	??_Lcd_Cmd
  4267     1FDB                     u5117:
  4268     1FDB  0BAE               	decfsz	??_Lcd_Cmd,f
  4269     1FDC  2FDB               	goto	u5117
  4270     1FDD  0BAF               	decfsz	??_Lcd_Cmd+1,f
  4271     1FDE  2FDB               	goto	u5117
  4272     1FDF  2FE0               	nop2
  4273     1FE0                     l2458:
  4274                           
  4275                           ;LCD.c: 30:     RD3 = 0;
  4276     1FE0  1283               	bcf	3,5	;RP0=0, select bank0
  4277     1FE1  1303               	bcf	3,6	;RP1=0, select bank0
  4278     1FE2  1188               	bcf	8,3	;volatile
  4279     1FE3                     l309:
  4280     1FE3  0008               	return
  4281     1FE4                     __end_of_Lcd_Cmd:
  4282                           
  4283                           	psect	text11
  4284     1042                     __ptext11:	
  4285 ;; *************** function _Lcd_Port *****************
  4286 ;; Defined at:
  4287 ;;		line 3 in file "LCD.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  a               1    wreg     unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  a               1   13[BANK0 ] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4301 ;;      Params:         0       0       0       0       0
  4302 ;;      Locals:         0       1       0       0       0
  4303 ;;      Temps:          0       0       0       0       0
  4304 ;;      Totals:         0       1       0       0       0
  4305 ;;Total ram usage:        1 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; Hardware stack levels required when called: 3
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_Lcd_Cmd
  4312 ;;		_Lcd_Init
  4313 ;;		_Lcd_Write_Char
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317     1042                     _Lcd_Port:	
  4318                           ;psect for function _Lcd_Port
  4319                           
  4320                           
  4321                           ;incstack = 0
  4322                           ; Regs used in _Lcd_Port: [wreg]
  4323                           ;Lcd_Port@a stored from wreg
  4324     1042  1283               	bcf	3,5	;RP0=0, select bank0
  4325     1043  1303               	bcf	3,6	;RP1=0, select bank0
  4326     1044  00AD               	movwf	Lcd_Port@a
  4327     1045                     l2408:
  4328                           
  4329                           ;LCD.c: 4:     if (a & 1)
  4330     1045  1C2D               	btfss	Lcd_Port@a,0
  4331     1046  2848               	goto	u2351
  4332     1047  2849               	goto	u2350
  4333     1048                     u2351:
  4334     1048  284B               	goto	l298
  4335     1049                     u2350:
  4336     1049                     l2410:
  4337                           
  4338                           ;LCD.c: 5:         RD4 = 1;
  4339     1049  1608               	bsf	8,4	;volatile
  4340     104A  284C               	goto	l299
  4341     104B                     l298:	
  4342                           ;LCD.c: 6:     else
  4343                           
  4344                           
  4345                           ;LCD.c: 7:         RD4 = 0;
  4346     104B  1208               	bcf	8,4	;volatile
  4347     104C                     l299:
  4348                           
  4349                           ;LCD.c: 9:     if (a & 2)
  4350     104C  1CAD               	btfss	Lcd_Port@a,1
  4351     104D  284F               	goto	u2361
  4352     104E  2850               	goto	u2360
  4353     104F                     u2361:
  4354     104F  2852               	goto	l300
  4355     1050                     u2360:
  4356     1050                     l2412:
  4357                           
  4358                           ;LCD.c: 10:         RD5 = 1;
  4359     1050  1688               	bsf	8,5	;volatile
  4360     1051  2853               	goto	l301
  4361     1052                     l300:	
  4362                           ;LCD.c: 11:     else
  4363                           
  4364                           
  4365                           ;LCD.c: 12:         RD5 = 0;
  4366     1052  1288               	bcf	8,5	;volatile
  4367     1053                     l301:
  4368                           
  4369                           ;LCD.c: 14:     if (a & 4)
  4370     1053  1D2D               	btfss	Lcd_Port@a,2
  4371     1054  2856               	goto	u2371
  4372     1055  2857               	goto	u2370
  4373     1056                     u2371:
  4374     1056  2859               	goto	l302
  4375     1057                     u2370:
  4376     1057                     l2414:
  4377                           
  4378                           ;LCD.c: 15:         RD6 = 1;
  4379     1057  1708               	bsf	8,6	;volatile
  4380     1058  285A               	goto	l303
  4381     1059                     l302:	
  4382                           ;LCD.c: 16:     else
  4383                           
  4384                           
  4385                           ;LCD.c: 17:         RD6 = 0;
  4386     1059  1308               	bcf	8,6	;volatile
  4387     105A                     l303:
  4388                           
  4389                           ;LCD.c: 19:     if (a & 8)
  4390     105A  1DAD               	btfss	Lcd_Port@a,3
  4391     105B  285D               	goto	u2381
  4392     105C  285E               	goto	u2380
  4393     105D                     u2381:
  4394     105D  2860               	goto	l304
  4395     105E                     u2380:
  4396     105E                     l2416:
  4397                           
  4398                           ;LCD.c: 20:         RD7 = 1;
  4399     105E  1788               	bsf	8,7	;volatile
  4400     105F  2861               	goto	l306
  4401     1060                     l304:	
  4402                           ;LCD.c: 21:     else
  4403                           
  4404                           
  4405                           ;LCD.c: 22:         RD7 = 0;
  4406     1060  1388               	bcf	8,7	;volatile
  4407     1061                     l306:
  4408     1061  0008               	return
  4409     1062                     __end_of_Lcd_Port:
  4410                           
  4411                           	psect	text12
  4412     118F                     __ptext12:	
  4413 ;; *************** function _I2C_Master_Init *****************
  4414 ;; Defined at:
  4415 ;;		line 16 in file "I2C.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  c               4   27[BANK0 ] const unsigned long 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0, pclath, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4429 ;;      Params:         0       4       0       0       0
  4430 ;;      Locals:         0       0       0       0       0
  4431 ;;      Temps:          0       4       0       0       0
  4432 ;;      Totals:         0       8       0       0       0
  4433 ;;Total ram usage:        8 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 4
  4436 ;; This function calls:
  4437 ;;		___lldiv
  4438 ;; This function is called by:
  4439 ;;		_setup
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443     118F                     _I2C_Master_Init:	
  4444                           ;psect for function _I2C_Master_Init
  4445                           
  4446     118F                     l2824:	
  4447                           ;incstack = 0
  4448                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4449                           
  4450                           
  4451                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  4452     118F  3028               	movlw	40
  4453     1190  1283               	bcf	3,5	;RP0=0, select bank0
  4454     1191  1303               	bcf	3,6	;RP1=0, select bank0
  4455     1192  0094               	movwf	20	;volatile
  4456     1193                     l2826:
  4457                           
  4458                           ;I2C.c: 19:     SSPCON2 = 0;
  4459     1193  1683               	bsf	3,5	;RP0=1, select bank1
  4460     1194  1303               	bcf	3,6	;RP1=0, select bank1
  4461     1195  0191               	clrf	17	;volatile
  4462     1196                     l2828:
  4463                           
  4464                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  4465     1196  1283               	bcf	3,5	;RP0=0, select bank0
  4466     1197  1303               	bcf	3,6	;RP1=0, select bank0
  4467     1198  083B               	movf	I2C_Master_Init@c,w
  4468     1199  00BF               	movwf	??_I2C_Master_Init
  4469     119A  083C               	movf	I2C_Master_Init@c+1,w
  4470     119B  00C0               	movwf	??_I2C_Master_Init+1
  4471     119C  083D               	movf	I2C_Master_Init@c+2,w
  4472     119D  00C1               	movwf	??_I2C_Master_Init+2
  4473     119E  083E               	movf	I2C_Master_Init@c+3,w
  4474     119F  00C2               	movwf	??_I2C_Master_Init+3
  4475     11A0  3002               	movlw	2
  4476     11A1                     u3255:
  4477     11A1  1003               	clrc
  4478     11A2  0DBF               	rlf	??_I2C_Master_Init,f
  4479     11A3  0DC0               	rlf	??_I2C_Master_Init+1,f
  4480     11A4  0DC1               	rlf	??_I2C_Master_Init+2,f
  4481     11A5  0DC2               	rlf	??_I2C_Master_Init+3,f
  4482     11A6                     u3250:
  4483     11A6  3EFF               	addlw	-1
  4484     11A7  1D03               	skipz
  4485     11A8  29A1               	goto	u3255
  4486     11A9  0842               	movf	??_I2C_Master_Init+3,w
  4487     11AA  00B0               	movwf	___lldiv@divisor+3
  4488     11AB  0841               	movf	??_I2C_Master_Init+2,w
  4489     11AC  00AF               	movwf	___lldiv@divisor+2
  4490     11AD  0840               	movf	??_I2C_Master_Init+1,w
  4491     11AE  00AE               	movwf	___lldiv@divisor+1
  4492     11AF  083F               	movf	??_I2C_Master_Init,w
  4493     11B0  00AD               	movwf	___lldiv@divisor
  4494     11B1  3000               	movlw	0
  4495     11B2  00B4               	movwf	___lldiv@dividend+3
  4496     11B3  307A               	movlw	122
  4497     11B4  00B3               	movwf	___lldiv@dividend+2
  4498     11B5  3012               	movlw	18
  4499     11B6  00B2               	movwf	___lldiv@dividend+1
  4500     11B7  3000               	movlw	0
  4501     11B8  00B1               	movwf	___lldiv@dividend
  4502     11B9  160A  118A  25BB  160A  118A  	fcall	___lldiv
  4503     11BE  1283               	bcf	3,5	;RP0=0, select bank0
  4504     11BF  1303               	bcf	3,6	;RP1=0, select bank0
  4505     11C0  082D               	movf	?___lldiv,w
  4506     11C1  3EFF               	addlw	255
  4507     11C2  1683               	bsf	3,5	;RP0=1, select bank1
  4508     11C3  1303               	bcf	3,6	;RP1=0, select bank1
  4509     11C4  0093               	movwf	19	;volatile
  4510     11C5                     l2830:
  4511                           
  4512                           ;I2C.c: 21:     SSPSTAT = 0;
  4513     11C5  0194               	clrf	20	;volatile
  4514     11C6                     l2832:
  4515                           
  4516                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4517     11C6  1587               	bsf	7,3	;volatile
  4518     11C7                     l2834:
  4519                           
  4520                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4521     11C7  1607               	bsf	7,4	;volatile
  4522     11C8                     l240:
  4523     11C8  0008               	return
  4524     11C9                     __end_of_I2C_Master_Init:
  4525                           
  4526                           	psect	text13
  4527     15BB                     __ptext13:	
  4528 ;; *************** function ___lldiv *****************
  4529 ;; Defined at:
  4530 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  divisor         4   13[BANK0 ] unsigned long 
  4533 ;;  dividend        4   17[BANK0 ] unsigned long 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  quotient        4   22[BANK0 ] unsigned long 
  4536 ;;  counter         1   26[BANK0 ] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  4   13[BANK0 ] unsigned long 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         0       8       0       0       0
  4547 ;;      Locals:         0       5       0       0       0
  4548 ;;      Temps:          0       1       0       0       0
  4549 ;;      Totals:         0      14       0       0       0
  4550 ;;Total ram usage:       14 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; Hardware stack levels required when called: 3
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_I2C_Master_Init
  4557 ;;		_USART_init_baud
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561     15BB                     ___lldiv:	
  4562                           ;psect for function ___lldiv
  4563                           
  4564     15BB                     l2460:	
  4565                           ;incstack = 0
  4566                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4567                           
  4568     15BB  3000               	movlw	0
  4569     15BC  1283               	bcf	3,5	;RP0=0, select bank0
  4570     15BD  1303               	bcf	3,6	;RP1=0, select bank0
  4571     15BE  00B9               	movwf	___lldiv@quotient+3
  4572     15BF  3000               	movlw	0
  4573     15C0  00B8               	movwf	___lldiv@quotient+2
  4574     15C1  3000               	movlw	0
  4575     15C2  00B7               	movwf	___lldiv@quotient+1
  4576     15C3  3000               	movlw	0
  4577     15C4  00B6               	movwf	___lldiv@quotient
  4578     15C5  0830               	movf	___lldiv@divisor+3,w
  4579     15C6  042F               	iorwf	___lldiv@divisor+2,w
  4580     15C7  042E               	iorwf	___lldiv@divisor+1,w
  4581     15C8  042D               	iorwf	___lldiv@divisor,w
  4582     15C9  1903               	skipnz
  4583     15CA  2DCC               	goto	u2411
  4584     15CB  2DCD               	goto	u2410
  4585     15CC                     u2411:
  4586     15CC  2E1A               	goto	l2480
  4587     15CD                     u2410:
  4588     15CD                     l2462:
  4589     15CD  01BA               	clrf	___lldiv@counter
  4590     15CE  0ABA               	incf	___lldiv@counter,f
  4591     15CF  2DDD               	goto	l2466
  4592     15D0                     l2464:
  4593     15D0  3001               	movlw	1
  4594     15D1  00B5               	movwf	??___lldiv
  4595     15D2                     u2425:
  4596     15D2  1003               	clrc
  4597     15D3  0DAD               	rlf	___lldiv@divisor,f
  4598     15D4  0DAE               	rlf	___lldiv@divisor+1,f
  4599     15D5  0DAF               	rlf	___lldiv@divisor+2,f
  4600     15D6  0DB0               	rlf	___lldiv@divisor+3,f
  4601     15D7  0BB5               	decfsz	??___lldiv,f
  4602     15D8  2DD2               	goto	u2425
  4603     15D9  3001               	movlw	1
  4604     15DA  00B5               	movwf	??___lldiv
  4605     15DB  0835               	movf	??___lldiv,w
  4606     15DC  07BA               	addwf	___lldiv@counter,f
  4607     15DD                     l2466:
  4608     15DD  1FB0               	btfss	___lldiv@divisor+3,7
  4609     15DE  2DE0               	goto	u2431
  4610     15DF  2DE1               	goto	u2430
  4611     15E0                     u2431:
  4612     15E0  2DD0               	goto	l2464
  4613     15E1                     u2430:
  4614     15E1                     l2468:
  4615     15E1  3001               	movlw	1
  4616     15E2  00B5               	movwf	??___lldiv
  4617     15E3                     u2445:
  4618     15E3  1003               	clrc
  4619     15E4  0DB6               	rlf	___lldiv@quotient,f
  4620     15E5  0DB7               	rlf	___lldiv@quotient+1,f
  4621     15E6  0DB8               	rlf	___lldiv@quotient+2,f
  4622     15E7  0DB9               	rlf	___lldiv@quotient+3,f
  4623     15E8  0BB5               	decfsz	??___lldiv,f
  4624     15E9  2DE3               	goto	u2445
  4625     15EA                     l2470:
  4626     15EA  0830               	movf	___lldiv@divisor+3,w
  4627     15EB  0234               	subwf	___lldiv@dividend+3,w
  4628     15EC  1D03               	skipz
  4629     15ED  2DF8               	goto	u2455
  4630     15EE  082F               	movf	___lldiv@divisor+2,w
  4631     15EF  0233               	subwf	___lldiv@dividend+2,w
  4632     15F0  1D03               	skipz
  4633     15F1  2DF8               	goto	u2455
  4634     15F2  082E               	movf	___lldiv@divisor+1,w
  4635     15F3  0232               	subwf	___lldiv@dividend+1,w
  4636     15F4  1D03               	skipz
  4637     15F5  2DF8               	goto	u2455
  4638     15F6  082D               	movf	___lldiv@divisor,w
  4639     15F7  0231               	subwf	___lldiv@dividend,w
  4640     15F8                     u2455:
  4641     15F8  1C03               	skipc
  4642     15F9  2DFB               	goto	u2451
  4643     15FA  2DFC               	goto	u2450
  4644     15FB                     u2451:
  4645     15FB  2E0B               	goto	l2476
  4646     15FC                     u2450:
  4647     15FC                     l2472:
  4648     15FC  082D               	movf	___lldiv@divisor,w
  4649     15FD  02B1               	subwf	___lldiv@dividend,f
  4650     15FE  082E               	movf	___lldiv@divisor+1,w
  4651     15FF  1C03               	skipc
  4652     1600  0F2E               	incfsz	___lldiv@divisor+1,w
  4653     1601  02B2               	subwf	___lldiv@dividend+1,f
  4654     1602  082F               	movf	___lldiv@divisor+2,w
  4655     1603  1C03               	skipc
  4656     1604  0F2F               	incfsz	___lldiv@divisor+2,w
  4657     1605  02B3               	subwf	___lldiv@dividend+2,f
  4658     1606  0830               	movf	___lldiv@divisor+3,w
  4659     1607  1C03               	skipc
  4660     1608  0F30               	incfsz	___lldiv@divisor+3,w
  4661     1609  02B4               	subwf	___lldiv@dividend+3,f
  4662     160A                     l2474:
  4663     160A  1436               	bsf	___lldiv@quotient,0
  4664     160B                     l2476:
  4665     160B  3001               	movlw	1
  4666     160C                     u2465:
  4667     160C  1003               	clrc
  4668     160D  0CB0               	rrf	___lldiv@divisor+3,f
  4669     160E  0CAF               	rrf	___lldiv@divisor+2,f
  4670     160F  0CAE               	rrf	___lldiv@divisor+1,f
  4671     1610  0CAD               	rrf	___lldiv@divisor,f
  4672     1611  3EFF               	addlw	-1
  4673     1612  1D03               	skipz
  4674     1613  2E0C               	goto	u2465
  4675     1614                     l2478:
  4676     1614  3001               	movlw	1
  4677     1615  02BA               	subwf	___lldiv@counter,f
  4678     1616  1D03               	btfss	3,2
  4679     1617  2E19               	goto	u2471
  4680     1618  2E1A               	goto	u2470
  4681     1619                     u2471:
  4682     1619  2DE1               	goto	l2468
  4683     161A                     u2470:
  4684     161A                     l2480:
  4685     161A  0839               	movf	___lldiv@quotient+3,w
  4686     161B  00B0               	movwf	?___lldiv+3
  4687     161C  0838               	movf	___lldiv@quotient+2,w
  4688     161D  00AF               	movwf	?___lldiv+2
  4689     161E  0837               	movf	___lldiv@quotient+1,w
  4690     161F  00AE               	movwf	?___lldiv+1
  4691     1620  0836               	movf	___lldiv@quotient,w
  4692     1621  00AD               	movwf	?___lldiv
  4693     1622                     l506:
  4694     1622  0008               	return
  4695     1623                     __end_of___lldiv:
  4696                           
  4697                           	psect	text14
  4698     0AC9                     __ptext14:	
  4699 ;; *************** function _floatToStr *****************
  4700 ;; Defined at:
  4701 ;;		line 474 in file "masterProyecto.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  value           4    0[BANK1 ] float 
  4704 ;;  buffer          1    4[BANK1 ] PTR unsigned char 
  4705 ;;		 -> bufferQ(4), 
  4706 ;;  precision       2    5[BANK1 ] int 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  i               2   14[BANK1 ] int 
  4709 ;;  floatingPart    4   18[BANK1 ] float 
  4710 ;;  integerPart     2   16[BANK1 ] int 
  4711 ;;  floatingLeng    2   12[BANK1 ] int 
  4712 ;;  integerLengt    2   10[BANK1 ] int 
  4713 ;;  roundedFloat    2    8[BANK1 ] int 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4723 ;;      Params:         0       0       7       0       0
  4724 ;;      Locals:         0       0      14       0       0
  4725 ;;      Temps:          0       0       1       0       0
  4726 ;;      Totals:         0       0      22       0       0
  4727 ;;Total ram usage:       22 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; Hardware stack levels required when called: 5
  4730 ;; This function calls:
  4731 ;;		___fladd
  4732 ;;		___flge
  4733 ;;		___flmul
  4734 ;;		___flneg
  4735 ;;		___flsub
  4736 ;;		___fltol
  4737 ;;		___xxtofl
  4738 ;;		_intToStr
  4739 ;; This function is called by:
  4740 ;;		_main
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744     0AC9                     _floatToStr:	
  4745                           ;psect for function _floatToStr
  4746                           
  4747     0AC9                     l3800:	
  4748                           ;incstack = 0
  4749                           ; Regs used in _floatToStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4750                           
  4751                           
  4752                           ;masterProyecto.c: 476:     if (value < 0) {
  4753     0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  4754     0ACA  1303               	bcf	3,6	;RP1=0, select bank1
  4755     0ACB  083F               	movf	(floatToStr@value+3)^(0+128),w
  4756     0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  4757     0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  4758     0ACE  00B0               	movwf	___flge@ff1+3
  4759     0ACF  1683               	bsf	3,5	;RP0=1, select bank1
  4760     0AD0  1303               	bcf	3,6	;RP1=0, select bank1
  4761     0AD1  083E               	movf	(floatToStr@value+2)^(0+128),w
  4762     0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  4763     0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  4764     0AD4  00AF               	movwf	___flge@ff1+2
  4765     0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  4766     0AD6  1303               	bcf	3,6	;RP1=0, select bank1
  4767     0AD7  083D               	movf	(floatToStr@value+1)^(0+128),w
  4768     0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  4769     0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  4770     0ADA  00AE               	movwf	___flge@ff1+1
  4771     0ADB  1683               	bsf	3,5	;RP0=1, select bank1
  4772     0ADC  1303               	bcf	3,6	;RP1=0, select bank1
  4773     0ADD  083C               	movf	floatToStr@value^(0+128),w
  4774     0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  4775     0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  4776     0AE0  00AD               	movwf	___flge@ff1
  4777     0AE1  3000               	movlw	0
  4778     0AE2  00B4               	movwf	___flge@ff2+3
  4779     0AE3  3000               	movlw	0
  4780     0AE4  00B3               	movwf	___flge@ff2+2
  4781     0AE5  3000               	movlw	0
  4782     0AE6  00B2               	movwf	___flge@ff2+1
  4783     0AE7  3000               	movlw	0
  4784     0AE8  00B1               	movwf	___flge@ff2
  4785     0AE9  120A  158A  2016  120A  158A  	fcall	___flge
  4786     0AEE  1803               	btfsc	3,0
  4787     0AEF  2AF1               	goto	u4681
  4788     0AF0  2AF2               	goto	u4680
  4789     0AF1                     u4681:
  4790     0AF1  2B30               	goto	l3808
  4791     0AF2                     u4680:
  4792     0AF2                     l3802:
  4793                           
  4794                           ;masterProyecto.c: 477:         value = -value;
  4795     0AF2  1683               	bsf	3,5	;RP0=1, select bank1
  4796     0AF3  1303               	bcf	3,6	;RP1=0, select bank1
  4797     0AF4  083F               	movf	(floatToStr@value+3)^(0+128),w
  4798     0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  4799     0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  4800     0AF7  00B0               	movwf	___flneg@f1+3
  4801     0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  4802     0AF9  1303               	bcf	3,6	;RP1=0, select bank1
  4803     0AFA  083E               	movf	(floatToStr@value+2)^(0+128),w
  4804     0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  4805     0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  4806     0AFD  00AF               	movwf	___flneg@f1+2
  4807     0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  4808     0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  4809     0B00  083D               	movf	(floatToStr@value+1)^(0+128),w
  4810     0B01  1283               	bcf	3,5	;RP0=0, select bank0
  4811     0B02  1303               	bcf	3,6	;RP1=0, select bank0
  4812     0B03  00AE               	movwf	___flneg@f1+1
  4813     0B04  1683               	bsf	3,5	;RP0=1, select bank1
  4814     0B05  1303               	bcf	3,6	;RP1=0, select bank1
  4815     0B06  083C               	movf	floatToStr@value^(0+128),w
  4816     0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4817     0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4818     0B09  00AD               	movwf	___flneg@f1
  4819     0B0A  160A  158A  27A0  120A  158A  	fcall	___flneg
  4820     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  4821     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  4822     0B11  0830               	movf	?___flneg+3,w
  4823     0B12  1683               	bsf	3,5	;RP0=1, select bank1
  4824     0B13  1303               	bcf	3,6	;RP1=0, select bank1
  4825     0B14  00BF               	movwf	(floatToStr@value+3)^(0+128)
  4826     0B15  1283               	bcf	3,5	;RP0=0, select bank0
  4827     0B16  1303               	bcf	3,6	;RP1=0, select bank0
  4828     0B17  082F               	movf	?___flneg+2,w
  4829     0B18  1683               	bsf	3,5	;RP0=1, select bank1
  4830     0B19  1303               	bcf	3,6	;RP1=0, select bank1
  4831     0B1A  00BE               	movwf	(floatToStr@value+2)^(0+128)
  4832     0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  4833     0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  4834     0B1D  082E               	movf	?___flneg+1,w
  4835     0B1E  1683               	bsf	3,5	;RP0=1, select bank1
  4836     0B1F  1303               	bcf	3,6	;RP1=0, select bank1
  4837     0B20  00BD               	movwf	(floatToStr@value+1)^(0+128)
  4838     0B21  1283               	bcf	3,5	;RP0=0, select bank0
  4839     0B22  1303               	bcf	3,6	;RP1=0, select bank0
  4840     0B23  082D               	movf	?___flneg,w
  4841     0B24  1683               	bsf	3,5	;RP0=1, select bank1
  4842     0B25  1303               	bcf	3,6	;RP1=0, select bank1
  4843     0B26  00BC               	movwf	floatToStr@value^(0+128)
  4844     0B27                     l3804:
  4845                           
  4846                           ;masterProyecto.c: 478:         *buffer++ = '-';
  4847     0B27  0840               	movf	floatToStr@buffer^(0+128),w
  4848     0B28  0084               	movwf	4
  4849     0B29  302D               	movlw	45
  4850     0B2A  1383               	bcf	3,7	;select IRP bank0
  4851     0B2B  0080               	movwf	0
  4852     0B2C                     l3806:
  4853     0B2C  3001               	movlw	1
  4854     0B2D  00C3               	movwf	??_floatToStr^(0+128)
  4855     0B2E  0843               	movf	??_floatToStr^(0+128),w
  4856     0B2F  07C0               	addwf	floatToStr@buffer^(0+128),f
  4857     0B30                     l3808:
  4858                           
  4859                           ;masterProyecto.c: 482:     int integerPart = (int)value;
  4860     0B30  1683               	bsf	3,5	;RP0=1, select bank1
  4861     0B31  1303               	bcf	3,6	;RP1=0, select bank1
  4862     0B32  083F               	movf	(floatToStr@value+3)^(0+128),w
  4863     0B33  1283               	bcf	3,5	;RP0=0, select bank0
  4864     0B34  1303               	bcf	3,6	;RP1=0, select bank0
  4865     0B35  00C4               	movwf	___fltol@f1+3
  4866     0B36  1683               	bsf	3,5	;RP0=1, select bank1
  4867     0B37  1303               	bcf	3,6	;RP1=0, select bank1
  4868     0B38  083E               	movf	(floatToStr@value+2)^(0+128),w
  4869     0B39  1283               	bcf	3,5	;RP0=0, select bank0
  4870     0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  4871     0B3B  00C3               	movwf	___fltol@f1+2
  4872     0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  4873     0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  4874     0B3E  083D               	movf	(floatToStr@value+1)^(0+128),w
  4875     0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  4876     0B40  1303               	bcf	3,6	;RP1=0, select bank0
  4877     0B41  00C2               	movwf	___fltol@f1+1
  4878     0B42  1683               	bsf	3,5	;RP0=1, select bank1
  4879     0B43  1303               	bcf	3,6	;RP1=0, select bank1
  4880     0B44  083C               	movf	floatToStr@value^(0+128),w
  4881     0B45  1283               	bcf	3,5	;RP0=0, select bank0
  4882     0B46  1303               	bcf	3,6	;RP1=0, select bank0
  4883     0B47  00C1               	movwf	___fltol@f1
  4884     0B48  160A  118A  2701  120A  158A  	fcall	___fltol
  4885     0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  4886     0B4E  1303               	bcf	3,6	;RP1=0, select bank0
  4887     0B4F  0842               	movf	?___fltol+1,w
  4888     0B50  1683               	bsf	3,5	;RP0=1, select bank1
  4889     0B51  1303               	bcf	3,6	;RP1=0, select bank1
  4890     0B52  00CD               	movwf	(floatToStr@integerPart+1)^(0+128)
  4891     0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4892     0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4893     0B55  0841               	movf	?___fltol,w
  4894     0B56  1683               	bsf	3,5	;RP0=1, select bank1
  4895     0B57  1303               	bcf	3,6	;RP1=0, select bank1
  4896     0B58  00CC               	movwf	floatToStr@integerPart^(0+128)
  4897     0B59                     l3810:
  4898                           
  4899                           ;masterProyecto.c: 485:     float floatingPart = value - integerPart;
  4900     0B59  084C               	movf	floatToStr@integerPart^(0+128),w
  4901     0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  4902     0B5B  1303               	bcf	3,6	;RP1=0, select bank0
  4903     0B5C  00B6               	movwf	___xxtofl@val
  4904     0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  4905     0B5E  1303               	bcf	3,6	;RP1=0, select bank1
  4906     0B5F  084D               	movf	(floatToStr@integerPart+1)^(0+128),w
  4907     0B60  1283               	bcf	3,5	;RP0=0, select bank0
  4908     0B61  1303               	bcf	3,6	;RP1=0, select bank0
  4909     0B62  00B7               	movwf	___xxtofl@val+1
  4910     0B63  3000               	movlw	0
  4911     0B64  1BB7               	btfsc	___xxtofl@val+1,7
  4912     0B65  30FF               	movlw	255
  4913     0B66  00B8               	movwf	___xxtofl@val+2
  4914     0B67  00B9               	movwf	___xxtofl@val+3
  4915     0B68  3001               	movlw	1
  4916     0B69  120A  158A  20BA  120A  158A  	fcall	___xxtofl
  4917     0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  4918     0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  4919     0B70  0839               	movf	?___xxtofl+3,w
  4920     0B71  00C7               	movwf	___flsub@a+3
  4921     0B72  0838               	movf	?___xxtofl+2,w
  4922     0B73  00C6               	movwf	___flsub@a+2
  4923     0B74  0837               	movf	?___xxtofl+1,w
  4924     0B75  00C5               	movwf	___flsub@a+1
  4925     0B76  0836               	movf	?___xxtofl,w
  4926     0B77  00C4               	movwf	___flsub@a
  4927     0B78  1683               	bsf	3,5	;RP0=1, select bank1
  4928     0B79  1303               	bcf	3,6	;RP1=0, select bank1
  4929     0B7A  083F               	movf	(floatToStr@value+3)^(0+128),w
  4930     0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  4931     0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  4932     0B7D  00CB               	movwf	___flsub@b+3
  4933     0B7E  1683               	bsf	3,5	;RP0=1, select bank1
  4934     0B7F  1303               	bcf	3,6	;RP1=0, select bank1
  4935     0B80  083E               	movf	(floatToStr@value+2)^(0+128),w
  4936     0B81  1283               	bcf	3,5	;RP0=0, select bank0
  4937     0B82  1303               	bcf	3,6	;RP1=0, select bank0
  4938     0B83  00CA               	movwf	___flsub@b+2
  4939     0B84  1683               	bsf	3,5	;RP0=1, select bank1
  4940     0B85  1303               	bcf	3,6	;RP1=0, select bank1
  4941     0B86  083D               	movf	(floatToStr@value+1)^(0+128),w
  4942     0B87  1283               	bcf	3,5	;RP0=0, select bank0
  4943     0B88  1303               	bcf	3,6	;RP1=0, select bank0
  4944     0B89  00C9               	movwf	___flsub@b+1
  4945     0B8A  1683               	bsf	3,5	;RP0=1, select bank1
  4946     0B8B  1303               	bcf	3,6	;RP1=0, select bank1
  4947     0B8C  083C               	movf	floatToStr@value^(0+128),w
  4948     0B8D  1283               	bcf	3,5	;RP0=0, select bank0
  4949     0B8E  1303               	bcf	3,6	;RP1=0, select bank0
  4950     0B8F  00C8               	movwf	___flsub@b
  4951     0B90  160A  118A  2062  120A  158A  	fcall	___flsub
  4952     0B95  1283               	bcf	3,5	;RP0=0, select bank0
  4953     0B96  1303               	bcf	3,6	;RP1=0, select bank0
  4954     0B97  0847               	movf	?___flsub+3,w
  4955     0B98  1683               	bsf	3,5	;RP0=1, select bank1
  4956     0B99  1303               	bcf	3,6	;RP1=0, select bank1
  4957     0B9A  00D1               	movwf	(floatToStr@floatingPart+3)^(0+128)
  4958     0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  4959     0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  4960     0B9D  0846               	movf	?___flsub+2,w
  4961     0B9E  1683               	bsf	3,5	;RP0=1, select bank1
  4962     0B9F  1303               	bcf	3,6	;RP1=0, select bank1
  4963     0BA0  00D0               	movwf	(floatToStr@floatingPart+2)^(0+128)
  4964     0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  4965     0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  4966     0BA3  0845               	movf	?___flsub+1,w
  4967     0BA4  1683               	bsf	3,5	;RP0=1, select bank1
  4968     0BA5  1303               	bcf	3,6	;RP1=0, select bank1
  4969     0BA6  00CF               	movwf	(floatToStr@floatingPart+1)^(0+128)
  4970     0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  4971     0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  4972     0BA9  0844               	movf	?___flsub,w
  4973     0BAA  1683               	bsf	3,5	;RP0=1, select bank1
  4974     0BAB  1303               	bcf	3,6	;RP1=0, select bank1
  4975     0BAC  00CE               	movwf	floatToStr@floatingPart^(0+128)
  4976     0BAD                     l3812:
  4977                           
  4978                           ;masterProyecto.c: 486:     for (int i = 0; i < precision; i++) {
  4979     0BAD  01CA               	clrf	floatToStr@i^(0+128)
  4980     0BAE  01CB               	clrf	(floatToStr@i+1)^(0+128)
  4981     0BAF  2BF5               	goto	l3818
  4982     0BB0                     l3814:
  4983                           
  4984                           ;masterProyecto.c: 487:         floatingPart *= 10;
  4985     0BB0  3041               	movlw	65
  4986     0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  4987     0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  4988     0BB3  00B9               	movwf	___flmul@b+3
  4989     0BB4  3020               	movlw	32
  4990     0BB5  00B8               	movwf	___flmul@b+2
  4991     0BB6  3000               	movlw	0
  4992     0BB7  00B7               	movwf	___flmul@b+1
  4993     0BB8  3000               	movlw	0
  4994     0BB9  00B6               	movwf	___flmul@b
  4995     0BBA  1683               	bsf	3,5	;RP0=1, select bank1
  4996     0BBB  1303               	bcf	3,6	;RP1=0, select bank1
  4997     0BBC  0851               	movf	(floatToStr@floatingPart+3)^(0+128),w
  4998     0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  4999     0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  5000     0BBF  00BD               	movwf	___flmul@a+3
  5001     0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  5002     0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  5003     0BC2  0850               	movf	(floatToStr@floatingPart+2)^(0+128),w
  5004     0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  5005     0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  5006     0BC5  00BC               	movwf	___flmul@a+2
  5007     0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  5008     0BC7  1303               	bcf	3,6	;RP1=0, select bank1
  5009     0BC8  084F               	movf	(floatToStr@floatingPart+1)^(0+128),w
  5010     0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  5011     0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  5012     0BCB  00BB               	movwf	___flmul@a+1
  5013     0BCC  1683               	bsf	3,5	;RP0=1, select bank1
  5014     0BCD  1303               	bcf	3,6	;RP1=0, select bank1
  5015     0BCE  084E               	movf	floatToStr@floatingPart^(0+128),w
  5016     0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  5017     0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  5018     0BD1  00BA               	movwf	___flmul@a
  5019     0BD2  120A  158A  24BB  120A  158A  	fcall	___flmul
  5020     0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  5021     0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  5022     0BD9  0839               	movf	?___flmul+3,w
  5023     0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  5024     0BDB  1303               	bcf	3,6	;RP1=0, select bank1
  5025     0BDC  00D1               	movwf	(floatToStr@floatingPart+3)^(0+128)
  5026     0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  5027     0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  5028     0BDF  0838               	movf	?___flmul+2,w
  5029     0BE0  1683               	bsf	3,5	;RP0=1, select bank1
  5030     0BE1  1303               	bcf	3,6	;RP1=0, select bank1
  5031     0BE2  00D0               	movwf	(floatToStr@floatingPart+2)^(0+128)
  5032     0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  5033     0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  5034     0BE5  0837               	movf	?___flmul+1,w
  5035     0BE6  1683               	bsf	3,5	;RP0=1, select bank1
  5036     0BE7  1303               	bcf	3,6	;RP1=0, select bank1
  5037     0BE8  00CF               	movwf	(floatToStr@floatingPart+1)^(0+128)
  5038     0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  5039     0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  5040     0BEB  0836               	movf	?___flmul,w
  5041     0BEC  1683               	bsf	3,5	;RP0=1, select bank1
  5042     0BED  1303               	bcf	3,6	;RP1=0, select bank1
  5043     0BEE  00CE               	movwf	floatToStr@floatingPart^(0+128)
  5044     0BEF                     l3816:
  5045                           
  5046                           ;masterProyecto.c: 488:     }
  5047     0BEF  3001               	movlw	1
  5048     0BF0  07CA               	addwf	floatToStr@i^(0+128),f
  5049     0BF1  1803               	skipnc
  5050     0BF2  0ACB               	incf	(floatToStr@i+1)^(0+128),f
  5051     0BF3  3000               	movlw	0
  5052     0BF4  07CB               	addwf	(floatToStr@i+1)^(0+128),f
  5053     0BF5                     l3818:
  5054     0BF5  084B               	movf	(floatToStr@i+1)^(0+128),w
  5055     0BF6  3A80               	xorlw	128
  5056     0BF7  00C3               	movwf	??_floatToStr^(0+128)
  5057     0BF8  0842               	movf	(floatToStr@precision+1)^(0+128),w
  5058     0BF9  3A80               	xorlw	128
  5059     0BFA  0243               	subwf	??_floatToStr^(0+128),w
  5060     0BFB  1D03               	skipz
  5061     0BFC  2BFF               	goto	u4695
  5062     0BFD  0841               	movf	floatToStr@precision^(0+128),w
  5063     0BFE  024A               	subwf	floatToStr@i^(0+128),w
  5064     0BFF                     u4695:
  5065     0BFF  1C03               	skipc
  5066     0C00  2C02               	goto	u4691
  5067     0C01  2C03               	goto	u4690
  5068     0C02                     u4691:
  5069     0C02  2BB0               	goto	l3814
  5070     0C03                     u4690:
  5071     0C03                     l3820:
  5072                           
  5073                           ;masterProyecto.c: 489:     int roundedFloatingPart = (int)(floatingPart + 0.5);
  5074     0C03  1683               	bsf	3,5	;RP0=1, select bank1
  5075     0C04  1303               	bcf	3,6	;RP1=0, select bank1
  5076     0C05  0851               	movf	(floatToStr@floatingPart+3)^(0+128),w
  5077     0C06  1283               	bcf	3,5	;RP0=0, select bank0
  5078     0C07  1303               	bcf	3,6	;RP1=0, select bank0
  5079     0C08  00B4               	movwf	___fladd@a+3
  5080     0C09  1683               	bsf	3,5	;RP0=1, select bank1
  5081     0C0A  1303               	bcf	3,6	;RP1=0, select bank1
  5082     0C0B  0850               	movf	(floatToStr@floatingPart+2)^(0+128),w
  5083     0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  5084     0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  5085     0C0E  00B3               	movwf	___fladd@a+2
  5086     0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  5087     0C10  1303               	bcf	3,6	;RP1=0, select bank1
  5088     0C11  084F               	movf	(floatToStr@floatingPart+1)^(0+128),w
  5089     0C12  1283               	bcf	3,5	;RP0=0, select bank0
  5090     0C13  1303               	bcf	3,6	;RP1=0, select bank0
  5091     0C14  00B2               	movwf	___fladd@a+1
  5092     0C15  1683               	bsf	3,5	;RP0=1, select bank1
  5093     0C16  1303               	bcf	3,6	;RP1=0, select bank1
  5094     0C17  084E               	movf	floatToStr@floatingPart^(0+128),w
  5095     0C18  1283               	bcf	3,5	;RP0=0, select bank0
  5096     0C19  1303               	bcf	3,6	;RP1=0, select bank0
  5097     0C1A  00B1               	movwf	___fladd@a
  5098     0C1B  303F               	movlw	63
  5099     0C1C  00B0               	movwf	___fladd@b+3
  5100     0C1D  3000               	movlw	0
  5101     0C1E  00AF               	movwf	___fladd@b+2
  5102     0C1F  3000               	movlw	0
  5103     0C20  00AE               	movwf	___fladd@b+1
  5104     0C21  3000               	movlw	0
  5105     0C22  00AD               	movwf	___fladd@b
  5106     0C23  120A  118A  2527  120A  158A  	fcall	___fladd
  5107     0C28  1283               	bcf	3,5	;RP0=0, select bank0
  5108     0C29  1303               	bcf	3,6	;RP1=0, select bank0
  5109     0C2A  0830               	movf	?___fladd+3,w
  5110     0C2B  00C4               	movwf	___fltol@f1+3
  5111     0C2C  082F               	movf	?___fladd+2,w
  5112     0C2D  00C3               	movwf	___fltol@f1+2
  5113     0C2E  082E               	movf	?___fladd+1,w
  5114     0C2F  00C2               	movwf	___fltol@f1+1
  5115     0C30  082D               	movf	?___fladd,w
  5116     0C31  00C1               	movwf	___fltol@f1
  5117     0C32  160A  118A  2701  120A  158A  	fcall	___fltol
  5118     0C37  1283               	bcf	3,5	;RP0=0, select bank0
  5119     0C38  1303               	bcf	3,6	;RP1=0, select bank0
  5120     0C39  0842               	movf	?___fltol+1,w
  5121     0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  5122     0C3B  1303               	bcf	3,6	;RP1=0, select bank1
  5123     0C3C  00C5               	movwf	(floatToStr@roundedFloatingPart+1)^(0+128)
  5124     0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  5125     0C3E  1303               	bcf	3,6	;RP1=0, select bank0
  5126     0C3F  0841               	movf	?___fltol,w
  5127     0C40  1683               	bsf	3,5	;RP0=1, select bank1
  5128     0C41  1303               	bcf	3,6	;RP1=0, select bank1
  5129     0C42  00C4               	movwf	floatToStr@roundedFloatingPart^(0+128)
  5130     0C43                     l3822:
  5131                           
  5132                           ;masterProyecto.c: 492:     int integerLength = intToStr(integerPart, buffer, 0);
  5133     0C43  084D               	movf	(floatToStr@integerPart+1)^(0+128),w
  5134     0C44  1283               	bcf	3,5	;RP0=0, select bank0
  5135     0C45  1303               	bcf	3,6	;RP1=0, select bank0
  5136     0C46  00B9               	movwf	intToStr@x+1
  5137     0C47  1683               	bsf	3,5	;RP0=1, select bank1
  5138     0C48  1303               	bcf	3,6	;RP1=0, select bank1
  5139     0C49  084C               	movf	floatToStr@integerPart^(0+128),w
  5140     0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  5141     0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  5142     0C4C  00B8               	movwf	intToStr@x
  5143     0C4D  1683               	bsf	3,5	;RP0=1, select bank1
  5144     0C4E  1303               	bcf	3,6	;RP1=0, select bank1
  5145     0C4F  0840               	movf	floatToStr@buffer^(0+128),w
  5146     0C50  1283               	bcf	3,5	;RP0=0, select bank0
  5147     0C51  1303               	bcf	3,6	;RP1=0, select bank0
  5148     0C52  00BA               	movwf	intToStr@str
  5149     0C53  3000               	movlw	0
  5150     0C54  00BB               	movwf	intToStr@d
  5151     0C55  00BC               	movwf	intToStr@d+1
  5152     0C56  160A  118A  268C  120A  158A  	fcall	_intToStr
  5153     0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5154     0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5155     0C5D  0839               	movf	?_intToStr+1,w
  5156     0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  5157     0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  5158     0C60  00C7               	movwf	(floatToStr@integerLength+1)^(0+128)
  5159     0C61  1283               	bcf	3,5	;RP0=0, select bank0
  5160     0C62  1303               	bcf	3,6	;RP1=0, select bank0
  5161     0C63  0838               	movf	?_intToStr,w
  5162     0C64  1683               	bsf	3,5	;RP0=1, select bank1
  5163     0C65  1303               	bcf	3,6	;RP1=0, select bank1
  5164     0C66  00C6               	movwf	floatToStr@integerLength^(0+128)
  5165     0C67                     l3824:
  5166                           
  5167                           ;masterProyecto.c: 493:     buffer += integerLength;
  5168     0C67  0846               	movf	floatToStr@integerLength^(0+128),w
  5169     0C68  00C3               	movwf	??_floatToStr^(0+128)
  5170     0C69  0843               	movf	??_floatToStr^(0+128),w
  5171     0C6A  07C0               	addwf	floatToStr@buffer^(0+128),f
  5172     0C6B                     l3826:
  5173                           
  5174                           ;masterProyecto.c: 496:     if (precision > 0) {
  5175     0C6B  0842               	movf	(floatToStr@precision+1)^(0+128),w
  5176     0C6C  3A80               	xorlw	128
  5177     0C6D  00FF               	movwf	btemp+1
  5178     0C6E  3080               	movlw	128
  5179     0C6F  027F               	subwf	btemp+1,w
  5180     0C70  1D03               	skipz
  5181     0C71  2C74               	goto	u4705
  5182     0C72  3001               	movlw	1
  5183     0C73  0241               	subwf	floatToStr@precision^(0+128),w
  5184     0C74                     u4705:
  5185     0C74  1C03               	skipc
  5186     0C75  2C77               	goto	u4701
  5187     0C76  2C78               	goto	u4700
  5188     0C77                     u4701:
  5189     0C77  2C83               	goto	l3832
  5190     0C78                     u4700:
  5191     0C78                     l3828:
  5192                           
  5193                           ;masterProyecto.c: 497:         *buffer++ = '.';
  5194     0C78  1683               	bsf	3,5	;RP0=1, select bank1
  5195     0C79  1303               	bcf	3,6	;RP1=0, select bank1
  5196     0C7A  0840               	movf	floatToStr@buffer^(0+128),w
  5197     0C7B  0084               	movwf	4
  5198     0C7C  302E               	movlw	46
  5199     0C7D  1383               	bcf	3,7	;select IRP bank0
  5200     0C7E  0080               	movwf	0
  5201     0C7F                     l3830:
  5202     0C7F  3001               	movlw	1
  5203     0C80  00C3               	movwf	??_floatToStr^(0+128)
  5204     0C81  0843               	movf	??_floatToStr^(0+128),w
  5205     0C82  07C0               	addwf	floatToStr@buffer^(0+128),f
  5206     0C83                     l3832:
  5207                           
  5208                           ;masterProyecto.c: 501:     int floatingLength = intToStr(roundedFloatingPart, buffer, p
      +                          recision);
  5209     0C83  1683               	bsf	3,5	;RP0=1, select bank1
  5210     0C84  1303               	bcf	3,6	;RP1=0, select bank1
  5211     0C85  0845               	movf	(floatToStr@roundedFloatingPart+1)^(0+128),w
  5212     0C86  1283               	bcf	3,5	;RP0=0, select bank0
  5213     0C87  1303               	bcf	3,6	;RP1=0, select bank0
  5214     0C88  00B9               	movwf	intToStr@x+1
  5215     0C89  1683               	bsf	3,5	;RP0=1, select bank1
  5216     0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  5217     0C8B  0844               	movf	floatToStr@roundedFloatingPart^(0+128),w
  5218     0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  5219     0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  5220     0C8E  00B8               	movwf	intToStr@x
  5221     0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  5222     0C90  1303               	bcf	3,6	;RP1=0, select bank1
  5223     0C91  0840               	movf	floatToStr@buffer^(0+128),w
  5224     0C92  1283               	bcf	3,5	;RP0=0, select bank0
  5225     0C93  1303               	bcf	3,6	;RP1=0, select bank0
  5226     0C94  00BA               	movwf	intToStr@str
  5227     0C95  1683               	bsf	3,5	;RP0=1, select bank1
  5228     0C96  1303               	bcf	3,6	;RP1=0, select bank1
  5229     0C97  0842               	movf	(floatToStr@precision+1)^(0+128),w
  5230     0C98  1283               	bcf	3,5	;RP0=0, select bank0
  5231     0C99  1303               	bcf	3,6	;RP1=0, select bank0
  5232     0C9A  00BC               	movwf	intToStr@d+1
  5233     0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  5234     0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  5235     0C9D  0841               	movf	floatToStr@precision^(0+128),w
  5236     0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  5237     0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  5238     0CA0  00BB               	movwf	intToStr@d
  5239     0CA1  160A  118A  268C  120A  158A  	fcall	_intToStr
  5240     0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  5241     0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  5242     0CA8  0839               	movf	?_intToStr+1,w
  5243     0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  5244     0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  5245     0CAB  00C9               	movwf	(floatToStr@floatingLength+1)^(0+128)
  5246     0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  5247     0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  5248     0CAE  0838               	movf	?_intToStr,w
  5249     0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  5250     0CB0  1303               	bcf	3,6	;RP1=0, select bank1
  5251     0CB1  00C8               	movwf	floatToStr@floatingLength^(0+128)
  5252     0CB2                     l3834:
  5253                           
  5254                           ;masterProyecto.c: 502:     buffer += floatingLength;
  5255     0CB2  0848               	movf	floatToStr@floatingLength^(0+128),w
  5256     0CB3  00C3               	movwf	??_floatToStr^(0+128)
  5257     0CB4  0843               	movf	??_floatToStr^(0+128),w
  5258     0CB5  07C0               	addwf	floatToStr@buffer^(0+128),f
  5259     0CB6                     l3836:
  5260                           
  5261                           ;masterProyecto.c: 505:     *buffer = '\0';
  5262     0CB6  0840               	movf	floatToStr@buffer^(0+128),w
  5263     0CB7  0084               	movwf	4
  5264     0CB8  1383               	bcf	3,7	;select IRP bank0
  5265     0CB9  0180               	clrf	0
  5266     0CBA                     l211:
  5267     0CBA  0008               	return
  5268     0CBB                     __end_of_floatToStr:
  5269                           
  5270                           	psect	text15
  5271     168C                     __ptext15:	
  5272 ;; *************** function _intToStr *****************
  5273 ;; Defined at:
  5274 ;;		line 460 in file "masterProyecto.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  x               2   24[BANK0 ] int 
  5277 ;;  str             1   26[BANK0 ] PTR unsigned char 
  5278 ;;		 -> bufferQ(4), 
  5279 ;;  d               2   27[BANK0 ] int 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  i               2   30[BANK0 ] int 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  2   24[BANK0 ] int 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5291 ;;      Params:         0       5       0       0       0
  5292 ;;      Locals:         0       2       0       0       0
  5293 ;;      Temps:          0       1       0       0       0
  5294 ;;      Totals:         0       8       0       0       0
  5295 ;;Total ram usage:        8 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 4
  5298 ;; This function calls:
  5299 ;;		___awdiv
  5300 ;;		___awmod
  5301 ;;		_reverse
  5302 ;; This function is called by:
  5303 ;;		_floatToStr
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307     168C                     _intToStr:	
  5308                           ;psect for function _intToStr
  5309                           
  5310     168C                     l2846:	
  5311                           ;incstack = 0
  5312                           ; Regs used in _intToStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5313                           
  5314                           
  5315                           ;masterProyecto.c: 461:     int i = 0;
  5316     168C  1283               	bcf	3,5	;RP0=0, select bank0
  5317     168D  1303               	bcf	3,6	;RP1=0, select bank0
  5318     168E  01BE               	clrf	intToStr@i
  5319     168F  01BF               	clrf	intToStr@i+1
  5320                           
  5321                           ;masterProyecto.c: 462:     while (x) {
  5322     1690  2EC2               	goto	l2854
  5323     1691                     l2848:
  5324                           
  5325                           ;masterProyecto.c: 463:         str[i++] = (x % 10) + '0';
  5326     1691  083E               	movf	intToStr@i,w
  5327     1692  073A               	addwf	intToStr@str,w
  5328     1693  00BD               	movwf	??_intToStr
  5329     1694  083D               	movf	??_intToStr,w
  5330     1695  0084               	movwf	4
  5331     1696  300A               	movlw	10
  5332     1697  00AD               	movwf	___awmod@divisor
  5333     1698  3000               	movlw	0
  5334     1699  00AE               	movwf	___awmod@divisor+1
  5335     169A  0839               	movf	intToStr@x+1,w
  5336     169B  00B0               	movwf	___awmod@dividend+1
  5337     169C  0838               	movf	intToStr@x,w
  5338     169D  00AF               	movwf	___awmod@dividend
  5339     169E  160A  118A  23D9  160A  118A  	fcall	___awmod
  5340     16A3  1283               	bcf	3,5	;RP0=0, select bank0
  5341     16A4  1303               	bcf	3,6	;RP1=0, select bank0
  5342     16A5  082D               	movf	?___awmod,w
  5343     16A6  3E30               	addlw	48
  5344     16A7  1383               	bcf	3,7	;select IRP bank0
  5345     16A8  0080               	movwf	0
  5346     16A9                     l2850:
  5347     16A9  3001               	movlw	1
  5348     16AA  07BE               	addwf	intToStr@i,f
  5349     16AB  1803               	skipnc
  5350     16AC  0ABF               	incf	intToStr@i+1,f
  5351     16AD  3000               	movlw	0
  5352     16AE  07BF               	addwf	intToStr@i+1,f
  5353     16AF                     l2852:
  5354                           
  5355                           ;masterProyecto.c: 464:         x = x / 10;
  5356     16AF  300A               	movlw	10
  5357     16B0  00AD               	movwf	___awdiv@divisor
  5358     16B1  3000               	movlw	0
  5359     16B2  00AE               	movwf	___awdiv@divisor+1
  5360     16B3  0839               	movf	intToStr@x+1,w
  5361     16B4  00B0               	movwf	___awdiv@dividend+1
  5362     16B5  0838               	movf	intToStr@x,w
  5363     16B6  00AF               	movwf	___awdiv@dividend
  5364     16B7  160A  118A  2623  160A  118A  	fcall	___awdiv
  5365     16BC  1283               	bcf	3,5	;RP0=0, select bank0
  5366     16BD  1303               	bcf	3,6	;RP1=0, select bank0
  5367     16BE  082E               	movf	?___awdiv+1,w
  5368     16BF  00B9               	movwf	intToStr@x+1
  5369     16C0  082D               	movf	?___awdiv,w
  5370     16C1  00B8               	movwf	intToStr@x
  5371     16C2                     l2854:
  5372                           
  5373                           ;masterProyecto.c: 462:     while (x) {
  5374     16C2  0838               	movf	intToStr@x,w
  5375     16C3  0439               	iorwf	intToStr@x+1,w
  5376     16C4  1D03               	btfss	3,2
  5377     16C5  2EC7               	goto	u3261
  5378     16C6  2EC8               	goto	u3260
  5379     16C7                     u3261:
  5380     16C7  2E91               	goto	l2848
  5381     16C8                     u3260:
  5382     16C8  2ED9               	goto	l2860
  5383     16C9                     l2856:
  5384                           
  5385                           ;masterProyecto.c: 467:         str[i++] = '0';
  5386     16C9  1283               	bcf	3,5	;RP0=0, select bank0
  5387     16CA  1303               	bcf	3,6	;RP1=0, select bank0
  5388     16CB  083E               	movf	intToStr@i,w
  5389     16CC  073A               	addwf	intToStr@str,w
  5390     16CD  00BD               	movwf	??_intToStr
  5391     16CE  083D               	movf	??_intToStr,w
  5392     16CF  0084               	movwf	4
  5393     16D0  3030               	movlw	48
  5394     16D1  1383               	bcf	3,7	;select IRP bank0
  5395     16D2  0080               	movwf	0
  5396     16D3                     l2858:
  5397     16D3  3001               	movlw	1
  5398     16D4  07BE               	addwf	intToStr@i,f
  5399     16D5  1803               	skipnc
  5400     16D6  0ABF               	incf	intToStr@i+1,f
  5401     16D7  3000               	movlw	0
  5402     16D8  07BF               	addwf	intToStr@i+1,f
  5403     16D9                     l2860:
  5404                           
  5405                           ;masterProyecto.c: 466:     while (i < d) {
  5406     16D9  083F               	movf	intToStr@i+1,w
  5407     16DA  3A80               	xorlw	128
  5408     16DB  00BD               	movwf	??_intToStr
  5409     16DC  083C               	movf	intToStr@d+1,w
  5410     16DD  3A80               	xorlw	128
  5411     16DE  023D               	subwf	??_intToStr,w
  5412     16DF  1D03               	skipz
  5413     16E0  2EE3               	goto	u3275
  5414     16E1  083B               	movf	intToStr@d,w
  5415     16E2  023E               	subwf	intToStr@i,w
  5416     16E3                     u3275:
  5417     16E3  1C03               	skipc
  5418     16E4  2EE6               	goto	u3271
  5419     16E5  2EE7               	goto	u3270
  5420     16E6                     u3271:
  5421     16E6  2EC9               	goto	l2856
  5422     16E7                     u3270:
  5423     16E7                     l2862:
  5424                           
  5425                           ;masterProyecto.c: 469:     reverse(str, i);
  5426     16E7  1283               	bcf	3,5	;RP0=0, select bank0
  5427     16E8  1303               	bcf	3,6	;RP1=0, select bank0
  5428     16E9  083F               	movf	intToStr@i+1,w
  5429     16EA  00AE               	movwf	reverse@length+1
  5430     16EB  083E               	movf	intToStr@i,w
  5431     16EC  00AD               	movwf	reverse@length
  5432     16ED  083A               	movf	intToStr@str,w
  5433     16EE  160A  118A  2297  160A  118A  	fcall	_reverse
  5434     16F3                     l2864:
  5435                           
  5436                           ;masterProyecto.c: 470:     str[i] = '\0';
  5437     16F3  1283               	bcf	3,5	;RP0=0, select bank0
  5438     16F4  1303               	bcf	3,6	;RP1=0, select bank0
  5439     16F5  083E               	movf	intToStr@i,w
  5440     16F6  073A               	addwf	intToStr@str,w
  5441     16F7  00BD               	movwf	??_intToStr
  5442     16F8  083D               	movf	??_intToStr,w
  5443     16F9  0084               	movwf	4
  5444     16FA  1383               	bcf	3,7	;select IRP bank0
  5445     16FB  0180               	clrf	0
  5446     16FC                     l2866:
  5447                           
  5448                           ;masterProyecto.c: 471:     return i;
  5449     16FC  083F               	movf	intToStr@i+1,w
  5450     16FD  00B9               	movwf	?_intToStr+1
  5451     16FE  083E               	movf	intToStr@i,w
  5452     16FF  00B8               	movwf	?_intToStr
  5453     1700                     l203:
  5454     1700  0008               	return
  5455     1701                     __end_of_intToStr:
  5456                           
  5457                           	psect	text16
  5458     1297                     __ptext16:	
  5459 ;; *************** function _reverse *****************
  5460 ;; Defined at:
  5461 ;;		line 448 in file "masterProyecto.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  str             1    wreg     PTR unsigned char 
  5464 ;;		 -> bufferQ(4), 
  5465 ;;  length          2   13[BANK0 ] int 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  str             1   23[BANK0 ] PTR unsigned char 
  5468 ;;		 -> bufferQ(4), 
  5469 ;;  temp            1   18[BANK0 ] unsigned char 
  5470 ;;  end             2   21[BANK0 ] int 
  5471 ;;  start           2   19[BANK0 ] int 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5481 ;;      Params:         0       2       0       0       0
  5482 ;;      Locals:         0       6       0       0       0
  5483 ;;      Temps:          0       3       0       0       0
  5484 ;;      Totals:         0      11       0       0       0
  5485 ;;Total ram usage:       11 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 3
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_intToStr
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495     1297                     _reverse:	
  5496                           ;psect for function _reverse
  5497                           
  5498                           
  5499                           ;incstack = 0
  5500                           ; Regs used in _reverse: [wreg-fsr0h+status,2+status,0]
  5501                           ;reverse@str stored from wreg
  5502     1297  1283               	bcf	3,5	;RP0=0, select bank0
  5503     1298  1303               	bcf	3,6	;RP1=0, select bank0
  5504     1299  00B7               	movwf	reverse@str
  5505     129A                     l2438:
  5506                           
  5507                           ;masterProyecto.c: 449:     int start = 0;
  5508     129A  01B3               	clrf	reverse@start
  5509     129B  01B4               	clrf	reverse@start+1
  5510     129C                     l2440:
  5511                           
  5512                           ;masterProyecto.c: 450:     int end = length - 1;
  5513     129C  082D               	movf	reverse@length,w
  5514     129D  3EFF               	addlw	255
  5515     129E  00B5               	movwf	reverse@end
  5516     129F  082E               	movf	reverse@length+1,w
  5517     12A0  1803               	skipnc
  5518     12A1  3E01               	addlw	1
  5519     12A2  3EFF               	addlw	255
  5520     12A3  00B6               	movwf	reverse@end+1
  5521                           
  5522                           ;masterProyecto.c: 451:     while (start < end) {
  5523     12A4  2AD0               	goto	l2448
  5524     12A5                     l2442:
  5525                           
  5526                           ;masterProyecto.c: 452:         char temp = str[start];
  5527     12A5  1283               	bcf	3,5	;RP0=0, select bank0
  5528     12A6  1303               	bcf	3,6	;RP1=0, select bank0
  5529     12A7  0833               	movf	reverse@start,w
  5530     12A8  0737               	addwf	reverse@str,w
  5531     12A9  00AF               	movwf	??_reverse
  5532     12AA  082F               	movf	??_reverse,w
  5533     12AB  0084               	movwf	4
  5534     12AC  1383               	bcf	3,7	;select IRP bank0
  5535     12AD  0800               	movf	0,w
  5536     12AE  00B2               	movwf	reverse@temp
  5537                           
  5538                           ;masterProyecto.c: 453:         str[start] = str[end];
  5539     12AF  0835               	movf	reverse@end,w
  5540     12B0  0737               	addwf	reverse@str,w
  5541     12B1  00AF               	movwf	??_reverse
  5542     12B2  082F               	movf	??_reverse,w
  5543     12B3  0084               	movwf	4
  5544     12B4  0800               	movf	0,w
  5545     12B5  00B0               	movwf	??_reverse+1
  5546     12B6  0833               	movf	reverse@start,w
  5547     12B7  0737               	addwf	reverse@str,w
  5548     12B8  00B1               	movwf	??_reverse+2
  5549     12B9  0831               	movf	??_reverse+2,w
  5550     12BA  0084               	movwf	4
  5551     12BB  0830               	movf	??_reverse+1,w
  5552     12BC  0080               	movwf	0
  5553                           
  5554                           ;masterProyecto.c: 454:         str[end] = temp;
  5555     12BD  0835               	movf	reverse@end,w
  5556     12BE  0737               	addwf	reverse@str,w
  5557     12BF  00AF               	movwf	??_reverse
  5558     12C0  082F               	movf	??_reverse,w
  5559     12C1  0084               	movwf	4
  5560     12C2  0832               	movf	reverse@temp,w
  5561     12C3  0080               	movwf	0
  5562     12C4                     l2444:
  5563                           
  5564                           ;masterProyecto.c: 455:         start++;
  5565     12C4  3001               	movlw	1
  5566     12C5  07B3               	addwf	reverse@start,f
  5567     12C6  1803               	skipnc
  5568     12C7  0AB4               	incf	reverse@start+1,f
  5569     12C8  3000               	movlw	0
  5570     12C9  07B4               	addwf	reverse@start+1,f
  5571     12CA                     l2446:
  5572                           
  5573                           ;masterProyecto.c: 456:         end--;
  5574     12CA  30FF               	movlw	255
  5575     12CB  07B5               	addwf	reverse@end,f
  5576     12CC  1803               	skipnc
  5577     12CD  0AB6               	incf	reverse@end+1,f
  5578     12CE  30FF               	movlw	255
  5579     12CF  07B6               	addwf	reverse@end+1,f
  5580     12D0                     l2448:
  5581                           
  5582                           ;masterProyecto.c: 451:     while (start < end) {
  5583     12D0  0834               	movf	reverse@start+1,w
  5584     12D1  3A80               	xorlw	128
  5585     12D2  00AF               	movwf	??_reverse
  5586     12D3  0836               	movf	reverse@end+1,w
  5587     12D4  3A80               	xorlw	128
  5588     12D5  022F               	subwf	??_reverse,w
  5589     12D6  1D03               	skipz
  5590     12D7  2ADA               	goto	u2405
  5591     12D8  0835               	movf	reverse@end,w
  5592     12D9  0233               	subwf	reverse@start,w
  5593     12DA                     u2405:
  5594     12DA  1C03               	skipc
  5595     12DB  2ADD               	goto	u2401
  5596     12DC  2ADE               	goto	u2400
  5597     12DD                     u2401:
  5598     12DD  2AA5               	goto	l2442
  5599     12DE                     u2400:
  5600     12DE                     l194:
  5601     12DE  0008               	return
  5602     12DF                     __end_of_reverse:
  5603                           
  5604                           	psect	text17
  5605     08BA                     __ptext17:	
  5606 ;; *************** function ___xxtofl *****************
  5607 ;; Defined at:
  5608 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  sign            1    wreg     unsigned char 
  5611 ;;  val             4   22[BANK0 ] long 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  sign            1   30[BANK0 ] unsigned char 
  5614 ;;  arg             4   32[BANK0 ] unsigned long 
  5615 ;;  exp             1   31[BANK0 ] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  4   22[BANK0 ] unsigned char 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5625 ;;      Params:         0       4       0       0       0
  5626 ;;      Locals:         0       6       0       0       0
  5627 ;;      Temps:          0       4       0       0       0
  5628 ;;      Totals:         0      14       0       0       0
  5629 ;;Total ram usage:       14 bytes
  5630 ;; Hardware stack levels used: 1
  5631 ;; Hardware stack levels required when called: 3
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_main
  5636 ;;		_floatToStr
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640     08BA                     ___xxtofl:	
  5641                           ;psect for function ___xxtofl
  5642                           
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5646                           ;___xxtofl@sign stored from wreg
  5647     08BA  1283               	bcf	3,5	;RP0=0, select bank0
  5648     08BB  1303               	bcf	3,6	;RP1=0, select bank0
  5649     08BC  00BE               	movwf	___xxtofl@sign
  5650     08BD                     l3102:
  5651     08BD  083E               	movf	___xxtofl@sign,w
  5652     08BE  1903               	btfsc	3,2
  5653     08BF  28C1               	goto	u3901
  5654     08C0  28C2               	goto	u3900
  5655     08C1                     u3901:
  5656     08C1  28D6               	goto	l3108
  5657     08C2                     u3900:
  5658     08C2                     l3104:
  5659     08C2  1FB9               	btfss	___xxtofl@val+3,7
  5660     08C3  28C5               	goto	u3911
  5661     08C4  28C6               	goto	u3910
  5662     08C5                     u3911:
  5663     08C5  28D6               	goto	l3108
  5664     08C6                     u3910:
  5665     08C6                     l3106:
  5666     08C6  0936               	comf	___xxtofl@val,w
  5667     08C7  00C0               	movwf	___xxtofl@arg
  5668     08C8  0937               	comf	___xxtofl@val+1,w
  5669     08C9  00C1               	movwf	___xxtofl@arg+1
  5670     08CA  0938               	comf	___xxtofl@val+2,w
  5671     08CB  00C2               	movwf	___xxtofl@arg+2
  5672     08CC  0939               	comf	___xxtofl@val+3,w
  5673     08CD  00C3               	movwf	___xxtofl@arg+3
  5674     08CE  0AC0               	incf	___xxtofl@arg,f
  5675     08CF  1903               	skipnz
  5676     08D0  0AC1               	incf	___xxtofl@arg+1,f
  5677     08D1  1903               	skipnz
  5678     08D2  0AC2               	incf	___xxtofl@arg+2,f
  5679     08D3  1903               	skipnz
  5680     08D4  0AC3               	incf	___xxtofl@arg+3,f
  5681     08D5  28DE               	goto	l903
  5682     08D6                     l3108:
  5683     08D6  0839               	movf	___xxtofl@val+3,w
  5684     08D7  00C3               	movwf	___xxtofl@arg+3
  5685     08D8  0838               	movf	___xxtofl@val+2,w
  5686     08D9  00C2               	movwf	___xxtofl@arg+2
  5687     08DA  0837               	movf	___xxtofl@val+1,w
  5688     08DB  00C1               	movwf	___xxtofl@arg+1
  5689     08DC  0836               	movf	___xxtofl@val,w
  5690     08DD  00C0               	movwf	___xxtofl@arg
  5691     08DE                     l903:
  5692     08DE  0839               	movf	___xxtofl@val+3,w
  5693     08DF  0438               	iorwf	___xxtofl@val+2,w
  5694     08E0  0437               	iorwf	___xxtofl@val+1,w
  5695     08E1  0436               	iorwf	___xxtofl@val,w
  5696     08E2  1D03               	skipz
  5697     08E3  28E5               	goto	u3921
  5698     08E4  28E6               	goto	u3920
  5699     08E5                     u3921:
  5700     08E5  28EF               	goto	l3114
  5701     08E6                     u3920:
  5702     08E6                     l3110:
  5703     08E6  3000               	movlw	0
  5704     08E7  00B9               	movwf	?___xxtofl+3
  5705     08E8  3000               	movlw	0
  5706     08E9  00B8               	movwf	?___xxtofl+2
  5707     08EA  3000               	movlw	0
  5708     08EB  00B7               	movwf	?___xxtofl+1
  5709     08EC  3000               	movlw	0
  5710     08ED  00B6               	movwf	?___xxtofl
  5711     08EE  2973               	goto	l905
  5712     08EF                     l3114:
  5713     08EF  3096               	movlw	150
  5714     08F0  00BF               	movwf	___xxtofl@exp
  5715     08F1  28FF               	goto	l3118
  5716     08F2                     l3116:
  5717     08F2  3001               	movlw	1
  5718     08F3  00BA               	movwf	??___xxtofl
  5719     08F4  083A               	movf	??___xxtofl,w
  5720     08F5  07BF               	addwf	___xxtofl@exp,f
  5721     08F6  3001               	movlw	1
  5722     08F7                     u3935:
  5723     08F7  1003               	clrc
  5724     08F8  0CC3               	rrf	___xxtofl@arg+3,f
  5725     08F9  0CC2               	rrf	___xxtofl@arg+2,f
  5726     08FA  0CC1               	rrf	___xxtofl@arg+1,f
  5727     08FB  0CC0               	rrf	___xxtofl@arg,f
  5728     08FC  3EFF               	addlw	-1
  5729     08FD  1D03               	skipz
  5730     08FE  28F7               	goto	u3935
  5731     08FF                     l3118:
  5732     08FF  30FE               	movlw	254
  5733     0900  0543               	andwf	___xxtofl@arg+3,w
  5734     0901  1D03               	btfss	3,2
  5735     0902  2904               	goto	u3941
  5736     0903  2905               	goto	u3940
  5737     0904                     u3941:
  5738     0904  28F2               	goto	l3116
  5739     0905                     u3940:
  5740     0905  2921               	goto	l909
  5741     0906                     l3120:
  5742     0906  3001               	movlw	1
  5743     0907  00BA               	movwf	??___xxtofl
  5744     0908  083A               	movf	??___xxtofl,w
  5745     0909  07BF               	addwf	___xxtofl@exp,f
  5746     090A                     l3122:
  5747     090A  3001               	movlw	1
  5748     090B  07C0               	addwf	___xxtofl@arg,f
  5749     090C  3000               	movlw	0
  5750     090D  1803               	skipnc
  5751     090E  3001               	movlw	1
  5752     090F  07C1               	addwf	___xxtofl@arg+1,f
  5753     0910  3000               	movlw	0
  5754     0911  1803               	skipnc
  5755     0912  3001               	movlw	1
  5756     0913  07C2               	addwf	___xxtofl@arg+2,f
  5757     0914  3000               	movlw	0
  5758     0915  1803               	skipnc
  5759     0916  3001               	movlw	1
  5760     0917  07C3               	addwf	___xxtofl@arg+3,f
  5761     0918                     l3124:
  5762     0918  3001               	movlw	1
  5763     0919                     u3955:
  5764     0919  1003               	clrc
  5765     091A  0CC3               	rrf	___xxtofl@arg+3,f
  5766     091B  0CC2               	rrf	___xxtofl@arg+2,f
  5767     091C  0CC1               	rrf	___xxtofl@arg+1,f
  5768     091D  0CC0               	rrf	___xxtofl@arg,f
  5769     091E  3EFF               	addlw	-1
  5770     091F  1D03               	skipz
  5771     0920  2919               	goto	u3955
  5772     0921                     l909:
  5773     0921  30FF               	movlw	255
  5774     0922  0543               	andwf	___xxtofl@arg+3,w
  5775     0923  1D03               	btfss	3,2
  5776     0924  2926               	goto	u3961
  5777     0925  2927               	goto	u3960
  5778     0926                     u3961:
  5779     0926  2906               	goto	l3120
  5780     0927                     u3960:
  5781     0927  2933               	goto	l3128
  5782     0928                     l3126:
  5783     0928  3001               	movlw	1
  5784     0929  02BF               	subwf	___xxtofl@exp,f
  5785     092A  3001               	movlw	1
  5786     092B  00BA               	movwf	??___xxtofl
  5787     092C                     u3975:
  5788     092C  1003               	clrc
  5789     092D  0DC0               	rlf	___xxtofl@arg,f
  5790     092E  0DC1               	rlf	___xxtofl@arg+1,f
  5791     092F  0DC2               	rlf	___xxtofl@arg+2,f
  5792     0930  0DC3               	rlf	___xxtofl@arg+3,f
  5793     0931  0BBA               	decfsz	??___xxtofl,f
  5794     0932  292C               	goto	u3975
  5795     0933                     l3128:
  5796     0933  1BC2               	btfsc	___xxtofl@arg+2,7
  5797     0934  2936               	goto	u3981
  5798     0935  2937               	goto	u3980
  5799     0936                     u3981:
  5800     0936  293D               	goto	l916
  5801     0937                     u3980:
  5802     0937                     l3130:
  5803     0937  3002               	movlw	2
  5804     0938  023F               	subwf	___xxtofl@exp,w
  5805     0939  1803               	skipnc
  5806     093A  293C               	goto	u3991
  5807     093B  293D               	goto	u3990
  5808     093C                     u3991:
  5809     093C  2928               	goto	l3126
  5810     093D                     u3990:
  5811     093D                     l916:
  5812     093D  183F               	btfsc	___xxtofl@exp,0
  5813     093E  2940               	goto	u4001
  5814     093F  2941               	goto	u4000
  5815     0940                     u4001:
  5816     0940  2949               	goto	l917
  5817     0941                     u4000:
  5818     0941                     l3132:
  5819     0941  30FF               	movlw	255
  5820     0942  05C0               	andwf	___xxtofl@arg,f
  5821     0943  30FF               	movlw	255
  5822     0944  05C1               	andwf	___xxtofl@arg+1,f
  5823     0945  307F               	movlw	127
  5824     0946  05C2               	andwf	___xxtofl@arg+2,f
  5825     0947  30FF               	movlw	255
  5826     0948  05C3               	andwf	___xxtofl@arg+3,f
  5827     0949                     l917:
  5828     0949  1003               	clrc
  5829     094A  0CBF               	rrf	___xxtofl@exp,f
  5830     094B                     l3134:
  5831     094B  083F               	movf	___xxtofl@exp,w
  5832     094C  00BA               	movwf	??___xxtofl
  5833     094D  01BB               	clrf	??___xxtofl+1
  5834     094E  01BC               	clrf	??___xxtofl+2
  5835     094F  01BD               	clrf	??___xxtofl+3
  5836     0950  3018               	movlw	24
  5837     0951                     u4015:
  5838     0951  1003               	clrc
  5839     0952  0DBA               	rlf	??___xxtofl,f
  5840     0953  0DBB               	rlf	??___xxtofl+1,f
  5841     0954  0DBC               	rlf	??___xxtofl+2,f
  5842     0955  0DBD               	rlf	??___xxtofl+3,f
  5843     0956                     u4010:
  5844     0956  3EFF               	addlw	-1
  5845     0957  1D03               	skipz
  5846     0958  2951               	goto	u4015
  5847     0959  083A               	movf	??___xxtofl,w
  5848     095A  04C0               	iorwf	___xxtofl@arg,f
  5849     095B  083B               	movf	??___xxtofl+1,w
  5850     095C  04C1               	iorwf	___xxtofl@arg+1,f
  5851     095D  083C               	movf	??___xxtofl+2,w
  5852     095E  04C2               	iorwf	___xxtofl@arg+2,f
  5853     095F  083D               	movf	??___xxtofl+3,w
  5854     0960  04C3               	iorwf	___xxtofl@arg+3,f
  5855     0961                     l3136:
  5856     0961  083E               	movf	___xxtofl@sign,w
  5857     0962  1903               	btfsc	3,2
  5858     0963  2965               	goto	u4021
  5859     0964  2966               	goto	u4020
  5860     0965                     u4021:
  5861     0965  296B               	goto	l3142
  5862     0966                     u4020:
  5863     0966                     l3138:
  5864     0966  1FB9               	btfss	___xxtofl@val+3,7
  5865     0967  2969               	goto	u4031
  5866     0968  296A               	goto	u4030
  5867     0969                     u4031:
  5868     0969  296B               	goto	l3142
  5869     096A                     u4030:
  5870     096A                     l3140:
  5871     096A  17C3               	bsf	___xxtofl@arg+3,7
  5872     096B                     l3142:
  5873     096B  0843               	movf	___xxtofl@arg+3,w
  5874     096C  00B9               	movwf	?___xxtofl+3
  5875     096D  0842               	movf	___xxtofl@arg+2,w
  5876     096E  00B8               	movwf	?___xxtofl+2
  5877     096F  0841               	movf	___xxtofl@arg+1,w
  5878     0970  00B7               	movwf	?___xxtofl+1
  5879     0971  0840               	movf	___xxtofl@arg,w
  5880     0972  00B6               	movwf	?___xxtofl
  5881     0973                     l905:
  5882     0973  0008               	return
  5883     0974                     __end_of___xxtofl:
  5884                           
  5885                           	psect	text18
  5886     1701                     __ptext18:	
  5887 ;; *************** function ___fltol *****************
  5888 ;; Defined at:
  5889 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  f1              4   33[BANK0 ] unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  exp1            1   42[BANK0 ] unsigned char 
  5894 ;;  sign1           1   41[BANK0 ] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  4   33[BANK0 ] long 
  5897 ;; Registers used:
  5898 ;;		wreg, status,2, status,0
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5904 ;;      Params:         0       4       0       0       0
  5905 ;;      Locals:         0       2       0       0       0
  5906 ;;      Temps:          0       4       0       0       0
  5907 ;;      Totals:         0      10       0       0       0
  5908 ;;Total ram usage:       10 bytes
  5909 ;; Hardware stack levels used: 1
  5910 ;; Hardware stack levels required when called: 3
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_floatToStr
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918     1701                     ___fltol:	
  5919                           ;psect for function ___fltol
  5920                           
  5921     1701                     l2920:	
  5922                           ;incstack = 0
  5923                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5924                           
  5925     1701  1003               	clrc
  5926     1702  1283               	bcf	3,5	;RP0=0, select bank0
  5927     1703  1303               	bcf	3,6	;RP1=0, select bank0
  5928     1704  0D43               	rlf	___fltol@f1+2,w
  5929     1705  0D44               	rlf	___fltol@f1+3,w
  5930     1706  00CA               	movwf	___fltol@exp1
  5931     1707  084A               	movf	___fltol@exp1,w
  5932     1708  1D03               	btfss	3,2
  5933     1709  2F0B               	goto	u3431
  5934     170A  2F0C               	goto	u3430
  5935     170B                     u3431:
  5936     170B  2F15               	goto	l2926
  5937     170C                     u3430:
  5938     170C                     l2922:
  5939     170C  3000               	movlw	0
  5940     170D  00C4               	movwf	?___fltol+3
  5941     170E  3000               	movlw	0
  5942     170F  00C3               	movwf	?___fltol+2
  5943     1710  3000               	movlw	0
  5944     1711  00C2               	movwf	?___fltol+1
  5945     1712  3000               	movlw	0
  5946     1713  00C1               	movwf	?___fltol
  5947     1714  2F78               	goto	l656
  5948     1715                     l2926:
  5949     1715  0841               	movf	___fltol@f1,w
  5950     1716  00C5               	movwf	??___fltol
  5951     1717  0842               	movf	___fltol@f1+1,w
  5952     1718  00C6               	movwf	??___fltol+1
  5953     1719  0843               	movf	___fltol@f1+2,w
  5954     171A  00C7               	movwf	??___fltol+2
  5955     171B  0844               	movf	___fltol@f1+3,w
  5956     171C  00C8               	movwf	??___fltol+3
  5957     171D  301F               	movlw	31
  5958     171E                     u3445:
  5959     171E  1003               	clrc
  5960     171F  0CC8               	rrf	??___fltol+3,f
  5961     1720  0CC7               	rrf	??___fltol+2,f
  5962     1721  0CC6               	rrf	??___fltol+1,f
  5963     1722  0CC5               	rrf	??___fltol,f
  5964     1723                     u3440:
  5965     1723  3EFF               	addlw	-1
  5966     1724  1D03               	skipz
  5967     1725  2F1E               	goto	u3445
  5968     1726  0845               	movf	??___fltol,w
  5969     1727  00C9               	movwf	___fltol@sign1
  5970     1728                     l2928:
  5971     1728  17C3               	bsf	___fltol@f1+2,7
  5972     1729                     l2930:
  5973     1729  30FF               	movlw	255
  5974     172A  05C1               	andwf	___fltol@f1,f
  5975     172B  30FF               	movlw	255
  5976     172C  05C2               	andwf	___fltol@f1+1,f
  5977     172D  30FF               	movlw	255
  5978     172E  05C3               	andwf	___fltol@f1+2,f
  5979     172F  3000               	movlw	0
  5980     1730  05C4               	andwf	___fltol@f1+3,f
  5981     1731                     l2932:
  5982     1731  3096               	movlw	150
  5983     1732  02CA               	subwf	___fltol@exp1,f
  5984     1733                     l2934:
  5985     1733  1FCA               	btfss	___fltol@exp1,7
  5986     1734  2F36               	goto	u3451
  5987     1735  2F37               	goto	u3450
  5988     1736                     u3451:
  5989     1736  2F51               	goto	l2944
  5990     1737                     u3450:
  5991     1737                     l2936:
  5992     1737  084A               	movf	___fltol@exp1,w
  5993     1738  3A80               	xorlw	128
  5994     1739  3E97               	addlw	151
  5995     173A  1803               	skipnc
  5996     173B  2F3D               	goto	u3461
  5997     173C  2F3E               	goto	u3460
  5998     173D                     u3461:
  5999     173D  2F3F               	goto	l2942
  6000     173E                     u3460:
  6001     173E  2F0C               	goto	l2922
  6002     173F                     l2942:
  6003     173F  3001               	movlw	1
  6004     1740                     u3475:
  6005     1740  1003               	clrc
  6006     1741  0CC4               	rrf	___fltol@f1+3,f
  6007     1742  0CC3               	rrf	___fltol@f1+2,f
  6008     1743  0CC2               	rrf	___fltol@f1+1,f
  6009     1744  0CC1               	rrf	___fltol@f1,f
  6010     1745  3EFF               	addlw	-1
  6011     1746  1D03               	skipz
  6012     1747  2F40               	goto	u3475
  6013     1748  3001               	movlw	1
  6014     1749  00C5               	movwf	??___fltol
  6015     174A  0845               	movf	??___fltol,w
  6016     174B  07CA               	addwf	___fltol@exp1,f
  6017     174C  1D03               	btfss	3,2
  6018     174D  2F4F               	goto	u3481
  6019     174E  2F50               	goto	u3480
  6020     174F                     u3481:
  6021     174F  2F3F               	goto	l2942
  6022     1750                     u3480:
  6023     1750  2F68               	goto	l2952
  6024     1751                     l2944:
  6025     1751  3020               	movlw	32
  6026     1752  024A               	subwf	___fltol@exp1,w
  6027     1753  1C03               	skipc
  6028     1754  2F56               	goto	u3491
  6029     1755  2F57               	goto	u3490
  6030     1756                     u3491:
  6031     1756  2F63               	goto	l663
  6032     1757                     u3490:
  6033     1757  2F0C               	goto	l2922
  6034     1758                     l2950:
  6035     1758  3001               	movlw	1
  6036     1759  00C5               	movwf	??___fltol
  6037     175A                     u3505:
  6038     175A  1003               	clrc
  6039     175B  0DC1               	rlf	___fltol@f1,f
  6040     175C  0DC2               	rlf	___fltol@f1+1,f
  6041     175D  0DC3               	rlf	___fltol@f1+2,f
  6042     175E  0DC4               	rlf	___fltol@f1+3,f
  6043     175F  0BC5               	decfsz	??___fltol,f
  6044     1760  2F5A               	goto	u3505
  6045     1761  3001               	movlw	1
  6046     1762  02CA               	subwf	___fltol@exp1,f
  6047     1763                     l663:
  6048     1763  084A               	movf	___fltol@exp1,w
  6049     1764  1D03               	btfss	3,2
  6050     1765  2F67               	goto	u3511
  6051     1766  2F68               	goto	u3510
  6052     1767                     u3511:
  6053     1767  2F58               	goto	l2950
  6054     1768                     u3510:
  6055     1768                     l2952:
  6056     1768  0849               	movf	___fltol@sign1,w
  6057     1769  1903               	btfsc	3,2
  6058     176A  2F6C               	goto	u3521
  6059     176B  2F6D               	goto	u3520
  6060     176C                     u3521:
  6061     176C  2F78               	goto	l666
  6062     176D                     u3520:
  6063     176D                     l2954:
  6064     176D  09C1               	comf	___fltol@f1,f
  6065     176E  09C2               	comf	___fltol@f1+1,f
  6066     176F  09C3               	comf	___fltol@f1+2,f
  6067     1770  09C4               	comf	___fltol@f1+3,f
  6068     1771  0AC1               	incf	___fltol@f1,f
  6069     1772  1903               	skipnz
  6070     1773  0AC2               	incf	___fltol@f1+1,f
  6071     1774  1903               	skipnz
  6072     1775  0AC3               	incf	___fltol@f1+2,f
  6073     1776  1903               	skipnz
  6074     1777  0AC4               	incf	___fltol@f1+3,f
  6075     1778                     l666:
  6076     1778                     l656:
  6077     1778  0008               	return
  6078     1779                     __end_of___fltol:
  6079                           
  6080                           	psect	text19
  6081     1062                     __ptext19:	
  6082 ;; *************** function ___flsub *****************
  6083 ;; Defined at:
  6084 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  a               4   36[BANK0 ] long 
  6087 ;;  b               4   40[BANK0 ] long 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  4   36[BANK0 ] long 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6099 ;;      Params:         0       8       0       0       0
  6100 ;;      Locals:         0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0
  6102 ;;      Totals:         0       8       0       0       0
  6103 ;;Total ram usage:        8 bytes
  6104 ;; Hardware stack levels used: 1
  6105 ;; Hardware stack levels required when called: 4
  6106 ;; This function calls:
  6107 ;;		___fladd
  6108 ;; This function is called by:
  6109 ;;		_floatToStr
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113     1062                     ___flsub:	
  6114                           ;psect for function ___flsub
  6115                           
  6116     1062                     l2956:	
  6117                           ;incstack = 0
  6118                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6119                           
  6120     1062  3080               	movlw	128
  6121     1063  1283               	bcf	3,5	;RP0=0, select bank0
  6122     1064  1303               	bcf	3,6	;RP1=0, select bank0
  6123     1065  06C7               	xorwf	___flsub@a+3,f
  6124     1066                     l2958:
  6125     1066  084B               	movf	___flsub@b+3,w
  6126     1067  00B0               	movwf	___fladd@b+3
  6127     1068  084A               	movf	___flsub@b+2,w
  6128     1069  00AF               	movwf	___fladd@b+2
  6129     106A  0849               	movf	___flsub@b+1,w
  6130     106B  00AE               	movwf	___fladd@b+1
  6131     106C  0848               	movf	___flsub@b,w
  6132     106D  00AD               	movwf	___fladd@b
  6133     106E  0847               	movf	___flsub@a+3,w
  6134     106F  00B4               	movwf	___fladd@a+3
  6135     1070  0846               	movf	___flsub@a+2,w
  6136     1071  00B3               	movwf	___fladd@a+2
  6137     1072  0845               	movf	___flsub@a+1,w
  6138     1073  00B2               	movwf	___fladd@a+1
  6139     1074  0844               	movf	___flsub@a,w
  6140     1075  00B1               	movwf	___fladd@a
  6141     1076  120A  118A  2527  160A  118A  	fcall	___fladd
  6142     107B  1283               	bcf	3,5	;RP0=0, select bank0
  6143     107C  1303               	bcf	3,6	;RP1=0, select bank0
  6144     107D  0830               	movf	?___fladd+3,w
  6145     107E  00C7               	movwf	?___flsub+3
  6146     107F  082F               	movf	?___fladd+2,w
  6147     1080  00C6               	movwf	?___flsub+2
  6148     1081  082E               	movf	?___fladd+1,w
  6149     1082  00C5               	movwf	?___flsub+1
  6150     1083  082D               	movf	?___fladd,w
  6151     1084  00C4               	movwf	?___flsub
  6152     1085                     l809:
  6153     1085  0008               	return
  6154     1086                     __end_of___flsub:
  6155                           
  6156                           	psect	text20
  6157     0527                     __ptext20:	
  6158 ;; *************** function ___fladd *****************
  6159 ;; Defined at:
  6160 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  b               4   13[BANK0 ] long 
  6163 ;;  a               4   17[BANK0 ] long 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;  grs             1   32[BANK0 ] unsigned char 
  6166 ;;  bexp            1   31[BANK0 ] unsigned char 
  6167 ;;  aexp            1   30[BANK0 ] unsigned char 
  6168 ;;  signs           1   29[BANK0 ] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  4   13[BANK0 ] unsigned char 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0, btemp+1
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6178 ;;      Params:         0       8       0       0       0
  6179 ;;      Locals:         0       4       0       0       0
  6180 ;;      Temps:          0       8       0       0       0
  6181 ;;      Totals:         0      20       0       0       0
  6182 ;;Total ram usage:       20 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 3
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_floatToStr
  6189 ;;		___flsub
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193     0527                     ___fladd:	
  6194                           ;psect for function ___fladd
  6195                           
  6196     0527                     l2566:	
  6197                           ;incstack = 0
  6198                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6199                           
  6200     0527  1283               	bcf	3,5	;RP0=0, select bank0
  6201     0528  1303               	bcf	3,6	;RP1=0, select bank0
  6202     0529  0830               	movf	___fladd@b+3,w
  6203     052A  3980               	andlw	128
  6204     052B  00BD               	movwf	___fladd@signs
  6205     052C                     l2568:
  6206     052C  0830               	movf	___fladd@b+3,w
  6207     052D  00B5               	movwf	??___fladd
  6208     052E  0735               	addwf	??___fladd,w
  6209     052F  00BF               	movwf	___fladd@bexp
  6210     0530                     l2570:
  6211     0530  1FAF               	btfss	___fladd@b+2,7
  6212     0531  2D33               	goto	u2671
  6213     0532  2D34               	goto	u2670
  6214     0533                     u2671:
  6215     0533  2D35               	goto	l2574
  6216     0534                     u2670:
  6217     0534                     l2572:
  6218     0534  143F               	bsf	___fladd@bexp,0
  6219     0535                     l2574:
  6220     0535  083F               	movf	___fladd@bexp,w
  6221     0536  1903               	btfsc	3,2
  6222     0537  2D39               	goto	u2681
  6223     0538  2D3A               	goto	u2680
  6224     0539                     u2681:
  6225     0539  2D4A               	goto	l2584
  6226     053A                     u2680:
  6227     053A                     l2576:
  6228     053A  0A3F               	incf	___fladd@bexp,w
  6229     053B  1D03               	btfss	3,2
  6230     053C  2D3E               	goto	u2691
  6231     053D  2D3F               	goto	u2690
  6232     053E                     u2691:
  6233     053E  2D47               	goto	l2580
  6234     053F                     u2690:
  6235     053F                     l2578:
  6236     053F  3000               	movlw	0
  6237     0540  00B0               	movwf	___fladd@b+3
  6238     0541  3000               	movlw	0
  6239     0542  00AF               	movwf	___fladd@b+2
  6240     0543  3000               	movlw	0
  6241     0544  00AE               	movwf	___fladd@b+1
  6242     0545  3000               	movlw	0
  6243     0546  00AD               	movwf	___fladd@b
  6244     0547                     l2580:
  6245     0547  17AF               	bsf	___fladd@b+2,7
  6246     0548                     l2582:
  6247     0548  01B0               	clrf	___fladd@b+3
  6248     0549  2D52               	goto	l2586
  6249     054A                     l2584:
  6250     054A  3000               	movlw	0
  6251     054B  00B0               	movwf	___fladd@b+3
  6252     054C  3000               	movlw	0
  6253     054D  00AF               	movwf	___fladd@b+2
  6254     054E  3000               	movlw	0
  6255     054F  00AE               	movwf	___fladd@b+1
  6256     0550  3000               	movlw	0
  6257     0551  00AD               	movwf	___fladd@b
  6258     0552                     l2586:
  6259     0552  0834               	movf	___fladd@a+3,w
  6260     0553  3980               	andlw	128
  6261     0554  00BE               	movwf	___fladd@aexp
  6262     0555                     l2588:
  6263     0555  083E               	movf	___fladd@aexp,w
  6264     0556  063D               	xorwf	___fladd@signs,w
  6265     0557  1903               	skipnz
  6266     0558  2D5A               	goto	u2701
  6267     0559  2D5B               	goto	u2700
  6268     055A                     u2701:
  6269     055A  2D5C               	goto	l2592
  6270     055B                     u2700:
  6271     055B                     l2590:
  6272     055B  173D               	bsf	___fladd@signs,6
  6273     055C                     l2592:
  6274     055C  0834               	movf	___fladd@a+3,w
  6275     055D  00B5               	movwf	??___fladd
  6276     055E  0735               	addwf	??___fladd,w
  6277     055F  00BE               	movwf	___fladd@aexp
  6278     0560                     l2594:
  6279     0560  1FB3               	btfss	___fladd@a+2,7
  6280     0561  2D63               	goto	u2711
  6281     0562  2D64               	goto	u2710
  6282     0563                     u2711:
  6283     0563  2D65               	goto	l2598
  6284     0564                     u2710:
  6285     0564                     l2596:
  6286     0564  143E               	bsf	___fladd@aexp,0
  6287     0565                     l2598:
  6288     0565  083E               	movf	___fladd@aexp,w
  6289     0566  1903               	btfsc	3,2
  6290     0567  2D69               	goto	u2721
  6291     0568  2D6A               	goto	u2720
  6292     0569                     u2721:
  6293     0569  2D7A               	goto	l2608
  6294     056A                     u2720:
  6295     056A                     l2600:
  6296     056A  0A3E               	incf	___fladd@aexp,w
  6297     056B  1D03               	btfss	3,2
  6298     056C  2D6E               	goto	u2731
  6299     056D  2D6F               	goto	u2730
  6300     056E                     u2731:
  6301     056E  2D77               	goto	l2604
  6302     056F                     u2730:
  6303     056F                     l2602:
  6304     056F  3000               	movlw	0
  6305     0570  00B4               	movwf	___fladd@a+3
  6306     0571  3000               	movlw	0
  6307     0572  00B3               	movwf	___fladd@a+2
  6308     0573  3000               	movlw	0
  6309     0574  00B2               	movwf	___fladd@a+1
  6310     0575  3000               	movlw	0
  6311     0576  00B1               	movwf	___fladd@a
  6312     0577                     l2604:
  6313     0577  17B3               	bsf	___fladd@a+2,7
  6314     0578                     l2606:
  6315     0578  01B4               	clrf	___fladd@a+3
  6316     0579  2D82               	goto	l763
  6317     057A                     l2608:
  6318     057A  3000               	movlw	0
  6319     057B  00B4               	movwf	___fladd@a+3
  6320     057C  3000               	movlw	0
  6321     057D  00B3               	movwf	___fladd@a+2
  6322     057E  3000               	movlw	0
  6323     057F  00B2               	movwf	___fladd@a+1
  6324     0580  3000               	movlw	0
  6325     0581  00B1               	movwf	___fladd@a
  6326     0582                     l763:
  6327     0582  083F               	movf	___fladd@bexp,w
  6328     0583  023E               	subwf	___fladd@aexp,w
  6329     0584  1803               	skipnc
  6330     0585  2D87               	goto	u2741
  6331     0586  2D88               	goto	u2740
  6332     0587                     u2741:
  6333     0587  2DAE               	goto	l2644
  6334     0588                     u2740:
  6335     0588                     l2610:
  6336     0588  1F3D               	btfss	___fladd@signs,6
  6337     0589  2D8B               	goto	u2751
  6338     058A  2D8C               	goto	u2750
  6339     058B                     u2751:
  6340     058B  2D90               	goto	l2614
  6341     058C                     u2750:
  6342     058C                     l2612:
  6343     058C  3080               	movlw	128
  6344     058D  00B5               	movwf	??___fladd
  6345     058E  0835               	movf	??___fladd,w
  6346     058F  06BD               	xorwf	___fladd@signs,f
  6347     0590                     l2614:
  6348     0590  083F               	movf	___fladd@bexp,w
  6349     0591  00C0               	movwf	___fladd@grs
  6350     0592                     l2616:
  6351     0592  083E               	movf	___fladd@aexp,w
  6352     0593  00BF               	movwf	___fladd@bexp
  6353     0594                     l2618:
  6354     0594  0840               	movf	___fladd@grs,w
  6355     0595  00BE               	movwf	___fladd@aexp
  6356     0596                     l2620:
  6357     0596  082D               	movf	___fladd@b,w
  6358     0597  00C0               	movwf	___fladd@grs
  6359     0598                     l2622:
  6360     0598  0831               	movf	___fladd@a,w
  6361     0599  00AD               	movwf	___fladd@b
  6362     059A                     l2624:
  6363     059A  0840               	movf	___fladd@grs,w
  6364     059B  00B1               	movwf	___fladd@a
  6365     059C                     l2626:
  6366     059C  082E               	movf	___fladd@b+1,w
  6367     059D  00C0               	movwf	___fladd@grs
  6368     059E                     l2628:
  6369     059E  0832               	movf	___fladd@a+1,w
  6370     059F  00AE               	movwf	___fladd@b+1
  6371     05A0                     l2630:
  6372     05A0  0840               	movf	___fladd@grs,w
  6373     05A1  00B2               	movwf	___fladd@a+1
  6374     05A2                     l2632:
  6375     05A2  082F               	movf	___fladd@b+2,w
  6376     05A3  00C0               	movwf	___fladd@grs
  6377     05A4                     l2634:
  6378     05A4  0833               	movf	___fladd@a+2,w
  6379     05A5  00AF               	movwf	___fladd@b+2
  6380     05A6                     l2636:
  6381     05A6  0840               	movf	___fladd@grs,w
  6382     05A7  00B3               	movwf	___fladd@a+2
  6383     05A8                     l2638:
  6384     05A8  0830               	movf	___fladd@b+3,w
  6385     05A9  00C0               	movwf	___fladd@grs
  6386     05AA                     l2640:
  6387     05AA  0834               	movf	___fladd@a+3,w
  6388     05AB  00B0               	movwf	___fladd@b+3
  6389     05AC                     l2642:
  6390     05AC  0840               	movf	___fladd@grs,w
  6391     05AD  00B4               	movwf	___fladd@a+3
  6392     05AE                     l2644:
  6393     05AE  01C0               	clrf	___fladd@grs
  6394     05AF                     l2646:
  6395     05AF  083E               	movf	___fladd@aexp,w
  6396     05B0  00B5               	movwf	??___fladd
  6397     05B1  01B6               	clrf	??___fladd+1
  6398     05B2  0836               	movf	??___fladd+1,w
  6399     05B3  00B8               	movwf	??___fladd+3
  6400     05B4  083F               	movf	___fladd@bexp,w
  6401     05B5  0235               	subwf	??___fladd,w
  6402     05B6  00B7               	movwf	??___fladd+2
  6403     05B7  1C03               	skipc
  6404     05B8  03B8               	decf	??___fladd+3,f
  6405     05B9  0838               	movf	??___fladd+3,w
  6406     05BA  3A80               	xorlw	128
  6407     05BB  00FF               	movwf	btemp+1
  6408     05BC  3080               	movlw	128
  6409     05BD  027F               	subwf	btemp+1,w
  6410     05BE  1D03               	skipz
  6411     05BF  2DC2               	goto	u2765
  6412     05C0  301A               	movlw	26
  6413     05C1  0237               	subwf	??___fladd+2,w
  6414     05C2                     u2765:
  6415     05C2  1C03               	skipc
  6416     05C3  2DC5               	goto	u2761
  6417     05C4  2DC6               	goto	u2760
  6418     05C5                     u2761:
  6419     05C5  2DFD               	goto	l2662
  6420     05C6                     u2760:
  6421     05C6                     l2648:
  6422     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  6423     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  6424     05C8  0830               	movf	___fladd@b+3,w
  6425     05C9  042F               	iorwf	___fladd@b+2,w
  6426     05CA  042E               	iorwf	___fladd@b+1,w
  6427     05CB  042D               	iorwf	___fladd@b,w
  6428     05CC  1D03               	skipz
  6429     05CD  2DCF               	goto	u2771
  6430     05CE  2DD1               	goto	u2770
  6431     05CF                     u2771:
  6432     05CF  3001               	movlw	1
  6433     05D0  2DD2               	goto	u2780
  6434     05D1                     u2770:
  6435     05D1  3000               	movlw	0
  6436     05D2                     u2780:
  6437     05D2  00C0               	movwf	___fladd@grs
  6438     05D3  3000               	movlw	0
  6439     05D4  00B0               	movwf	___fladd@b+3
  6440     05D5  3000               	movlw	0
  6441     05D6  00AF               	movwf	___fladd@b+2
  6442     05D7  3000               	movlw	0
  6443     05D8  00AE               	movwf	___fladd@b+1
  6444     05D9  3000               	movlw	0
  6445     05DA  00AD               	movwf	___fladd@b
  6446     05DB  083E               	movf	___fladd@aexp,w
  6447     05DC  00BF               	movwf	___fladd@bexp
  6448     05DD  2E05               	goto	l767
  6449     05DE                     l769:
  6450     05DE  1C40               	btfss	___fladd@grs,0
  6451     05DF  2DE1               	goto	u2791
  6452     05E0  2DE2               	goto	u2790
  6453     05E1                     u2791:
  6454     05E1  2DE9               	goto	l2652
  6455     05E2                     u2790:
  6456     05E2                     l2650:
  6457     05E2  0840               	movf	___fladd@grs,w
  6458     05E3  00B5               	movwf	??___fladd
  6459     05E4  1003               	clrc
  6460     05E5  0C35               	rrf	??___fladd,w
  6461     05E6  3801               	iorlw	1
  6462     05E7  00C0               	movwf	___fladd@grs
  6463     05E8  2DEB               	goto	l2654
  6464     05E9                     l2652:
  6465     05E9  1003               	clrc
  6466     05EA  0CC0               	rrf	___fladd@grs,f
  6467     05EB                     l2654:
  6468     05EB  1C2D               	btfss	___fladd@b,0
  6469     05EC  2DEE               	goto	u2801
  6470     05ED  2DEF               	goto	u2800
  6471     05EE                     u2801:
  6472     05EE  2DF0               	goto	l2658
  6473     05EF                     u2800:
  6474     05EF                     l2656:
  6475     05EF  17C0               	bsf	___fladd@grs,7
  6476     05F0                     l2658:
  6477     05F0  3001               	movlw	1
  6478     05F1  00B5               	movwf	??___fladd
  6479     05F2                     u2815:
  6480     05F2  0D30               	rlf	___fladd@b+3,w
  6481     05F3  0CB0               	rrf	___fladd@b+3,f
  6482     05F4  0CAF               	rrf	___fladd@b+2,f
  6483     05F5  0CAE               	rrf	___fladd@b+1,f
  6484     05F6  0CAD               	rrf	___fladd@b,f
  6485     05F7  0BB5               	decfsz	??___fladd& (0+127),f
  6486     05F8  2DF2               	goto	u2815
  6487     05F9                     l2660:
  6488     05F9  3001               	movlw	1
  6489     05FA  00B5               	movwf	??___fladd
  6490     05FB  0835               	movf	??___fladd,w
  6491     05FC  07BF               	addwf	___fladd@bexp,f
  6492     05FD                     l2662:
  6493     05FD  1283               	bcf	3,5	;RP0=0, select bank0
  6494     05FE  1303               	bcf	3,6	;RP1=0, select bank0
  6495     05FF  083E               	movf	___fladd@aexp,w
  6496     0600  023F               	subwf	___fladd@bexp,w
  6497     0601  1C03               	skipc
  6498     0602  2E04               	goto	u2821
  6499     0603  2E05               	goto	u2820
  6500     0604                     u2821:
  6501     0604  2DDE               	goto	l769
  6502     0605                     u2820:
  6503     0605                     l767:
  6504     0605  1B3D               	btfsc	___fladd@signs,6
  6505     0606  2E08               	goto	u2831
  6506     0607  2E09               	goto	u2830
  6507     0608                     u2831:
  6508     0608  2E52               	goto	l2688
  6509     0609                     u2830:
  6510     0609                     l2664:
  6511     0609  083F               	movf	___fladd@bexp,w
  6512     060A  1D03               	btfss	3,2
  6513     060B  2E0D               	goto	u2841
  6514     060C  2E0E               	goto	u2840
  6515     060D                     u2841:
  6516     060D  2E17               	goto	l2670
  6517     060E                     u2840:
  6518     060E                     l2666:
  6519     060E  3000               	movlw	0
  6520     060F  00B0               	movwf	?___fladd+3
  6521     0610  3000               	movlw	0
  6522     0611  00AF               	movwf	?___fladd+2
  6523     0612  3000               	movlw	0
  6524     0613  00AE               	movwf	?___fladd+1
  6525     0614  3000               	movlw	0
  6526     0615  00AD               	movwf	?___fladd
  6527     0616  2F7E               	goto	l776
  6528     0617                     l2670:
  6529     0617  0831               	movf	___fladd@a,w
  6530     0618  07AD               	addwf	___fladd@b,f
  6531     0619  0832               	movf	___fladd@a+1,w
  6532     061A  1103               	clrz
  6533     061B  1803               	skipnc
  6534     061C  3E01               	addlw	1
  6535     061D  1903               	skipnz
  6536     061E  2E20               	goto	u2851
  6537     061F  07AE               	addwf	___fladd@b+1,f
  6538     0620                     u2851:
  6539     0620  0833               	movf	___fladd@a+2,w
  6540     0621  1103               	clrz
  6541     0622  1803               	skipnc
  6542     0623  3E01               	addlw	1
  6543     0624  1903               	skipnz
  6544     0625  2E27               	goto	u2852
  6545     0626  07AF               	addwf	___fladd@b+2,f
  6546     0627                     u2852:
  6547     0627  0834               	movf	___fladd@a+3,w
  6548     0628  1103               	clrz
  6549     0629  1803               	skipnc
  6550     062A  3E01               	addlw	1
  6551     062B  1903               	skipnz
  6552     062C  2E2E               	goto	u2853
  6553     062D  07B0               	addwf	___fladd@b+3,f
  6554     062E                     u2853:
  6555     062E                     l2672:
  6556     062E  1C30               	btfss	___fladd@b+3,0
  6557     062F  2E31               	goto	u2861
  6558     0630  2E32               	goto	u2860
  6559     0631                     u2861:
  6560     0631  2F06               	goto	l2722
  6561     0632                     u2860:
  6562     0632                     l2674:
  6563     0632  1C40               	btfss	___fladd@grs,0
  6564     0633  2E35               	goto	u2871
  6565     0634  2E36               	goto	u2870
  6566     0635                     u2871:
  6567     0635  2E3D               	goto	l2678
  6568     0636                     u2870:
  6569     0636                     l2676:
  6570     0636  0840               	movf	___fladd@grs,w
  6571     0637  00B5               	movwf	??___fladd
  6572     0638  1003               	clrc
  6573     0639  0C35               	rrf	??___fladd,w
  6574     063A  3801               	iorlw	1
  6575     063B  00C0               	movwf	___fladd@grs
  6576     063C  2E3F               	goto	l2680
  6577     063D                     l2678:
  6578     063D  1003               	clrc
  6579     063E  0CC0               	rrf	___fladd@grs,f
  6580     063F                     l2680:
  6581     063F  1C2D               	btfss	___fladd@b,0
  6582     0640  2E42               	goto	u2881
  6583     0641  2E43               	goto	u2880
  6584     0642                     u2881:
  6585     0642  2E44               	goto	l2684
  6586     0643                     u2880:
  6587     0643                     l2682:
  6588     0643  17C0               	bsf	___fladd@grs,7
  6589     0644                     l2684:
  6590     0644  3001               	movlw	1
  6591     0645  00B5               	movwf	??___fladd
  6592     0646                     u2895:
  6593     0646  0D30               	rlf	___fladd@b+3,w
  6594     0647  0CB0               	rrf	___fladd@b+3,f
  6595     0648  0CAF               	rrf	___fladd@b+2,f
  6596     0649  0CAE               	rrf	___fladd@b+1,f
  6597     064A  0CAD               	rrf	___fladd@b,f
  6598     064B  0BB5               	decfsz	??___fladd& (0+127),f
  6599     064C  2E46               	goto	u2895
  6600     064D                     l2686:
  6601     064D  3001               	movlw	1
  6602     064E  00B5               	movwf	??___fladd
  6603     064F  0835               	movf	??___fladd,w
  6604     0650  07BF               	addwf	___fladd@bexp,f
  6605     0651  2F06               	goto	l2722
  6606     0652                     l2688:
  6607     0652  0830               	movf	___fladd@b+3,w
  6608     0653  3A80               	xorlw	128
  6609     0654  00FF               	movwf	btemp+1
  6610     0655  0834               	movf	___fladd@a+3,w
  6611     0656  3A80               	xorlw	128
  6612     0657  027F               	subwf	btemp+1,w
  6613     0658  1D03               	skipz
  6614     0659  2E64               	goto	u2903
  6615     065A  0833               	movf	___fladd@a+2,w
  6616     065B  022F               	subwf	___fladd@b+2,w
  6617     065C  1D03               	skipz
  6618     065D  2E64               	goto	u2903
  6619     065E  0832               	movf	___fladd@a+1,w
  6620     065F  022E               	subwf	___fladd@b+1,w
  6621     0660  1D03               	skipz
  6622     0661  2E64               	goto	u2903
  6623     0662  0831               	movf	___fladd@a,w
  6624     0663  022D               	subwf	___fladd@b,w
  6625     0664                     u2903:
  6626     0664  1803               	skipnc
  6627     0665  2E67               	goto	u2901
  6628     0666  2E68               	goto	u2900
  6629     0667                     u2901:
  6630     0667  2EC0               	goto	l2698
  6631     0668                     u2900:
  6632     0668                     l2690:
  6633     0668  30FF               	movlw	255
  6634     0669  00B5               	movwf	??___fladd
  6635     066A  30FF               	movlw	255
  6636     066B  00B6               	movwf	??___fladd+1
  6637     066C  30FF               	movlw	255
  6638     066D  00B7               	movwf	??___fladd+2
  6639     066E  30FF               	movlw	255
  6640     066F  00B8               	movwf	??___fladd+3
  6641     0670  0831               	movf	___fladd@a,w
  6642     0671  00B9               	movwf	??___fladd+4
  6643     0672  0832               	movf	___fladd@a+1,w
  6644     0673  00BA               	movwf	??___fladd+5
  6645     0674  0833               	movf	___fladd@a+2,w
  6646     0675  00BB               	movwf	??___fladd+6
  6647     0676  0834               	movf	___fladd@a+3,w
  6648     0677  00BC               	movwf	??___fladd+7
  6649     0678  082D               	movf	___fladd@b,w
  6650     0679  02B9               	subwf	??___fladd+4,f
  6651     067A  082E               	movf	___fladd@b+1,w
  6652     067B  1C03               	skipc
  6653     067C  0F2E               	incfsz	___fladd@b+1,w
  6654     067D  2E7F               	goto	u2911
  6655     067E  2E80               	goto	u2912
  6656     067F                     u2911:
  6657     067F  02BA               	subwf	??___fladd+5,f
  6658     0680                     u2912:
  6659     0680  082F               	movf	___fladd@b+2,w
  6660     0681  1C03               	skipc
  6661     0682  0F2F               	incfsz	___fladd@b+2,w
  6662     0683  2E85               	goto	u2913
  6663     0684  2E86               	goto	u2914
  6664     0685                     u2913:
  6665     0685  02BB               	subwf	??___fladd+6,f
  6666     0686                     u2914:
  6667     0686  0830               	movf	___fladd@b+3,w
  6668     0687  1C03               	skipc
  6669     0688  0F30               	incfsz	___fladd@b+3,w
  6670     0689  2E8B               	goto	u2915
  6671     068A  2E8C               	goto	u2916
  6672     068B                     u2915:
  6673     068B  02BC               	subwf	??___fladd+7,f
  6674     068C                     u2916:
  6675     068C  0839               	movf	??___fladd+4,w
  6676     068D  07B5               	addwf	??___fladd,f
  6677     068E  083A               	movf	??___fladd+5,w
  6678     068F  1803               	skipnc
  6679     0690  0F3A               	incfsz	??___fladd+5,w
  6680     0691  2E93               	goto	u2920
  6681     0692  2E94               	goto	u2921
  6682     0693                     u2920:
  6683     0693  07B6               	addwf	??___fladd+1,f
  6684     0694                     u2921:
  6685     0694  083B               	movf	??___fladd+6,w
  6686     0695  1803               	skipnc
  6687     0696  0F3B               	incfsz	??___fladd+6,w
  6688     0697  2E99               	goto	u2922
  6689     0698  2E9A               	goto	u2923
  6690     0699                     u2922:
  6691     0699  07B7               	addwf	??___fladd+2,f
  6692     069A                     u2923:
  6693     069A  083C               	movf	??___fladd+7,w
  6694     069B  1803               	skipnc
  6695     069C  0A3C               	incf	??___fladd+7,w
  6696     069D  07B8               	addwf	??___fladd+3,f
  6697     069E  0838               	movf	??___fladd+3,w
  6698     069F  00B0               	movwf	___fladd@b+3
  6699     06A0  0837               	movf	??___fladd+2,w
  6700     06A1  00AF               	movwf	___fladd@b+2
  6701     06A2  0836               	movf	??___fladd+1,w
  6702     06A3  00AE               	movwf	___fladd@b+1
  6703     06A4  0835               	movf	??___fladd,w
  6704     06A5  00AD               	movwf	___fladd@b
  6705     06A6                     l2692:
  6706     06A6  3080               	movlw	128
  6707     06A7  00B5               	movwf	??___fladd
  6708     06A8  0835               	movf	??___fladd,w
  6709     06A9  06BD               	xorwf	___fladd@signs,f
  6710     06AA  09C0               	comf	___fladd@grs,f
  6711     06AB  0AC0               	incf	___fladd@grs,f
  6712     06AC                     l2694:
  6713     06AC  0840               	movf	___fladd@grs,w
  6714     06AD  1D03               	btfss	3,2
  6715     06AE  2EB0               	goto	u2931
  6716     06AF  2EB1               	goto	u2930
  6717     06B0                     u2931:
  6718     06B0  2ECE               	goto	l784
  6719     06B1                     u2930:
  6720     06B1                     l2696:
  6721     06B1  3001               	movlw	1
  6722     06B2  07AD               	addwf	___fladd@b,f
  6723     06B3  3000               	movlw	0
  6724     06B4  1803               	skipnc
  6725     06B5  3001               	movlw	1
  6726     06B6  07AE               	addwf	___fladd@b+1,f
  6727     06B7  3000               	movlw	0
  6728     06B8  1803               	skipnc
  6729     06B9  3001               	movlw	1
  6730     06BA  07AF               	addwf	___fladd@b+2,f
  6731     06BB  3000               	movlw	0
  6732     06BC  1803               	skipnc
  6733     06BD  3001               	movlw	1
  6734     06BE  07B0               	addwf	___fladd@b+3,f
  6735     06BF  2ECE               	goto	l784
  6736     06C0                     l2698:
  6737     06C0  0831               	movf	___fladd@a,w
  6738     06C1  02AD               	subwf	___fladd@b,f
  6739     06C2  0832               	movf	___fladd@a+1,w
  6740     06C3  1C03               	skipc
  6741     06C4  0F32               	incfsz	___fladd@a+1,w
  6742     06C5  02AE               	subwf	___fladd@b+1,f
  6743     06C6  0833               	movf	___fladd@a+2,w
  6744     06C7  1C03               	skipc
  6745     06C8  0F33               	incfsz	___fladd@a+2,w
  6746     06C9  02AF               	subwf	___fladd@b+2,f
  6747     06CA  0834               	movf	___fladd@a+3,w
  6748     06CB  1C03               	skipc
  6749     06CC  0F34               	incfsz	___fladd@a+3,w
  6750     06CD  02B0               	subwf	___fladd@b+3,f
  6751     06CE                     l784:
  6752     06CE  0830               	movf	___fladd@b+3,w
  6753     06CF  042F               	iorwf	___fladd@b+2,w
  6754     06D0  042E               	iorwf	___fladd@b+1,w
  6755     06D1  042D               	iorwf	___fladd@b,w
  6756     06D2  1D03               	skipz
  6757     06D3  2ED5               	goto	u2941
  6758     06D4  2ED6               	goto	u2940
  6759     06D5                     u2941:
  6760     06D5  2F02               	goto	l2720
  6761     06D6                     u2940:
  6762     06D6                     l2700:
  6763     06D6  0840               	movf	___fladd@grs,w
  6764     06D7  1D03               	btfss	3,2
  6765     06D8  2EDA               	goto	u2951
  6766     06D9  2EDB               	goto	u2950
  6767     06DA                     u2951:
  6768     06DA  2F02               	goto	l2720
  6769     06DB                     u2950:
  6770     06DB                     l2702:
  6771     06DB  3000               	movlw	0
  6772     06DC  00B0               	movwf	?___fladd+3
  6773     06DD  3000               	movlw	0
  6774     06DE  00AF               	movwf	?___fladd+2
  6775     06DF  3000               	movlw	0
  6776     06E0  00AE               	movwf	?___fladd+1
  6777     06E1  3000               	movlw	0
  6778     06E2  00AD               	movwf	?___fladd
  6779     06E3  2F7E               	goto	l776
  6780     06E4                     l2706:
  6781     06E4  3001               	movlw	1
  6782     06E5  00B5               	movwf	??___fladd
  6783     06E6                     u2965:
  6784     06E6  1003               	clrc
  6785     06E7  0DAD               	rlf	___fladd@b,f
  6786     06E8  0DAE               	rlf	___fladd@b+1,f
  6787     06E9  0DAF               	rlf	___fladd@b+2,f
  6788     06EA  0DB0               	rlf	___fladd@b+3,f
  6789     06EB  0BB5               	decfsz	??___fladd,f
  6790     06EC  2EE6               	goto	u2965
  6791     06ED                     l2708:
  6792     06ED  1FC0               	btfss	___fladd@grs,7
  6793     06EE  2EF0               	goto	u2971
  6794     06EF  2EF1               	goto	u2970
  6795     06F0                     u2971:
  6796     06F0  2EF2               	goto	l788
  6797     06F1                     u2970:
  6798     06F1                     l2710:
  6799     06F1  142D               	bsf	___fladd@b,0
  6800     06F2                     l788:
  6801     06F2  1C40               	btfss	___fladd@grs,0
  6802     06F3  2EF5               	goto	u2981
  6803     06F4  2EF6               	goto	u2980
  6804     06F5                     u2981:
  6805     06F5  2EF9               	goto	l2714
  6806     06F6                     u2980:
  6807     06F6                     l2712:
  6808     06F6  1403               	setc
  6809     06F7  0DC0               	rlf	___fladd@grs,f
  6810     06F8  2EFB               	goto	l2716
  6811     06F9                     l2714:
  6812     06F9  1003               	clrc
  6813     06FA  0DC0               	rlf	___fladd@grs,f
  6814     06FB                     l2716:
  6815     06FB  083F               	movf	___fladd@bexp,w
  6816     06FC  1903               	btfsc	3,2
  6817     06FD  2EFF               	goto	u2991
  6818     06FE  2F00               	goto	u2990
  6819     06FF                     u2991:
  6820     06FF  2F02               	goto	l2720
  6821     0700                     u2990:
  6822     0700                     l2718:
  6823     0700  3001               	movlw	1
  6824     0701  02BF               	subwf	___fladd@bexp,f
  6825     0702                     l2720:
  6826     0702  1FAF               	btfss	___fladd@b+2,7
  6827     0703  2F05               	goto	u3001
  6828     0704  2F06               	goto	u3000
  6829     0705                     u3001:
  6830     0705  2EE4               	goto	l2706
  6831     0706                     u3000:
  6832     0706                     l2722:
  6833     0706  01BE               	clrf	___fladd@aexp
  6834     0707                     l2724:
  6835     0707  1FC0               	btfss	___fladd@grs,7
  6836     0708  2F0A               	goto	u3011
  6837     0709  2F0B               	goto	u3010
  6838     070A                     u3011:
  6839     070A  2F19               	goto	l2732
  6840     070B                     u3010:
  6841     070B                     l2726:
  6842     070B  0840               	movf	___fladd@grs,w
  6843     070C  397F               	andlw	127
  6844     070D  1903               	btfsc	3,2
  6845     070E  2F10               	goto	u3021
  6846     070F  2F11               	goto	u3020
  6847     0710                     u3021:
  6848     0710  2F14               	goto	l794
  6849     0711                     u3020:
  6850     0711                     l2728:
  6851     0711  01BE               	clrf	___fladd@aexp
  6852     0712  0ABE               	incf	___fladd@aexp,f
  6853     0713  2F19               	goto	l2732
  6854     0714                     l794:
  6855     0714  1C2D               	btfss	___fladd@b,0
  6856     0715  2F17               	goto	u3031
  6857     0716  2F18               	goto	u3030
  6858     0717                     u3031:
  6859     0717  2F19               	goto	l2732
  6860     0718                     u3030:
  6861     0718  2F11               	goto	l2728
  6862     0719                     l2732:
  6863     0719  083E               	movf	___fladd@aexp,w
  6864     071A  1903               	btfsc	3,2
  6865     071B  2F1D               	goto	u3041
  6866     071C  2F1E               	goto	u3040
  6867     071D                     u3041:
  6868     071D  2F52               	goto	l797
  6869     071E                     u3040:
  6870     071E                     l2734:
  6871     071E  3001               	movlw	1
  6872     071F  07AD               	addwf	___fladd@b,f
  6873     0720  3000               	movlw	0
  6874     0721  1803               	skipnc
  6875     0722  3001               	movlw	1
  6876     0723  07AE               	addwf	___fladd@b+1,f
  6877     0724  3000               	movlw	0
  6878     0725  1803               	skipnc
  6879     0726  3001               	movlw	1
  6880     0727  07AF               	addwf	___fladd@b+2,f
  6881     0728  3000               	movlw	0
  6882     0729  1803               	skipnc
  6883     072A  3001               	movlw	1
  6884     072B  07B0               	addwf	___fladd@b+3,f
  6885     072C                     l2736:
  6886     072C  1C30               	btfss	___fladd@b+3,0
  6887     072D  2F2F               	goto	u3051
  6888     072E  2F30               	goto	u3050
  6889     072F                     u3051:
  6890     072F  2F52               	goto	l797
  6891     0730                     u3050:
  6892     0730                     l2738:
  6893     0730  082D               	movf	___fladd@b,w
  6894     0731  00B5               	movwf	??___fladd
  6895     0732  082E               	movf	___fladd@b+1,w
  6896     0733  00B6               	movwf	??___fladd+1
  6897     0734  082F               	movf	___fladd@b+2,w
  6898     0735  00B7               	movwf	??___fladd+2
  6899     0736  0830               	movf	___fladd@b+3,w
  6900     0737  00B8               	movwf	??___fladd+3
  6901     0738  3001               	movlw	1
  6902     0739  00B9               	movwf	??___fladd+4
  6903     073A                     u3065:
  6904     073A  0D38               	rlf	??___fladd+3,w
  6905     073B  0CB8               	rrf	??___fladd+3,f
  6906     073C  0CB7               	rrf	??___fladd+2,f
  6907     073D  0CB6               	rrf	??___fladd+1,f
  6908     073E  0CB5               	rrf	??___fladd,f
  6909     073F                     u3060:
  6910     073F  0BB9               	decfsz	??___fladd+4,f
  6911     0740  2F3A               	goto	u3065
  6912     0741  0838               	movf	??___fladd+3,w
  6913     0742  00B0               	movwf	___fladd@b+3
  6914     0743  0837               	movf	??___fladd+2,w
  6915     0744  00AF               	movwf	___fladd@b+2
  6916     0745  0836               	movf	??___fladd+1,w
  6917     0746  00AE               	movwf	___fladd@b+1
  6918     0747  0835               	movf	??___fladd,w
  6919     0748  00AD               	movwf	___fladd@b
  6920     0749  0A3F               	incf	___fladd@bexp,w
  6921     074A  1903               	btfsc	3,2
  6922     074B  2F4D               	goto	u3071
  6923     074C  2F4E               	goto	u3070
  6924     074D                     u3071:
  6925     074D  2F52               	goto	l797
  6926     074E                     u3070:
  6927     074E                     l2740:
  6928     074E  3001               	movlw	1
  6929     074F  00B5               	movwf	??___fladd
  6930     0750  0835               	movf	??___fladd,w
  6931     0751  07BF               	addwf	___fladd@bexp,f
  6932     0752                     l797:
  6933     0752  0A3F               	incf	___fladd@bexp,w
  6934     0753  1903               	btfsc	3,2
  6935     0754  2F56               	goto	u3081
  6936     0755  2F57               	goto	u3080
  6937     0756                     u3081:
  6938     0756  2F5C               	goto	l2744
  6939     0757                     u3080:
  6940     0757                     l2742:
  6941     0757  083F               	movf	___fladd@bexp,w
  6942     0758  1D03               	btfss	3,2
  6943     0759  2F5B               	goto	u3091
  6944     075A  2F5C               	goto	u3090
  6945     075B                     u3091:
  6946     075B  2F6A               	goto	l2750
  6947     075C                     u3090:
  6948     075C                     l2744:
  6949     075C  3000               	movlw	0
  6950     075D  00B0               	movwf	___fladd@b+3
  6951     075E  3000               	movlw	0
  6952     075F  00AF               	movwf	___fladd@b+2
  6953     0760  3000               	movlw	0
  6954     0761  00AE               	movwf	___fladd@b+1
  6955     0762  3000               	movlw	0
  6956     0763  00AD               	movwf	___fladd@b
  6957     0764                     l2746:
  6958     0764  083F               	movf	___fladd@bexp,w
  6959     0765  1D03               	btfss	3,2
  6960     0766  2F68               	goto	u3101
  6961     0767  2F69               	goto	u3100
  6962     0768                     u3101:
  6963     0768  2F6A               	goto	l2750
  6964     0769                     u3100:
  6965     0769                     l2748:
  6966     0769  01BD               	clrf	___fladd@signs
  6967     076A                     l2750:
  6968     076A  1C3F               	btfss	___fladd@bexp,0
  6969     076B  2F6D               	goto	u3111
  6970     076C  2F6E               	goto	u3110
  6971     076D                     u3111:
  6972     076D  2F70               	goto	l2754
  6973     076E                     u3110:
  6974     076E                     l2752:
  6975     076E  17AF               	bsf	___fladd@b+2,7
  6976     076F  2F74               	goto	l805
  6977     0770                     l2754:
  6978     0770  307F               	movlw	127
  6979     0771  00B5               	movwf	??___fladd
  6980     0772  0835               	movf	??___fladd,w
  6981     0773  05AF               	andwf	___fladd@b+2,f
  6982     0774                     l805:
  6983     0774  083F               	movf	___fladd@bexp,w
  6984     0775  00B5               	movwf	??___fladd
  6985     0776  1003               	clrc
  6986     0777  0C35               	rrf	??___fladd,w
  6987     0778  00B0               	movwf	___fladd@b+3
  6988     0779                     l2756:
  6989     0779  1FBD               	btfss	___fladd@signs,7
  6990     077A  2F7C               	goto	u3121
  6991     077B  2F7D               	goto	u3120
  6992     077C                     u3121:
  6993     077C  2F7E               	goto	l806
  6994     077D                     u3120:
  6995     077D                     l2758:
  6996     077D  17B0               	bsf	___fladd@b+3,7
  6997     077E                     l806:
  6998     077E                     l776:
  6999     077E  0008               	return
  7000     077F                     __end_of___fladd:
  7001                           
  7002                           	psect	text21
  7003     1FA0                     __ptext21:	
  7004 ;; *************** function ___flneg *****************
  7005 ;; Defined at:
  7006 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  f1              4   13[BANK0 ] unsigned char 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  4   13[BANK0 ] unsigned char 
  7013 ;; Registers used:
  7014 ;;		wreg
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7020 ;;      Params:         0       4       0       0       0
  7021 ;;      Locals:         0       0       0       0       0
  7022 ;;      Temps:          0       0       0       0       0
  7023 ;;      Totals:         0       4       0       0       0
  7024 ;;Total ram usage:        4 bytes
  7025 ;; Hardware stack levels used: 1
  7026 ;; Hardware stack levels required when called: 3
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_floatToStr
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034     1FA0                     ___flneg:	
  7035                           ;psect for function ___flneg
  7036                           
  7037     1FA0                     l2912:	
  7038                           ;incstack = 0
  7039                           ; Regs used in ___flneg: [wreg]
  7040                           
  7041     1FA0  1283               	bcf	3,5	;RP0=0, select bank0
  7042     1FA1  1303               	bcf	3,6	;RP1=0, select bank0
  7043     1FA2  0830               	movf	___flneg@f1+3,w
  7044     1FA3  042F               	iorwf	___flneg@f1+2,w
  7045     1FA4  042E               	iorwf	___flneg@f1+1,w
  7046     1FA5  042D               	iorwf	___flneg@f1,w
  7047     1FA6  1903               	skipnz
  7048     1FA7  2FA9               	goto	u3421
  7049     1FA8  2FAA               	goto	u3420
  7050     1FA9                     u3421:
  7051     1FA9  2FAC               	goto	l2916
  7052     1FAA                     u3420:
  7053     1FAA                     l2914:
  7054     1FAA  3080               	movlw	128
  7055     1FAB  06B0               	xorwf	___flneg@f1+3,f
  7056     1FAC                     l2916:
  7057     1FAC                     l652:
  7058     1FAC  0008               	return
  7059     1FAD                     __end_of___flneg:
  7060                           
  7061                           	psect	text22
  7062     0CBB                     __ptext22:	
  7063 ;; *************** function ___flmul *****************
  7064 ;; Defined at:
  7065 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  b               4   22[BANK0 ] unsigned char 
  7068 ;;  a               4   26[BANK0 ] unsigned char 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;  prod            4   42[BANK0 ] struct .
  7071 ;;  grs             4   36[BANK0 ] unsigned long 
  7072 ;;  temp            2   46[BANK0 ] struct .
  7073 ;;  bexp            1   41[BANK0 ] unsigned char 
  7074 ;;  aexp            1   40[BANK0 ] unsigned char 
  7075 ;;  sign            1   35[BANK0 ] unsigned char 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  4   22[BANK0 ] unsigned char 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7085 ;;      Params:         0       8       0       0       0
  7086 ;;      Locals:         0      13       0       0       0
  7087 ;;      Temps:          0       5       0       0       0
  7088 ;;      Totals:         0      26       0       0       0
  7089 ;;Total ram usage:       26 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 4
  7092 ;; This function calls:
  7093 ;;		__Umul8_16
  7094 ;; This function is called by:
  7095 ;;		_floatToStr
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099     0CBB                     ___flmul:	
  7100                           ;psect for function ___flmul
  7101                           
  7102     0CBB                     l2962:	
  7103                           ;incstack = 0
  7104                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7105                           
  7106     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  7107     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  7108     0CBD  0839               	movf	___flmul@b+3,w
  7109     0CBE  3980               	andlw	128
  7110     0CBF  00C3               	movwf	___flmul@sign
  7111     0CC0                     l2964:
  7112     0CC0  0839               	movf	___flmul@b+3,w
  7113     0CC1  00BE               	movwf	??___flmul
  7114     0CC2  073E               	addwf	??___flmul,w
  7115     0CC3  00C9               	movwf	___flmul@bexp
  7116     0CC4                     l2966:
  7117     0CC4  1FB8               	btfss	___flmul@b+2,7
  7118     0CC5  2CC7               	goto	u3531
  7119     0CC6  2CC8               	goto	u3530
  7120     0CC7                     u3531:
  7121     0CC7  2CC9               	goto	l2970
  7122     0CC8                     u3530:
  7123     0CC8                     l2968:
  7124     0CC8  1449               	bsf	___flmul@bexp,0
  7125     0CC9                     l2970:
  7126     0CC9  0849               	movf	___flmul@bexp,w
  7127     0CCA  1903               	btfsc	3,2
  7128     0CCB  2CCD               	goto	u3541
  7129     0CCC  2CCE               	goto	u3540
  7130     0CCD                     u3541:
  7131     0CCD  2CDD               	goto	l2978
  7132     0CCE                     u3540:
  7133     0CCE                     l2972:
  7134     0CCE  0A49               	incf	___flmul@bexp,w
  7135     0CCF  1D03               	btfss	3,2
  7136     0CD0  2CD2               	goto	u3551
  7137     0CD1  2CD3               	goto	u3550
  7138     0CD2                     u3551:
  7139     0CD2  2CDB               	goto	l2976
  7140     0CD3                     u3550:
  7141     0CD3                     l2974:
  7142     0CD3  3000               	movlw	0
  7143     0CD4  00B9               	movwf	___flmul@b+3
  7144     0CD5  3000               	movlw	0
  7145     0CD6  00B8               	movwf	___flmul@b+2
  7146     0CD7  3000               	movlw	0
  7147     0CD8  00B7               	movwf	___flmul@b+1
  7148     0CD9  3000               	movlw	0
  7149     0CDA  00B6               	movwf	___flmul@b
  7150     0CDB                     l2976:
  7151     0CDB  17B8               	bsf	___flmul@b+2,7
  7152     0CDC  2CE5               	goto	l2980
  7153     0CDD                     l2978:
  7154     0CDD  3000               	movlw	0
  7155     0CDE  00B9               	movwf	___flmul@b+3
  7156     0CDF  3000               	movlw	0
  7157     0CE0  00B8               	movwf	___flmul@b+2
  7158     0CE1  3000               	movlw	0
  7159     0CE2  00B7               	movwf	___flmul@b+1
  7160     0CE3  3000               	movlw	0
  7161     0CE4  00B6               	movwf	___flmul@b
  7162     0CE5                     l2980:
  7163     0CE5  083D               	movf	___flmul@a+3,w
  7164     0CE6  3980               	andlw	128
  7165     0CE7  00BE               	movwf	??___flmul
  7166     0CE8  083E               	movf	??___flmul,w
  7167     0CE9  06C3               	xorwf	___flmul@sign,f
  7168     0CEA                     l2982:
  7169     0CEA  083D               	movf	___flmul@a+3,w
  7170     0CEB  00BE               	movwf	??___flmul
  7171     0CEC  073E               	addwf	??___flmul,w
  7172     0CED  00C8               	movwf	___flmul@aexp
  7173     0CEE                     l2984:
  7174     0CEE  1FBC               	btfss	___flmul@a+2,7
  7175     0CEF  2CF1               	goto	u3561
  7176     0CF0  2CF2               	goto	u3560
  7177     0CF1                     u3561:
  7178     0CF1  2CF3               	goto	l2988
  7179     0CF2                     u3560:
  7180     0CF2                     l2986:
  7181     0CF2  1448               	bsf	___flmul@aexp,0
  7182     0CF3                     l2988:
  7183     0CF3  0848               	movf	___flmul@aexp,w
  7184     0CF4  1903               	btfsc	3,2
  7185     0CF5  2CF7               	goto	u3571
  7186     0CF6  2CF8               	goto	u3570
  7187     0CF7                     u3571:
  7188     0CF7  2D07               	goto	l2996
  7189     0CF8                     u3570:
  7190     0CF8                     l2990:
  7191     0CF8  0A48               	incf	___flmul@aexp,w
  7192     0CF9  1D03               	btfss	3,2
  7193     0CFA  2CFC               	goto	u3581
  7194     0CFB  2CFD               	goto	u3580
  7195     0CFC                     u3581:
  7196     0CFC  2D05               	goto	l2994
  7197     0CFD                     u3580:
  7198     0CFD                     l2992:
  7199     0CFD  3000               	movlw	0
  7200     0CFE  00BD               	movwf	___flmul@a+3
  7201     0CFF  3000               	movlw	0
  7202     0D00  00BC               	movwf	___flmul@a+2
  7203     0D01  3000               	movlw	0
  7204     0D02  00BB               	movwf	___flmul@a+1
  7205     0D03  3000               	movlw	0
  7206     0D04  00BA               	movwf	___flmul@a
  7207     0D05                     l2994:
  7208     0D05  17BC               	bsf	___flmul@a+2,7
  7209     0D06  2D0F               	goto	l2998
  7210     0D07                     l2996:
  7211     0D07  3000               	movlw	0
  7212     0D08  00BD               	movwf	___flmul@a+3
  7213     0D09  3000               	movlw	0
  7214     0D0A  00BC               	movwf	___flmul@a+2
  7215     0D0B  3000               	movlw	0
  7216     0D0C  00BB               	movwf	___flmul@a+1
  7217     0D0D  3000               	movlw	0
  7218     0D0E  00BA               	movwf	___flmul@a
  7219     0D0F                     l2998:
  7220     0D0F  0848               	movf	___flmul@aexp,w
  7221     0D10  1903               	btfsc	3,2
  7222     0D11  2D13               	goto	u3591
  7223     0D12  2D14               	goto	u3590
  7224     0D13                     u3591:
  7225     0D13  2D19               	goto	l3002
  7226     0D14                     u3590:
  7227     0D14                     l3000:
  7228     0D14  0849               	movf	___flmul@bexp,w
  7229     0D15  1D03               	btfss	3,2
  7230     0D16  2D18               	goto	u3601
  7231     0D17  2D19               	goto	u3600
  7232     0D18                     u3601:
  7233     0D18  2D22               	goto	l3006
  7234     0D19                     u3600:
  7235     0D19                     l3002:
  7236     0D19  3000               	movlw	0
  7237     0D1A  00B9               	movwf	?___flmul+3
  7238     0D1B  3000               	movlw	0
  7239     0D1C  00B8               	movwf	?___flmul+2
  7240     0D1D  3000               	movlw	0
  7241     0D1E  00B7               	movwf	?___flmul+1
  7242     0D1F  3000               	movlw	0
  7243     0D20  00B6               	movwf	?___flmul
  7244     0D21  2FFF               	goto	l859
  7245     0D22                     l3006:
  7246     0D22  0836               	movf	___flmul@b,w
  7247     0D23  00AD               	movwf	__Umul8_16@multiplicand
  7248     0D24  083C               	movf	___flmul@a+2,w
  7249     0D25  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7250     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  7251     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  7252     0D2C  082E               	movf	?__Umul8_16+1,w
  7253     0D2D  00CF               	movwf	___flmul@temp+1
  7254     0D2E  082D               	movf	?__Umul8_16,w
  7255     0D2F  00CE               	movwf	___flmul@temp
  7256     0D30                     l3008:
  7257     0D30  084E               	movf	___flmul@temp,w
  7258     0D31  00BE               	movwf	??___flmul
  7259     0D32  01BF               	clrf	??___flmul+1
  7260     0D33  01C0               	clrf	??___flmul+2
  7261     0D34  01C1               	clrf	??___flmul+3
  7262     0D35  0841               	movf	??___flmul+3,w
  7263     0D36  00C7               	movwf	___flmul@grs+3
  7264     0D37  0840               	movf	??___flmul+2,w
  7265     0D38  00C6               	movwf	___flmul@grs+2
  7266     0D39  083F               	movf	??___flmul+1,w
  7267     0D3A  00C5               	movwf	___flmul@grs+1
  7268     0D3B  083E               	movf	??___flmul,w
  7269     0D3C  00C4               	movwf	___flmul@grs
  7270     0D3D                     l3010:
  7271     0D3D  084F               	movf	___flmul@temp+1,w
  7272     0D3E  00BE               	movwf	??___flmul
  7273     0D3F  01BF               	clrf	??___flmul+1
  7274     0D40  01C0               	clrf	??___flmul+2
  7275     0D41  01C1               	clrf	??___flmul+3
  7276     0D42  0841               	movf	??___flmul+3,w
  7277     0D43  00CD               	movwf	___flmul@prod+3
  7278     0D44  0840               	movf	??___flmul+2,w
  7279     0D45  00CC               	movwf	___flmul@prod+2
  7280     0D46  083F               	movf	??___flmul+1,w
  7281     0D47  00CB               	movwf	___flmul@prod+1
  7282     0D48  083E               	movf	??___flmul,w
  7283     0D49  00CA               	movwf	___flmul@prod
  7284     0D4A  0837               	movf	___flmul@b+1,w
  7285     0D4B  00AD               	movwf	__Umul8_16@multiplicand
  7286     0D4C  083B               	movf	___flmul@a+1,w
  7287     0D4D  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7288     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  7289     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  7290     0D54  082E               	movf	?__Umul8_16+1,w
  7291     0D55  00CF               	movwf	___flmul@temp+1
  7292     0D56  082D               	movf	?__Umul8_16,w
  7293     0D57  00CE               	movwf	___flmul@temp
  7294     0D58                     l3012:
  7295     0D58  084E               	movf	___flmul@temp,w
  7296     0D59  00BE               	movwf	??___flmul
  7297     0D5A  01BF               	clrf	??___flmul+1
  7298     0D5B  01C0               	clrf	??___flmul+2
  7299     0D5C  01C1               	clrf	??___flmul+3
  7300     0D5D  083E               	movf	??___flmul,w
  7301     0D5E  07C4               	addwf	___flmul@grs,f
  7302     0D5F  083F               	movf	??___flmul+1,w
  7303     0D60  1103               	clrz
  7304     0D61  1803               	skipnc
  7305     0D62  3E01               	addlw	1
  7306     0D63  1903               	skipnz
  7307     0D64  2D66               	goto	u3611
  7308     0D65  07C5               	addwf	___flmul@grs+1,f
  7309     0D66                     u3611:
  7310     0D66  0840               	movf	??___flmul+2,w
  7311     0D67  1103               	clrz
  7312     0D68  1803               	skipnc
  7313     0D69  3E01               	addlw	1
  7314     0D6A  1903               	skipnz
  7315     0D6B  2D6D               	goto	u3612
  7316     0D6C  07C6               	addwf	___flmul@grs+2,f
  7317     0D6D                     u3612:
  7318     0D6D  0841               	movf	??___flmul+3,w
  7319     0D6E  1103               	clrz
  7320     0D6F  1803               	skipnc
  7321     0D70  3E01               	addlw	1
  7322     0D71  1903               	skipnz
  7323     0D72  2D74               	goto	u3613
  7324     0D73  07C7               	addwf	___flmul@grs+3,f
  7325     0D74                     u3613:
  7326     0D74                     l3014:
  7327     0D74  084F               	movf	___flmul@temp+1,w
  7328     0D75  00BE               	movwf	??___flmul
  7329     0D76  01BF               	clrf	??___flmul+1
  7330     0D77  01C0               	clrf	??___flmul+2
  7331     0D78  01C1               	clrf	??___flmul+3
  7332     0D79  083E               	movf	??___flmul,w
  7333     0D7A  07CA               	addwf	___flmul@prod,f
  7334     0D7B  083F               	movf	??___flmul+1,w
  7335     0D7C  1103               	clrz
  7336     0D7D  1803               	skipnc
  7337     0D7E  3E01               	addlw	1
  7338     0D7F  1903               	skipnz
  7339     0D80  2D82               	goto	u3621
  7340     0D81  07CB               	addwf	___flmul@prod+1,f
  7341     0D82                     u3621:
  7342     0D82  0840               	movf	??___flmul+2,w
  7343     0D83  1103               	clrz
  7344     0D84  1803               	skipnc
  7345     0D85  3E01               	addlw	1
  7346     0D86  1903               	skipnz
  7347     0D87  2D89               	goto	u3622
  7348     0D88  07CC               	addwf	___flmul@prod+2,f
  7349     0D89                     u3622:
  7350     0D89  0841               	movf	??___flmul+3,w
  7351     0D8A  1103               	clrz
  7352     0D8B  1803               	skipnc
  7353     0D8C  3E01               	addlw	1
  7354     0D8D  1903               	skipnz
  7355     0D8E  2D90               	goto	u3623
  7356     0D8F  07CD               	addwf	___flmul@prod+3,f
  7357     0D90                     u3623:
  7358     0D90  0838               	movf	___flmul@b+2,w
  7359     0D91  00AD               	movwf	__Umul8_16@multiplicand
  7360     0D92  083A               	movf	___flmul@a,w
  7361     0D93  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7362     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  7363     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  7364     0D9A  082E               	movf	?__Umul8_16+1,w
  7365     0D9B  00CF               	movwf	___flmul@temp+1
  7366     0D9C  082D               	movf	?__Umul8_16,w
  7367     0D9D  00CE               	movwf	___flmul@temp
  7368     0D9E                     l3016:
  7369     0D9E  084E               	movf	___flmul@temp,w
  7370     0D9F  00BE               	movwf	??___flmul
  7371     0DA0  01BF               	clrf	??___flmul+1
  7372     0DA1  01C0               	clrf	??___flmul+2
  7373     0DA2  01C1               	clrf	??___flmul+3
  7374     0DA3  083E               	movf	??___flmul,w
  7375     0DA4  07C4               	addwf	___flmul@grs,f
  7376     0DA5  083F               	movf	??___flmul+1,w
  7377     0DA6  1103               	clrz
  7378     0DA7  1803               	skipnc
  7379     0DA8  3E01               	addlw	1
  7380     0DA9  1903               	skipnz
  7381     0DAA  2DAC               	goto	u3631
  7382     0DAB  07C5               	addwf	___flmul@grs+1,f
  7383     0DAC                     u3631:
  7384     0DAC  0840               	movf	??___flmul+2,w
  7385     0DAD  1103               	clrz
  7386     0DAE  1803               	skipnc
  7387     0DAF  3E01               	addlw	1
  7388     0DB0  1903               	skipnz
  7389     0DB1  2DB3               	goto	u3632
  7390     0DB2  07C6               	addwf	___flmul@grs+2,f
  7391     0DB3                     u3632:
  7392     0DB3  0841               	movf	??___flmul+3,w
  7393     0DB4  1103               	clrz
  7394     0DB5  1803               	skipnc
  7395     0DB6  3E01               	addlw	1
  7396     0DB7  1903               	skipnz
  7397     0DB8  2DBA               	goto	u3633
  7398     0DB9  07C7               	addwf	___flmul@grs+3,f
  7399     0DBA                     u3633:
  7400     0DBA                     l3018:
  7401     0DBA  084F               	movf	___flmul@temp+1,w
  7402     0DBB  00BE               	movwf	??___flmul
  7403     0DBC  01BF               	clrf	??___flmul+1
  7404     0DBD  01C0               	clrf	??___flmul+2
  7405     0DBE  01C1               	clrf	??___flmul+3
  7406     0DBF  083E               	movf	??___flmul,w
  7407     0DC0  07CA               	addwf	___flmul@prod,f
  7408     0DC1  083F               	movf	??___flmul+1,w
  7409     0DC2  1103               	clrz
  7410     0DC3  1803               	skipnc
  7411     0DC4  3E01               	addlw	1
  7412     0DC5  1903               	skipnz
  7413     0DC6  2DC8               	goto	u3641
  7414     0DC7  07CB               	addwf	___flmul@prod+1,f
  7415     0DC8                     u3641:
  7416     0DC8  0840               	movf	??___flmul+2,w
  7417     0DC9  1103               	clrz
  7418     0DCA  1803               	skipnc
  7419     0DCB  3E01               	addlw	1
  7420     0DCC  1903               	skipnz
  7421     0DCD  2DCF               	goto	u3642
  7422     0DCE  07CC               	addwf	___flmul@prod+2,f
  7423     0DCF                     u3642:
  7424     0DCF  0841               	movf	??___flmul+3,w
  7425     0DD0  1103               	clrz
  7426     0DD1  1803               	skipnc
  7427     0DD2  3E01               	addlw	1
  7428     0DD3  1903               	skipnz
  7429     0DD4  2DD6               	goto	u3643
  7430     0DD5  07CD               	addwf	___flmul@prod+3,f
  7431     0DD6                     u3643:
  7432     0DD6                     l3020:
  7433     0DD6  3008               	movlw	8
  7434     0DD7  00BE               	movwf	??___flmul
  7435     0DD8                     u3655:
  7436     0DD8  1003               	clrc
  7437     0DD9  0DC4               	rlf	___flmul@grs,f
  7438     0DDA  0DC5               	rlf	___flmul@grs+1,f
  7439     0DDB  0DC6               	rlf	___flmul@grs+2,f
  7440     0DDC  0DC7               	rlf	___flmul@grs+3,f
  7441     0DDD  0BBE               	decfsz	??___flmul,f
  7442     0DDE  2DD8               	goto	u3655
  7443     0DDF                     l3022:
  7444     0DDF  0837               	movf	___flmul@b+1,w
  7445     0DE0  00AD               	movwf	__Umul8_16@multiplicand
  7446     0DE1  083A               	movf	___flmul@a,w
  7447     0DE2  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7448     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  7449     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  7450     0DE9  082E               	movf	?__Umul8_16+1,w
  7451     0DEA  00CF               	movwf	___flmul@temp+1
  7452     0DEB  082D               	movf	?__Umul8_16,w
  7453     0DEC  00CE               	movwf	___flmul@temp
  7454     0DED                     l3024:
  7455     0DED  084E               	movf	___flmul@temp,w
  7456     0DEE  00BE               	movwf	??___flmul
  7457     0DEF  084F               	movf	___flmul@temp+1,w
  7458     0DF0  00BF               	movwf	??___flmul+1
  7459     0DF1  01C0               	clrf	??___flmul+2
  7460     0DF2  01C1               	clrf	??___flmul+3
  7461     0DF3  083E               	movf	??___flmul,w
  7462     0DF4  07C4               	addwf	___flmul@grs,f
  7463     0DF5  083F               	movf	??___flmul+1,w
  7464     0DF6  1103               	clrz
  7465     0DF7  1803               	skipnc
  7466     0DF8  3E01               	addlw	1
  7467     0DF9  1903               	skipnz
  7468     0DFA  2DFC               	goto	u3661
  7469     0DFB  07C5               	addwf	___flmul@grs+1,f
  7470     0DFC                     u3661:
  7471     0DFC  0840               	movf	??___flmul+2,w
  7472     0DFD  1103               	clrz
  7473     0DFE  1803               	skipnc
  7474     0DFF  3E01               	addlw	1
  7475     0E00  1903               	skipnz
  7476     0E01  2E03               	goto	u3662
  7477     0E02  07C6               	addwf	___flmul@grs+2,f
  7478     0E03                     u3662:
  7479     0E03  0841               	movf	??___flmul+3,w
  7480     0E04  1103               	clrz
  7481     0E05  1803               	skipnc
  7482     0E06  3E01               	addlw	1
  7483     0E07  1903               	skipnz
  7484     0E08  2E0A               	goto	u3663
  7485     0E09  07C7               	addwf	___flmul@grs+3,f
  7486     0E0A                     u3663:
  7487     0E0A                     l3026:
  7488     0E0A  0836               	movf	___flmul@b,w
  7489     0E0B  00AD               	movwf	__Umul8_16@multiplicand
  7490     0E0C  083B               	movf	___flmul@a+1,w
  7491     0E0D  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7492     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  7493     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  7494     0E14  082E               	movf	?__Umul8_16+1,w
  7495     0E15  00CF               	movwf	___flmul@temp+1
  7496     0E16  082D               	movf	?__Umul8_16,w
  7497     0E17  00CE               	movwf	___flmul@temp
  7498     0E18                     l3028:
  7499     0E18  084E               	movf	___flmul@temp,w
  7500     0E19  00BE               	movwf	??___flmul
  7501     0E1A  084F               	movf	___flmul@temp+1,w
  7502     0E1B  00BF               	movwf	??___flmul+1
  7503     0E1C  01C0               	clrf	??___flmul+2
  7504     0E1D  01C1               	clrf	??___flmul+3
  7505     0E1E  083E               	movf	??___flmul,w
  7506     0E1F  07C4               	addwf	___flmul@grs,f
  7507     0E20  083F               	movf	??___flmul+1,w
  7508     0E21  1103               	clrz
  7509     0E22  1803               	skipnc
  7510     0E23  3E01               	addlw	1
  7511     0E24  1903               	skipnz
  7512     0E25  2E27               	goto	u3671
  7513     0E26  07C5               	addwf	___flmul@grs+1,f
  7514     0E27                     u3671:
  7515     0E27  0840               	movf	??___flmul+2,w
  7516     0E28  1103               	clrz
  7517     0E29  1803               	skipnc
  7518     0E2A  3E01               	addlw	1
  7519     0E2B  1903               	skipnz
  7520     0E2C  2E2E               	goto	u3672
  7521     0E2D  07C6               	addwf	___flmul@grs+2,f
  7522     0E2E                     u3672:
  7523     0E2E  0841               	movf	??___flmul+3,w
  7524     0E2F  1103               	clrz
  7525     0E30  1803               	skipnc
  7526     0E31  3E01               	addlw	1
  7527     0E32  1903               	skipnz
  7528     0E33  2E35               	goto	u3673
  7529     0E34  07C7               	addwf	___flmul@grs+3,f
  7530     0E35                     u3673:
  7531     0E35                     l3030:
  7532     0E35  3008               	movlw	8
  7533     0E36  00BE               	movwf	??___flmul
  7534     0E37                     u3685:
  7535     0E37  1003               	clrc
  7536     0E38  0DC4               	rlf	___flmul@grs,f
  7537     0E39  0DC5               	rlf	___flmul@grs+1,f
  7538     0E3A  0DC6               	rlf	___flmul@grs+2,f
  7539     0E3B  0DC7               	rlf	___flmul@grs+3,f
  7540     0E3C  0BBE               	decfsz	??___flmul,f
  7541     0E3D  2E37               	goto	u3685
  7542     0E3E  0836               	movf	___flmul@b,w
  7543     0E3F  00AD               	movwf	__Umul8_16@multiplicand
  7544     0E40  083A               	movf	___flmul@a,w
  7545     0E41  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7546     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  7547     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  7548     0E48  082E               	movf	?__Umul8_16+1,w
  7549     0E49  00CF               	movwf	___flmul@temp+1
  7550     0E4A  082D               	movf	?__Umul8_16,w
  7551     0E4B  00CE               	movwf	___flmul@temp
  7552     0E4C                     l3032:
  7553     0E4C  084E               	movf	___flmul@temp,w
  7554     0E4D  00BE               	movwf	??___flmul
  7555     0E4E  084F               	movf	___flmul@temp+1,w
  7556     0E4F  00BF               	movwf	??___flmul+1
  7557     0E50  01C0               	clrf	??___flmul+2
  7558     0E51  01C1               	clrf	??___flmul+3
  7559     0E52  083E               	movf	??___flmul,w
  7560     0E53  07C4               	addwf	___flmul@grs,f
  7561     0E54  083F               	movf	??___flmul+1,w
  7562     0E55  1103               	clrz
  7563     0E56  1803               	skipnc
  7564     0E57  3E01               	addlw	1
  7565     0E58  1903               	skipnz
  7566     0E59  2E5B               	goto	u3691
  7567     0E5A  07C5               	addwf	___flmul@grs+1,f
  7568     0E5B                     u3691:
  7569     0E5B  0840               	movf	??___flmul+2,w
  7570     0E5C  1103               	clrz
  7571     0E5D  1803               	skipnc
  7572     0E5E  3E01               	addlw	1
  7573     0E5F  1903               	skipnz
  7574     0E60  2E62               	goto	u3692
  7575     0E61  07C6               	addwf	___flmul@grs+2,f
  7576     0E62                     u3692:
  7577     0E62  0841               	movf	??___flmul+3,w
  7578     0E63  1103               	clrz
  7579     0E64  1803               	skipnc
  7580     0E65  3E01               	addlw	1
  7581     0E66  1903               	skipnz
  7582     0E67  2E69               	goto	u3693
  7583     0E68  07C7               	addwf	___flmul@grs+3,f
  7584     0E69                     u3693:
  7585     0E69                     l3034:
  7586     0E69  0837               	movf	___flmul@b+1,w
  7587     0E6A  00AD               	movwf	__Umul8_16@multiplicand
  7588     0E6B  083C               	movf	___flmul@a+2,w
  7589     0E6C  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7590     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  7591     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  7592     0E73  082E               	movf	?__Umul8_16+1,w
  7593     0E74  00CF               	movwf	___flmul@temp+1
  7594     0E75  082D               	movf	?__Umul8_16,w
  7595     0E76  00CE               	movwf	___flmul@temp
  7596     0E77  084E               	movf	___flmul@temp,w
  7597     0E78  00BE               	movwf	??___flmul
  7598     0E79  084F               	movf	___flmul@temp+1,w
  7599     0E7A  00BF               	movwf	??___flmul+1
  7600     0E7B  01C0               	clrf	??___flmul+2
  7601     0E7C  01C1               	clrf	??___flmul+3
  7602     0E7D  083E               	movf	??___flmul,w
  7603     0E7E  07CA               	addwf	___flmul@prod,f
  7604     0E7F  083F               	movf	??___flmul+1,w
  7605     0E80  1103               	clrz
  7606     0E81  1803               	skipnc
  7607     0E82  3E01               	addlw	1
  7608     0E83  1903               	skipnz
  7609     0E84  2E86               	goto	u3701
  7610     0E85  07CB               	addwf	___flmul@prod+1,f
  7611     0E86                     u3701:
  7612     0E86  0840               	movf	??___flmul+2,w
  7613     0E87  1103               	clrz
  7614     0E88  1803               	skipnc
  7615     0E89  3E01               	addlw	1
  7616     0E8A  1903               	skipnz
  7617     0E8B  2E8D               	goto	u3702
  7618     0E8C  07CC               	addwf	___flmul@prod+2,f
  7619     0E8D                     u3702:
  7620     0E8D  0841               	movf	??___flmul+3,w
  7621     0E8E  1103               	clrz
  7622     0E8F  1803               	skipnc
  7623     0E90  3E01               	addlw	1
  7624     0E91  1903               	skipnz
  7625     0E92  2E94               	goto	u3703
  7626     0E93  07CD               	addwf	___flmul@prod+3,f
  7627     0E94                     u3703:
  7628     0E94                     l3036:
  7629     0E94  0838               	movf	___flmul@b+2,w
  7630     0E95  00AD               	movwf	__Umul8_16@multiplicand
  7631     0E96  083B               	movf	___flmul@a+1,w
  7632     0E97  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7633     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  7634     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  7635     0E9E  082E               	movf	?__Umul8_16+1,w
  7636     0E9F  00CF               	movwf	___flmul@temp+1
  7637     0EA0  082D               	movf	?__Umul8_16,w
  7638     0EA1  00CE               	movwf	___flmul@temp
  7639     0EA2                     l3038:
  7640     0EA2  084E               	movf	___flmul@temp,w
  7641     0EA3  00BE               	movwf	??___flmul
  7642     0EA4  084F               	movf	___flmul@temp+1,w
  7643     0EA5  00BF               	movwf	??___flmul+1
  7644     0EA6  01C0               	clrf	??___flmul+2
  7645     0EA7  01C1               	clrf	??___flmul+3
  7646     0EA8  083E               	movf	??___flmul,w
  7647     0EA9  07CA               	addwf	___flmul@prod,f
  7648     0EAA  083F               	movf	??___flmul+1,w
  7649     0EAB  1103               	clrz
  7650     0EAC  1803               	skipnc
  7651     0EAD  3E01               	addlw	1
  7652     0EAE  1903               	skipnz
  7653     0EAF  2EB1               	goto	u3711
  7654     0EB0  07CB               	addwf	___flmul@prod+1,f
  7655     0EB1                     u3711:
  7656     0EB1  0840               	movf	??___flmul+2,w
  7657     0EB2  1103               	clrz
  7658     0EB3  1803               	skipnc
  7659     0EB4  3E01               	addlw	1
  7660     0EB5  1903               	skipnz
  7661     0EB6  2EB8               	goto	u3712
  7662     0EB7  07CC               	addwf	___flmul@prod+2,f
  7663     0EB8                     u3712:
  7664     0EB8  0841               	movf	??___flmul+3,w
  7665     0EB9  1103               	clrz
  7666     0EBA  1803               	skipnc
  7667     0EBB  3E01               	addlw	1
  7668     0EBC  1903               	skipnz
  7669     0EBD  2EBF               	goto	u3713
  7670     0EBE  07CD               	addwf	___flmul@prod+3,f
  7671     0EBF                     u3713:
  7672     0EBF  0838               	movf	___flmul@b+2,w
  7673     0EC0  00AD               	movwf	__Umul8_16@multiplicand
  7674     0EC1  083C               	movf	___flmul@a+2,w
  7675     0EC2  160A  118A  20FB  120A  158A  	fcall	__Umul8_16
  7676     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  7677     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  7678     0EC9  082E               	movf	?__Umul8_16+1,w
  7679     0ECA  00CF               	movwf	___flmul@temp+1
  7680     0ECB  082D               	movf	?__Umul8_16,w
  7681     0ECC  00CE               	movwf	___flmul@temp
  7682     0ECD                     l3040:
  7683     0ECD  084E               	movf	___flmul@temp,w
  7684     0ECE  00BE               	movwf	??___flmul
  7685     0ECF  084F               	movf	___flmul@temp+1,w
  7686     0ED0  00BF               	movwf	??___flmul+1
  7687     0ED1  01C0               	clrf	??___flmul+2
  7688     0ED2  01C1               	clrf	??___flmul+3
  7689     0ED3  3008               	movlw	8
  7690     0ED4                     u3725:
  7691     0ED4  1003               	clrc
  7692     0ED5  0DBE               	rlf	??___flmul,f
  7693     0ED6  0DBF               	rlf	??___flmul+1,f
  7694     0ED7  0DC0               	rlf	??___flmul+2,f
  7695     0ED8  0DC1               	rlf	??___flmul+3,f
  7696     0ED9                     u3720:
  7697     0ED9  3EFF               	addlw	-1
  7698     0EDA  1D03               	skipz
  7699     0EDB  2ED4               	goto	u3725
  7700     0EDC  083E               	movf	??___flmul,w
  7701     0EDD  07CA               	addwf	___flmul@prod,f
  7702     0EDE  083F               	movf	??___flmul+1,w
  7703     0EDF  1103               	clrz
  7704     0EE0  1803               	skipnc
  7705     0EE1  3E01               	addlw	1
  7706     0EE2  1903               	skipnz
  7707     0EE3  2EE5               	goto	u3731
  7708     0EE4  07CB               	addwf	___flmul@prod+1,f
  7709     0EE5                     u3731:
  7710     0EE5  0840               	movf	??___flmul+2,w
  7711     0EE6  1103               	clrz
  7712     0EE7  1803               	skipnc
  7713     0EE8  3E01               	addlw	1
  7714     0EE9  1903               	skipnz
  7715     0EEA  2EEC               	goto	u3732
  7716     0EEB  07CC               	addwf	___flmul@prod+2,f
  7717     0EEC                     u3732:
  7718     0EEC  0841               	movf	??___flmul+3,w
  7719     0EED  1103               	clrz
  7720     0EEE  1803               	skipnc
  7721     0EEF  3E01               	addlw	1
  7722     0EF0  1903               	skipnz
  7723     0EF1  2EF3               	goto	u3733
  7724     0EF2  07CD               	addwf	___flmul@prod+3,f
  7725     0EF3                     u3733:
  7726     0EF3                     l3042:
  7727     0EF3  0844               	movf	___flmul@grs,w
  7728     0EF4  00BE               	movwf	??___flmul
  7729     0EF5  0845               	movf	___flmul@grs+1,w
  7730     0EF6  00BF               	movwf	??___flmul+1
  7731     0EF7  0846               	movf	___flmul@grs+2,w
  7732     0EF8  00C0               	movwf	??___flmul+2
  7733     0EF9  0847               	movf	___flmul@grs+3,w
  7734     0EFA  00C1               	movwf	??___flmul+3
  7735     0EFB  3018               	movlw	24
  7736     0EFC                     u3745:
  7737     0EFC  1003               	clrc
  7738     0EFD  0CC1               	rrf	??___flmul+3,f
  7739     0EFE  0CC0               	rrf	??___flmul+2,f
  7740     0EFF  0CBF               	rrf	??___flmul+1,f
  7741     0F00  0CBE               	rrf	??___flmul,f
  7742     0F01                     u3740:
  7743     0F01  3EFF               	addlw	-1
  7744     0F02  1D03               	skipz
  7745     0F03  2EFC               	goto	u3745
  7746     0F04  083E               	movf	??___flmul,w
  7747     0F05  07CA               	addwf	___flmul@prod,f
  7748     0F06  083F               	movf	??___flmul+1,w
  7749     0F07  1103               	clrz
  7750     0F08  1803               	skipnc
  7751     0F09  3E01               	addlw	1
  7752     0F0A  1903               	skipnz
  7753     0F0B  2F0D               	goto	u3751
  7754     0F0C  07CB               	addwf	___flmul@prod+1,f
  7755     0F0D                     u3751:
  7756     0F0D  0840               	movf	??___flmul+2,w
  7757     0F0E  1103               	clrz
  7758     0F0F  1803               	skipnc
  7759     0F10  3E01               	addlw	1
  7760     0F11  1903               	skipnz
  7761     0F12  2F14               	goto	u3752
  7762     0F13  07CC               	addwf	___flmul@prod+2,f
  7763     0F14                     u3752:
  7764     0F14  0841               	movf	??___flmul+3,w
  7765     0F15  1103               	clrz
  7766     0F16  1803               	skipnc
  7767     0F17  3E01               	addlw	1
  7768     0F18  1903               	skipnz
  7769     0F19  2F1B               	goto	u3753
  7770     0F1A  07CD               	addwf	___flmul@prod+3,f
  7771     0F1B                     u3753:
  7772     0F1B                     l3044:
  7773     0F1B  3008               	movlw	8
  7774     0F1C  00BE               	movwf	??___flmul
  7775     0F1D                     u3765:
  7776     0F1D  1003               	clrc
  7777     0F1E  0DC4               	rlf	___flmul@grs,f
  7778     0F1F  0DC5               	rlf	___flmul@grs+1,f
  7779     0F20  0DC6               	rlf	___flmul@grs+2,f
  7780     0F21  0DC7               	rlf	___flmul@grs+3,f
  7781     0F22  0BBE               	decfsz	??___flmul,f
  7782     0F23  2F1D               	goto	u3765
  7783     0F24                     l3046:
  7784     0F24  0849               	movf	___flmul@bexp,w
  7785     0F25  0748               	addwf	___flmul@aexp,w
  7786     0F26  00BE               	movwf	??___flmul
  7787     0F27  01BF               	clrf	??___flmul+1
  7788     0F28  0DBF               	rlf	??___flmul+1,f
  7789     0F29  083E               	movf	??___flmul,w
  7790     0F2A  3E82               	addlw	130
  7791     0F2B  00CE               	movwf	___flmul@temp
  7792     0F2C  083F               	movf	??___flmul+1,w
  7793     0F2D  1803               	skipnc
  7794     0F2E  3E01               	addlw	1
  7795     0F2F  3EFF               	addlw	255
  7796     0F30  00CF               	movwf	___flmul@temp+1
  7797     0F31  2F4F               	goto	l3058
  7798     0F32                     l3048:
  7799     0F32  3001               	movlw	1
  7800     0F33  00BE               	movwf	??___flmul
  7801     0F34                     u3775:
  7802     0F34  1003               	clrc
  7803     0F35  0DCA               	rlf	___flmul@prod,f
  7804     0F36  0DCB               	rlf	___flmul@prod+1,f
  7805     0F37  0DCC               	rlf	___flmul@prod+2,f
  7806     0F38  0DCD               	rlf	___flmul@prod+3,f
  7807     0F39  0BBE               	decfsz	??___flmul,f
  7808     0F3A  2F34               	goto	u3775
  7809     0F3B                     l3050:
  7810     0F3B  1FC7               	btfss	___flmul@grs+3,7
  7811     0F3C  2F3E               	goto	u3781
  7812     0F3D  2F3F               	goto	u3780
  7813     0F3E                     u3781:
  7814     0F3E  2F40               	goto	l3054
  7815     0F3F                     u3780:
  7816     0F3F                     l3052:
  7817     0F3F  144A               	bsf	___flmul@prod,0
  7818     0F40                     l3054:
  7819     0F40  3001               	movlw	1
  7820     0F41  00BE               	movwf	??___flmul
  7821     0F42                     u3795:
  7822     0F42  1003               	clrc
  7823     0F43  0DC4               	rlf	___flmul@grs,f
  7824     0F44  0DC5               	rlf	___flmul@grs+1,f
  7825     0F45  0DC6               	rlf	___flmul@grs+2,f
  7826     0F46  0DC7               	rlf	___flmul@grs+3,f
  7827     0F47  0BBE               	decfsz	??___flmul,f
  7828     0F48  2F42               	goto	u3795
  7829     0F49                     l3056:
  7830     0F49  30FF               	movlw	255
  7831     0F4A  07CE               	addwf	___flmul@temp,f
  7832     0F4B  1803               	skipnc
  7833     0F4C  0ACF               	incf	___flmul@temp+1,f
  7834     0F4D  30FF               	movlw	255
  7835     0F4E  07CF               	addwf	___flmul@temp+1,f
  7836     0F4F                     l3058:
  7837     0F4F  1FCC               	btfss	___flmul@prod+2,7
  7838     0F50  2F52               	goto	u3801
  7839     0F51  2F53               	goto	u3800
  7840     0F52                     u3801:
  7841     0F52  2F32               	goto	l3048
  7842     0F53                     u3800:
  7843     0F53                     l3060:
  7844     0F53  01C8               	clrf	___flmul@aexp
  7845     0F54                     l3062:
  7846     0F54  1FC7               	btfss	___flmul@grs+3,7
  7847     0F55  2F57               	goto	u3811
  7848     0F56  2F58               	goto	u3810
  7849     0F57                     u3811:
  7850     0F57  2F74               	goto	l3070
  7851     0F58                     u3810:
  7852     0F58                     l3064:
  7853     0F58  30FF               	movlw	255
  7854     0F59  0544               	andwf	___flmul@grs,w
  7855     0F5A  00BE               	movwf	??___flmul
  7856     0F5B  30FF               	movlw	255
  7857     0F5C  0545               	andwf	___flmul@grs+1,w
  7858     0F5D  00BF               	movwf	??___flmul+1
  7859     0F5E  30FF               	movlw	255
  7860     0F5F  0546               	andwf	___flmul@grs+2,w
  7861     0F60  00C0               	movwf	??___flmul+2
  7862     0F61  307F               	movlw	127
  7863     0F62  0547               	andwf	___flmul@grs+3,w
  7864     0F63  00C1               	movwf	??___flmul+3
  7865     0F64  0841               	movf	??___flmul+3,w
  7866     0F65  0440               	iorwf	??___flmul+2,w
  7867     0F66  043F               	iorwf	??___flmul+1,w
  7868     0F67  043E               	iorwf	??___flmul,w
  7869     0F68  1903               	skipnz
  7870     0F69  2F6B               	goto	u3821
  7871     0F6A  2F6C               	goto	u3820
  7872     0F6B                     u3821:
  7873     0F6B  2F6F               	goto	l865
  7874     0F6C                     u3820:
  7875     0F6C                     l3066:
  7876     0F6C  01C8               	clrf	___flmul@aexp
  7877     0F6D  0AC8               	incf	___flmul@aexp,f
  7878     0F6E  2F74               	goto	l3070
  7879     0F6F                     l865:
  7880     0F6F  1C4A               	btfss	___flmul@prod,0
  7881     0F70  2F72               	goto	u3831
  7882     0F71  2F73               	goto	u3830
  7883     0F72                     u3831:
  7884     0F72  2F74               	goto	l3070
  7885     0F73                     u3830:
  7886     0F73  2F6C               	goto	l3066
  7887     0F74                     l3070:
  7888     0F74  0848               	movf	___flmul@aexp,w
  7889     0F75  1903               	btfsc	3,2
  7890     0F76  2F78               	goto	u3841
  7891     0F77  2F79               	goto	u3840
  7892     0F78                     u3841:
  7893     0F78  2FAA               	goto	l3080
  7894     0F79                     u3840:
  7895     0F79                     l3072:
  7896     0F79  3001               	movlw	1
  7897     0F7A  07CA               	addwf	___flmul@prod,f
  7898     0F7B  3000               	movlw	0
  7899     0F7C  1803               	skipnc
  7900     0F7D  3001               	movlw	1
  7901     0F7E  07CB               	addwf	___flmul@prod+1,f
  7902     0F7F  3000               	movlw	0
  7903     0F80  1803               	skipnc
  7904     0F81  3001               	movlw	1
  7905     0F82  07CC               	addwf	___flmul@prod+2,f
  7906     0F83  3000               	movlw	0
  7907     0F84  1803               	skipnc
  7908     0F85  3001               	movlw	1
  7909     0F86  07CD               	addwf	___flmul@prod+3,f
  7910     0F87                     l3074:
  7911     0F87  1C4D               	btfss	___flmul@prod+3,0
  7912     0F88  2F8A               	goto	u3851
  7913     0F89  2F8B               	goto	u3850
  7914     0F8A                     u3851:
  7915     0F8A  2FAA               	goto	l3080
  7916     0F8B                     u3850:
  7917     0F8B                     l3076:
  7918     0F8B  084A               	movf	___flmul@prod,w
  7919     0F8C  00BE               	movwf	??___flmul
  7920     0F8D  084B               	movf	___flmul@prod+1,w
  7921     0F8E  00BF               	movwf	??___flmul+1
  7922     0F8F  084C               	movf	___flmul@prod+2,w
  7923     0F90  00C0               	movwf	??___flmul+2
  7924     0F91  084D               	movf	___flmul@prod+3,w
  7925     0F92  00C1               	movwf	??___flmul+3
  7926     0F93  3001               	movlw	1
  7927     0F94  00C2               	movwf	??___flmul+4
  7928     0F95                     u3865:
  7929     0F95  0D41               	rlf	??___flmul+3,w
  7930     0F96  0CC1               	rrf	??___flmul+3,f
  7931     0F97  0CC0               	rrf	??___flmul+2,f
  7932     0F98  0CBF               	rrf	??___flmul+1,f
  7933     0F99  0CBE               	rrf	??___flmul,f
  7934     0F9A                     u3860:
  7935     0F9A  0BC2               	decfsz	??___flmul+4,f
  7936     0F9B  2F95               	goto	u3865
  7937     0F9C  0841               	movf	??___flmul+3,w
  7938     0F9D  00CD               	movwf	___flmul@prod+3
  7939     0F9E  0840               	movf	??___flmul+2,w
  7940     0F9F  00CC               	movwf	___flmul@prod+2
  7941     0FA0  083F               	movf	??___flmul+1,w
  7942     0FA1  00CB               	movwf	___flmul@prod+1
  7943     0FA2  083E               	movf	??___flmul,w
  7944     0FA3  00CA               	movwf	___flmul@prod
  7945     0FA4                     l3078:
  7946     0FA4  3001               	movlw	1
  7947     0FA5  07CE               	addwf	___flmul@temp,f
  7948     0FA6  1803               	skipnc
  7949     0FA7  0ACF               	incf	___flmul@temp+1,f
  7950     0FA8  3000               	movlw	0
  7951     0FA9  07CF               	addwf	___flmul@temp+1,f
  7952     0FAA                     l3080:
  7953     0FAA  084F               	movf	___flmul@temp+1,w
  7954     0FAB  3A80               	xorlw	128
  7955     0FAC  00FF               	movwf	btemp+1
  7956     0FAD  3080               	movlw	128
  7957     0FAE  027F               	subwf	btemp+1,w
  7958     0FAF  1D03               	skipz
  7959     0FB0  2FB3               	goto	u3875
  7960     0FB1  30FF               	movlw	255
  7961     0FB2  024E               	subwf	___flmul@temp,w
  7962     0FB3                     u3875:
  7963     0FB3  1C03               	skipc
  7964     0FB4  2FB6               	goto	u3871
  7965     0FB5  2FB7               	goto	u3870
  7966     0FB6                     u3871:
  7967     0FB6  2FC2               	goto	l3084
  7968     0FB7                     u3870:
  7969     0FB7                     l3082:
  7970     0FB7  307F               	movlw	127
  7971     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  7972     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  7973     0FBA  00CD               	movwf	___flmul@prod+3
  7974     0FBB  3080               	movlw	128
  7975     0FBC  00CC               	movwf	___flmul@prod+2
  7976     0FBD  3000               	movlw	0
  7977     0FBE  00CB               	movwf	___flmul@prod+1
  7978     0FBF  3000               	movlw	0
  7979     0FC0  00CA               	movwf	___flmul@prod
  7980     0FC1  2FF3               	goto	l871
  7981     0FC2                     l3084:
  7982     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  7983     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  7984     0FC4  084F               	movf	___flmul@temp+1,w
  7985     0FC5  3A80               	xorlw	128
  7986     0FC6  00FF               	movwf	btemp+1
  7987     0FC7  3080               	movlw	128
  7988     0FC8  027F               	subwf	btemp+1,w
  7989     0FC9  1D03               	skipz
  7990     0FCA  2FCD               	goto	u3885
  7991     0FCB  3001               	movlw	1
  7992     0FCC  024E               	subwf	___flmul@temp,w
  7993     0FCD                     u3885:
  7994     0FCD  1803               	skipnc
  7995     0FCE  2FD0               	goto	u3881
  7996     0FCF  2FD1               	goto	u3880
  7997     0FD0                     u3881:
  7998     0FD0  2FDD               	goto	l3090
  7999     0FD1                     u3880:
  8000     0FD1                     l3086:
  8001     0FD1  3000               	movlw	0
  8002     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  8003     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  8004     0FD4  00CD               	movwf	___flmul@prod+3
  8005     0FD5  3000               	movlw	0
  8006     0FD6  00CC               	movwf	___flmul@prod+2
  8007     0FD7  3000               	movlw	0
  8008     0FD8  00CB               	movwf	___flmul@prod+1
  8009     0FD9  3000               	movlw	0
  8010     0FDA  00CA               	movwf	___flmul@prod
  8011     0FDB                     l3088:
  8012     0FDB  01C3               	clrf	___flmul@sign
  8013     0FDC  2FF3               	goto	l871
  8014     0FDD                     l3090:
  8015     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  8016     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  8017     0FDF  084E               	movf	___flmul@temp,w
  8018     0FE0  00C9               	movwf	___flmul@bexp
  8019     0FE1  30FF               	movlw	255
  8020     0FE2  05CA               	andwf	___flmul@prod,f
  8021     0FE3  30FF               	movlw	255
  8022     0FE4  05CB               	andwf	___flmul@prod+1,f
  8023     0FE5  307F               	movlw	127
  8024     0FE6  05CC               	andwf	___flmul@prod+2,f
  8025     0FE7  3000               	movlw	0
  8026     0FE8  05CD               	andwf	___flmul@prod+3,f
  8027     0FE9                     l3092:
  8028     0FE9  1C49               	btfss	___flmul@bexp,0
  8029     0FEA  2FEC               	goto	u3891
  8030     0FEB  2FED               	goto	u3890
  8031     0FEC                     u3891:
  8032     0FEC  2FEE               	goto	l3096
  8033     0FED                     u3890:
  8034     0FED                     l3094:
  8035     0FED  17CC               	bsf	___flmul@prod+2,7
  8036     0FEE                     l3096:
  8037     0FEE  0849               	movf	___flmul@bexp,w
  8038     0FEF  00BE               	movwf	??___flmul
  8039     0FF0  1003               	clrc
  8040     0FF1  0C3E               	rrf	??___flmul,w
  8041     0FF2  00CD               	movwf	___flmul@prod+3
  8042     0FF3                     l871:
  8043     0FF3  0843               	movf	___flmul@sign,w
  8044     0FF4  00BE               	movwf	??___flmul
  8045     0FF5  083E               	movf	??___flmul,w
  8046     0FF6  04CD               	iorwf	___flmul@prod+3,f
  8047     0FF7                     l3098:
  8048     0FF7  084D               	movf	___flmul@prod+3,w
  8049     0FF8  00B9               	movwf	?___flmul+3
  8050     0FF9  084C               	movf	___flmul@prod+2,w
  8051     0FFA  00B8               	movwf	?___flmul+2
  8052     0FFB  084B               	movf	___flmul@prod+1,w
  8053     0FFC  00B7               	movwf	?___flmul+1
  8054     0FFD  084A               	movf	___flmul@prod,w
  8055     0FFE  00B6               	movwf	?___flmul
  8056     0FFF                     l859:
  8057     0FFF  0008               	return
  8058     1000                     __end_of___flmul:
  8059                           
  8060                           	psect	text23
  8061     10FB                     __ptext23:	
  8062 ;; *************** function __Umul8_16 *****************
  8063 ;; Defined at:
  8064 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  multiplier      1    wreg     unsigned char 
  8067 ;;  multiplicand    1   13[BANK0 ] unsigned char 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  multiplier      1   21[BANK0 ] unsigned char 
  8070 ;;  word_mpld       2   19[BANK0 ] unsigned int 
  8071 ;;  product         2   17[BANK0 ] unsigned int 
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  2   13[BANK0 ] unsigned int 
  8074 ;; Registers used:
  8075 ;;		wreg, status,2, status,0
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8081 ;;      Params:         0       2       0       0       0
  8082 ;;      Locals:         0       5       0       0       0
  8083 ;;      Temps:          0       2       0       0       0
  8084 ;;      Totals:         0       9       0       0       0
  8085 ;;Total ram usage:        9 bytes
  8086 ;; Hardware stack levels used: 1
  8087 ;; Hardware stack levels required when called: 3
  8088 ;; This function calls:
  8089 ;;		Nothing
  8090 ;; This function is called by:
  8091 ;;		___flmul
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095     10FB                     __Umul8_16:	
  8096                           ;psect for function __Umul8_16
  8097                           
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8101                           ;__Umul8_16@multiplier stored from wreg
  8102     10FB  1283               	bcf	3,5	;RP0=0, select bank0
  8103     10FC  1303               	bcf	3,6	;RP1=0, select bank0
  8104     10FD  00B5               	movwf	__Umul8_16@multiplier
  8105     10FE                     l2760:
  8106     10FE  01B1               	clrf	__Umul8_16@product
  8107     10FF  01B2               	clrf	__Umul8_16@product+1
  8108     1100                     l2762:
  8109     1100  082D               	movf	__Umul8_16@multiplicand,w
  8110     1101  00AF               	movwf	??__Umul8_16
  8111     1102  01B0               	clrf	??__Umul8_16+1
  8112     1103  082F               	movf	??__Umul8_16,w
  8113     1104  00B3               	movwf	__Umul8_16@word_mpld
  8114     1105  0830               	movf	??__Umul8_16+1,w
  8115     1106  00B4               	movwf	__Umul8_16@word_mpld+1
  8116     1107                     l2764:
  8117     1107  1C35               	btfss	__Umul8_16@multiplier,0
  8118     1108  290A               	goto	u3131
  8119     1109  290B               	goto	u3130
  8120     110A                     u3131:
  8121     110A  2911               	goto	l878
  8122     110B                     u3130:
  8123     110B                     l2766:
  8124     110B  0833               	movf	__Umul8_16@word_mpld,w
  8125     110C  07B1               	addwf	__Umul8_16@product,f
  8126     110D  1803               	skipnc
  8127     110E  0AB2               	incf	__Umul8_16@product+1,f
  8128     110F  0834               	movf	__Umul8_16@word_mpld+1,w
  8129     1110  07B2               	addwf	__Umul8_16@product+1,f
  8130     1111                     l878:
  8131     1111  3001               	movlw	1
  8132     1112                     u3145:
  8133     1112  1003               	clrc
  8134     1113  0DB3               	rlf	__Umul8_16@word_mpld,f
  8135     1114  0DB4               	rlf	__Umul8_16@word_mpld+1,f
  8136     1115  3EFF               	addlw	-1
  8137     1116  1D03               	skipz
  8138     1117  2912               	goto	u3145
  8139     1118  1003               	clrc
  8140     1119  0CB5               	rrf	__Umul8_16@multiplier,f
  8141     111A                     l2768:
  8142     111A  0835               	movf	__Umul8_16@multiplier,w
  8143     111B  1D03               	btfss	3,2
  8144     111C  291E               	goto	u3151
  8145     111D  291F               	goto	u3150
  8146     111E                     u3151:
  8147     111E  2907               	goto	l2764
  8148     111F                     u3150:
  8149     111F                     l2770:
  8150     111F  0832               	movf	__Umul8_16@product+1,w
  8151     1120  00AE               	movwf	?__Umul8_16+1
  8152     1121  0831               	movf	__Umul8_16@product,w
  8153     1122  00AD               	movwf	?__Umul8_16
  8154     1123                     l880:
  8155     1123  0008               	return
  8156     1124                     __end_of__Umul8_16:
  8157                           
  8158                           	psect	text24
  8159     0816                     __ptext24:	
  8160 ;; *************** function ___flge *****************
  8161 ;; Defined at:
  8162 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  ff1             4   13[BANK0 ] unsigned int 
  8165 ;;  ff2             4   17[BANK0 ] unsigned int 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;		None               void
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8177 ;;      Params:         0       8       0       0       0
  8178 ;;      Locals:         0       0       0       0       0
  8179 ;;      Temps:          0       4       0       0       0
  8180 ;;      Totals:         0      12       0       0       0
  8181 ;;Total ram usage:       12 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; Hardware stack levels required when called: 3
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_floatToStr
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191     0816                     ___flge:	
  8192                           ;psect for function ___flge
  8193                           
  8194     0816                     l2892:	
  8195                           ;incstack = 0
  8196                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8197                           
  8198     0816  3000               	movlw	0
  8199     0817  1283               	bcf	3,5	;RP0=0, select bank0
  8200     0818  1303               	bcf	3,6	;RP1=0, select bank0
  8201     0819  052D               	andwf	___flge@ff1,w
  8202     081A  00B5               	movwf	??___flge
  8203     081B  3000               	movlw	0
  8204     081C  052E               	andwf	___flge@ff1+1,w
  8205     081D  00B6               	movwf	??___flge+1
  8206     081E  3080               	movlw	128
  8207     081F  052F               	andwf	___flge@ff1+2,w
  8208     0820  00B7               	movwf	??___flge+2
  8209     0821  307F               	movlw	127
  8210     0822  0530               	andwf	___flge@ff1+3,w
  8211     0823  00B8               	movwf	??___flge+3
  8212     0824  0838               	movf	??___flge+3,w
  8213     0825  0437               	iorwf	??___flge+2,w
  8214     0826  0436               	iorwf	??___flge+1,w
  8215     0827  0435               	iorwf	??___flge,w
  8216     0828  1D03               	skipz
  8217     0829  282B               	goto	u3351
  8218     082A  282C               	goto	u3350
  8219     082B                     u3351:
  8220     082B  2834               	goto	l644
  8221     082C                     u3350:
  8222     082C                     l2894:
  8223     082C  3000               	movlw	0
  8224     082D  00B0               	movwf	___flge@ff1+3
  8225     082E  3000               	movlw	0
  8226     082F  00AF               	movwf	___flge@ff1+2
  8227     0830  3000               	movlw	0
  8228     0831  00AE               	movwf	___flge@ff1+1
  8229     0832  3000               	movlw	0
  8230     0833  00AD               	movwf	___flge@ff1
  8231     0834                     l644:
  8232     0834  3000               	movlw	0
  8233     0835  0531               	andwf	___flge@ff2,w
  8234     0836  00B5               	movwf	??___flge
  8235     0837  3000               	movlw	0
  8236     0838  0532               	andwf	___flge@ff2+1,w
  8237     0839  00B6               	movwf	??___flge+1
  8238     083A  3080               	movlw	128
  8239     083B  0533               	andwf	___flge@ff2+2,w
  8240     083C  00B7               	movwf	??___flge+2
  8241     083D  307F               	movlw	127
  8242     083E  0534               	andwf	___flge@ff2+3,w
  8243     083F  00B8               	movwf	??___flge+3
  8244     0840  0838               	movf	??___flge+3,w
  8245     0841  0437               	iorwf	??___flge+2,w
  8246     0842  0436               	iorwf	??___flge+1,w
  8247     0843  0435               	iorwf	??___flge,w
  8248     0844  1D03               	skipz
  8249     0845  2847               	goto	u3361
  8250     0846  2848               	goto	u3360
  8251     0847                     u3361:
  8252     0847  2850               	goto	l2898
  8253     0848                     u3360:
  8254     0848                     l2896:
  8255     0848  3000               	movlw	0
  8256     0849  00B4               	movwf	___flge@ff2+3
  8257     084A  3000               	movlw	0
  8258     084B  00B3               	movwf	___flge@ff2+2
  8259     084C  3000               	movlw	0
  8260     084D  00B2               	movwf	___flge@ff2+1
  8261     084E  3000               	movlw	0
  8262     084F  00B1               	movwf	___flge@ff2
  8263     0850                     l2898:
  8264     0850  1FB0               	btfss	___flge@ff1+3,7
  8265     0851  2853               	goto	u3371
  8266     0852  2854               	goto	u3370
  8267     0853                     u3371:
  8268     0853  2878               	goto	l2902
  8269     0854                     u3370:
  8270     0854                     l2900:
  8271     0854  3000               	movlw	0
  8272     0855  00B5               	movwf	??___flge
  8273     0856  3000               	movlw	0
  8274     0857  00B6               	movwf	??___flge+1
  8275     0858  3000               	movlw	0
  8276     0859  00B7               	movwf	??___flge+2
  8277     085A  3080               	movlw	128
  8278     085B  00B8               	movwf	??___flge+3
  8279     085C  082D               	movf	___flge@ff1,w
  8280     085D  02B5               	subwf	??___flge,f
  8281     085E  082E               	movf	___flge@ff1+1,w
  8282     085F  1C03               	skipc
  8283     0860  0F2E               	incfsz	___flge@ff1+1,w
  8284     0861  2863               	goto	u3381
  8285     0862  2864               	goto	u3382
  8286     0863                     u3381:
  8287     0863  02B6               	subwf	??___flge+1,f
  8288     0864                     u3382:
  8289     0864  082F               	movf	___flge@ff1+2,w
  8290     0865  1C03               	skipc
  8291     0866  0F2F               	incfsz	___flge@ff1+2,w
  8292     0867  2869               	goto	u3383
  8293     0868  286A               	goto	u3384
  8294     0869                     u3383:
  8295     0869  02B7               	subwf	??___flge+2,f
  8296     086A                     u3384:
  8297     086A  0830               	movf	___flge@ff1+3,w
  8298     086B  1C03               	skipc
  8299     086C  0F30               	incfsz	___flge@ff1+3,w
  8300     086D  286F               	goto	u3385
  8301     086E  2870               	goto	u3386
  8302     086F                     u3385:
  8303     086F  02B8               	subwf	??___flge+3,f
  8304     0870                     u3386:
  8305     0870  0838               	movf	??___flge+3,w
  8306     0871  00B0               	movwf	___flge@ff1+3
  8307     0872  0837               	movf	??___flge+2,w
  8308     0873  00AF               	movwf	___flge@ff1+2
  8309     0874  0836               	movf	??___flge+1,w
  8310     0875  00AE               	movwf	___flge@ff1+1
  8311     0876  0835               	movf	??___flge,w
  8312     0877  00AD               	movwf	___flge@ff1
  8313     0878                     l2902:
  8314     0878  1FB4               	btfss	___flge@ff2+3,7
  8315     0879  287B               	goto	u3391
  8316     087A  287C               	goto	u3390
  8317     087B                     u3391:
  8318     087B  28A0               	goto	l647
  8319     087C                     u3390:
  8320     087C                     l2904:
  8321     087C  3000               	movlw	0
  8322     087D  00B5               	movwf	??___flge
  8323     087E  3000               	movlw	0
  8324     087F  00B6               	movwf	??___flge+1
  8325     0880  3000               	movlw	0
  8326     0881  00B7               	movwf	??___flge+2
  8327     0882  3080               	movlw	128
  8328     0883  00B8               	movwf	??___flge+3
  8329     0884  0831               	movf	___flge@ff2,w
  8330     0885  02B5               	subwf	??___flge,f
  8331     0886  0832               	movf	___flge@ff2+1,w
  8332     0887  1C03               	skipc
  8333     0888  0F32               	incfsz	___flge@ff2+1,w
  8334     0889  288B               	goto	u3401
  8335     088A  288C               	goto	u3402
  8336     088B                     u3401:
  8337     088B  02B6               	subwf	??___flge+1,f
  8338     088C                     u3402:
  8339     088C  0833               	movf	___flge@ff2+2,w
  8340     088D  1C03               	skipc
  8341     088E  0F33               	incfsz	___flge@ff2+2,w
  8342     088F  2891               	goto	u3403
  8343     0890  2892               	goto	u3404
  8344     0891                     u3403:
  8345     0891  02B7               	subwf	??___flge+2,f
  8346     0892                     u3404:
  8347     0892  0834               	movf	___flge@ff2+3,w
  8348     0893  1C03               	skipc
  8349     0894  0F34               	incfsz	___flge@ff2+3,w
  8350     0895  2897               	goto	u3405
  8351     0896  2898               	goto	u3406
  8352     0897                     u3405:
  8353     0897  02B8               	subwf	??___flge+3,f
  8354     0898                     u3406:
  8355     0898  0838               	movf	??___flge+3,w
  8356     0899  00B4               	movwf	___flge@ff2+3
  8357     089A  0837               	movf	??___flge+2,w
  8358     089B  00B3               	movwf	___flge@ff2+2
  8359     089C  0836               	movf	??___flge+1,w
  8360     089D  00B2               	movwf	___flge@ff2+1
  8361     089E  0835               	movf	??___flge,w
  8362     089F  00B1               	movwf	___flge@ff2
  8363     08A0                     l647:
  8364     08A0  3080               	movlw	128
  8365     08A1  06B0               	xorwf	___flge@ff1+3,f
  8366     08A2  3080               	movlw	128
  8367     08A3  06B4               	xorwf	___flge@ff2+3,f
  8368     08A4  0834               	movf	___flge@ff2+3,w
  8369     08A5  0230               	subwf	___flge@ff1+3,w
  8370     08A6  1D03               	skipz
  8371     08A7  28B2               	goto	u3415
  8372     08A8  0833               	movf	___flge@ff2+2,w
  8373     08A9  022F               	subwf	___flge@ff1+2,w
  8374     08AA  1D03               	skipz
  8375     08AB  28B2               	goto	u3415
  8376     08AC  0832               	movf	___flge@ff2+1,w
  8377     08AD  022E               	subwf	___flge@ff1+1,w
  8378     08AE  1D03               	skipz
  8379     08AF  28B2               	goto	u3415
  8380     08B0  0831               	movf	___flge@ff2,w
  8381     08B1  022D               	subwf	___flge@ff1,w
  8382     08B2                     u3415:
  8383     08B2  1803               	skipnc
  8384     08B3  28B5               	goto	u3411
  8385     08B4  28B6               	goto	u3410
  8386     08B5                     u3411:
  8387     08B5  28B8               	goto	l2908
  8388     08B6                     u3410:
  8389     08B6                     l2906:
  8390     08B6  1003               	clrc
  8391     08B7  28B9               	goto	l648
  8392     08B8                     l2908:
  8393     08B8  1403               	setc
  8394     08B9                     l648:
  8395     08B9  0008               	return
  8396     08BA                     __end_of___flge:
  8397                           
  8398                           	psect	text25
  8399     1491                     __ptext25:	
  8400 ;; *************** function _d2b *****************
  8401 ;; Defined at:
  8402 ;;		line 403 in file "masterProyecto.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  to_convert      2   22[BANK0 ] int 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  digit           2   24[BANK0 ] unsigned int 
  8407 ;;  multiplier      2   28[BANK0 ] unsigned int 
  8408 ;;  bcd             2   26[BANK0 ] unsigned int 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  2   22[BANK0 ] int 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8418 ;;      Params:         0       2       0       0       0
  8419 ;;      Locals:         0       6       0       0       0
  8420 ;;      Temps:          0       0       0       0       0
  8421 ;;      Totals:         0       8       0       0       0
  8422 ;;Total ram usage:        8 bytes
  8423 ;; Hardware stack levels used: 1
  8424 ;; Hardware stack levels required when called: 4
  8425 ;; This function calls:
  8426 ;;		___awdiv
  8427 ;;		___awmod
  8428 ;;		___wmul
  8429 ;; This function is called by:
  8430 ;;		_main
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434     1491                     _d2b:	
  8435                           ;psect for function _d2b
  8436                           
  8437     1491                     l3258:	
  8438                           ;incstack = 0
  8439                           ; Regs used in _d2b: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8440                           
  8441                           
  8442                           ;masterProyecto.c: 404:     unsigned int bcd=0;
  8443     1491  1283               	bcf	3,5	;RP0=0, select bank0
  8444     1492  1303               	bcf	3,6	;RP1=0, select bank0
  8445     1493  01BA               	clrf	d2b@bcd
  8446     1494  01BB               	clrf	d2b@bcd+1
  8447     1495                     l3260:
  8448                           
  8449                           ;masterProyecto.c: 405:     unsigned int multiplier = 1;
  8450     1495  3001               	movlw	1
  8451     1496  00BC               	movwf	d2b@multiplier
  8452     1497  3000               	movlw	0
  8453     1498  00BD               	movwf	d2b@multiplier+1
  8454                           
  8455                           ;masterProyecto.c: 407:     while (to_convert >0){
  8456     1499  2CDE               	goto	l3268
  8457     149A                     l3262:
  8458                           
  8459                           ;masterProyecto.c: 408:         unsigned int digit = to_convert % 10;
  8460     149A  300A               	movlw	10
  8461     149B  1283               	bcf	3,5	;RP0=0, select bank0
  8462     149C  1303               	bcf	3,6	;RP1=0, select bank0
  8463     149D  00AD               	movwf	___awmod@divisor
  8464     149E  3000               	movlw	0
  8465     149F  00AE               	movwf	___awmod@divisor+1
  8466     14A0  0837               	movf	d2b@to_convert+1,w
  8467     14A1  00B0               	movwf	___awmod@dividend+1
  8468     14A2  0836               	movf	d2b@to_convert,w
  8469     14A3  00AF               	movwf	___awmod@dividend
  8470     14A4  160A  118A  23D9  160A  118A  	fcall	___awmod
  8471     14A9  1283               	bcf	3,5	;RP0=0, select bank0
  8472     14AA  1303               	bcf	3,6	;RP1=0, select bank0
  8473     14AB  082E               	movf	?___awmod+1,w
  8474     14AC  00B9               	movwf	d2b@digit+1
  8475     14AD  082D               	movf	?___awmod,w
  8476     14AE  00B8               	movwf	d2b@digit
  8477                           
  8478                           ;masterProyecto.c: 409:         bcd += digit * multiplier;
  8479     14AF  0839               	movf	d2b@digit+1,w
  8480     14B0  00AE               	movwf	___wmul@multiplier+1
  8481     14B1  0838               	movf	d2b@digit,w
  8482     14B2  00AD               	movwf	___wmul@multiplier
  8483     14B3  083D               	movf	d2b@multiplier+1,w
  8484     14B4  00B0               	movwf	___wmul@multiplicand+1
  8485     14B5  083C               	movf	d2b@multiplier,w
  8486     14B6  00AF               	movwf	___wmul@multiplicand
  8487     14B7  160A  118A  20AB  160A  118A  	fcall	___wmul
  8488     14BC  1283               	bcf	3,5	;RP0=0, select bank0
  8489     14BD  1303               	bcf	3,6	;RP1=0, select bank0
  8490     14BE  082D               	movf	?___wmul,w
  8491     14BF  07BA               	addwf	d2b@bcd,f
  8492     14C0  1803               	skipnc
  8493     14C1  0ABB               	incf	d2b@bcd+1,f
  8494     14C2  082E               	movf	?___wmul+1,w
  8495     14C3  07BB               	addwf	d2b@bcd+1,f
  8496     14C4                     l3264:
  8497                           
  8498                           ;masterProyecto.c: 410:         multiplier *= 16;
  8499     14C4  3004               	movlw	4
  8500     14C5                     u4305:
  8501     14C5  1003               	clrc
  8502     14C6  0DBC               	rlf	d2b@multiplier,f
  8503     14C7  0DBD               	rlf	d2b@multiplier+1,f
  8504     14C8  3EFF               	addlw	-1
  8505     14C9  1D03               	skipz
  8506     14CA  2CC5               	goto	u4305
  8507     14CB                     l3266:
  8508                           
  8509                           ;masterProyecto.c: 411:         to_convert /= 10;
  8510     14CB  300A               	movlw	10
  8511     14CC  00AD               	movwf	___awdiv@divisor
  8512     14CD  3000               	movlw	0
  8513     14CE  00AE               	movwf	___awdiv@divisor+1
  8514     14CF  0837               	movf	d2b@to_convert+1,w
  8515     14D0  00B0               	movwf	___awdiv@dividend+1
  8516     14D1  0836               	movf	d2b@to_convert,w
  8517     14D2  00AF               	movwf	___awdiv@dividend
  8518     14D3  160A  118A  2623  160A  118A  	fcall	___awdiv
  8519     14D8  1283               	bcf	3,5	;RP0=0, select bank0
  8520     14D9  1303               	bcf	3,6	;RP1=0, select bank0
  8521     14DA  082E               	movf	?___awdiv+1,w
  8522     14DB  00B7               	movwf	d2b@to_convert+1
  8523     14DC  082D               	movf	?___awdiv,w
  8524     14DD  00B6               	movwf	d2b@to_convert
  8525     14DE                     l3268:
  8526                           
  8527                           ;masterProyecto.c: 407:     while (to_convert >0){
  8528     14DE  0837               	movf	d2b@to_convert+1,w
  8529     14DF  3A80               	xorlw	128
  8530     14E0  00FF               	movwf	btemp+1
  8531     14E1  3080               	movlw	128
  8532     14E2  027F               	subwf	btemp+1,w
  8533     14E3  1D03               	skipz
  8534     14E4  2CE7               	goto	u4315
  8535     14E5  3001               	movlw	1
  8536     14E6  0236               	subwf	d2b@to_convert,w
  8537     14E7                     u4315:
  8538     14E7  1803               	skipnc
  8539     14E8  2CEA               	goto	u4311
  8540     14E9  2CEB               	goto	u4310
  8541     14EA                     u4311:
  8542     14EA  2C9A               	goto	l3262
  8543     14EB                     u4310:
  8544     14EB                     l3270:
  8545                           
  8546                           ;masterProyecto.c: 413:    return bcd;
  8547     14EB  1283               	bcf	3,5	;RP0=0, select bank0
  8548     14EC  1303               	bcf	3,6	;RP1=0, select bank0
  8549     14ED  083B               	movf	d2b@bcd+1,w
  8550     14EE  00B7               	movwf	?_d2b+1
  8551     14EF  083A               	movf	d2b@bcd,w
  8552     14F0  00B6               	movwf	?_d2b
  8553     14F1                     l178:
  8554     14F1  0008               	return
  8555     14F2                     __end_of_d2b:
  8556                           
  8557                           	psect	text26
  8558     13D9                     __ptext26:	
  8559 ;; *************** function ___awmod *****************
  8560 ;; Defined at:
  8561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  divisor         2   13[BANK0 ] int 
  8564 ;;  dividend        2   15[BANK0 ] int 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  sign            1   19[BANK0 ] unsigned char 
  8567 ;;  counter         1   18[BANK0 ] unsigned char 
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  2   13[BANK0 ] int 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8577 ;;      Params:         0       4       0       0       0
  8578 ;;      Locals:         0       2       0       0       0
  8579 ;;      Temps:          0       1       0       0       0
  8580 ;;      Totals:         0       7       0       0       0
  8581 ;;Total ram usage:        7 bytes
  8582 ;; Hardware stack levels used: 1
  8583 ;; Hardware stack levels required when called: 3
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_d2b
  8588 ;;		_uint8ToString
  8589 ;;		_intToStr
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593     13D9                     ___awmod:	
  8594                           ;psect for function ___awmod
  8595                           
  8596     13D9                     l2528:	
  8597                           ;incstack = 0
  8598                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8599                           
  8600     13D9  1283               	bcf	3,5	;RP0=0, select bank0
  8601     13DA  1303               	bcf	3,6	;RP1=0, select bank0
  8602     13DB  01B3               	clrf	___awmod@sign
  8603     13DC                     l2530:
  8604     13DC  1FB0               	btfss	___awmod@dividend+1,7
  8605     13DD  2BDF               	goto	u2581
  8606     13DE  2BE0               	goto	u2580
  8607     13DF                     u2581:
  8608     13DF  2BE7               	goto	l2536
  8609     13E0                     u2580:
  8610     13E0                     l2532:
  8611     13E0  09AF               	comf	___awmod@dividend,f
  8612     13E1  09B0               	comf	___awmod@dividend+1,f
  8613     13E2  0AAF               	incf	___awmod@dividend,f
  8614     13E3  1903               	skipnz
  8615     13E4  0AB0               	incf	___awmod@dividend+1,f
  8616     13E5                     l2534:
  8617     13E5  01B3               	clrf	___awmod@sign
  8618     13E6  0AB3               	incf	___awmod@sign,f
  8619     13E7                     l2536:
  8620     13E7  1FAE               	btfss	___awmod@divisor+1,7
  8621     13E8  2BEA               	goto	u2591
  8622     13E9  2BEB               	goto	u2590
  8623     13EA                     u2591:
  8624     13EA  2BF0               	goto	l2540
  8625     13EB                     u2590:
  8626     13EB                     l2538:
  8627     13EB  09AD               	comf	___awmod@divisor,f
  8628     13EC  09AE               	comf	___awmod@divisor+1,f
  8629     13ED  0AAD               	incf	___awmod@divisor,f
  8630     13EE  1903               	skipnz
  8631     13EF  0AAE               	incf	___awmod@divisor+1,f
  8632     13F0                     l2540:
  8633     13F0  082D               	movf	___awmod@divisor,w
  8634     13F1  042E               	iorwf	___awmod@divisor+1,w
  8635     13F2  1903               	btfsc	3,2
  8636     13F3  2BF5               	goto	u2601
  8637     13F4  2BF6               	goto	u2600
  8638     13F5                     u2601:
  8639     13F5  2C25               	goto	l2558
  8640     13F6                     u2600:
  8641     13F6                     l2542:
  8642     13F6  01B2               	clrf	___awmod@counter
  8643     13F7  0AB2               	incf	___awmod@counter,f
  8644     13F8  2C04               	goto	l2548
  8645     13F9                     l2544:
  8646     13F9  3001               	movlw	1
  8647     13FA                     u2615:
  8648     13FA  1003               	clrc
  8649     13FB  0DAD               	rlf	___awmod@divisor,f
  8650     13FC  0DAE               	rlf	___awmod@divisor+1,f
  8651     13FD  3EFF               	addlw	-1
  8652     13FE  1D03               	skipz
  8653     13FF  2BFA               	goto	u2615
  8654     1400                     l2546:
  8655     1400  3001               	movlw	1
  8656     1401  00B1               	movwf	??___awmod
  8657     1402  0831               	movf	??___awmod,w
  8658     1403  07B2               	addwf	___awmod@counter,f
  8659     1404                     l2548:
  8660     1404  1FAE               	btfss	___awmod@divisor+1,7
  8661     1405  2C07               	goto	u2621
  8662     1406  2C08               	goto	u2620
  8663     1407                     u2621:
  8664     1407  2BF9               	goto	l2544
  8665     1408                     u2620:
  8666     1408                     l2550:
  8667     1408  082E               	movf	___awmod@divisor+1,w
  8668     1409  0230               	subwf	___awmod@dividend+1,w
  8669     140A  1D03               	skipz
  8670     140B  2C0E               	goto	u2635
  8671     140C  082D               	movf	___awmod@divisor,w
  8672     140D  022F               	subwf	___awmod@dividend,w
  8673     140E                     u2635:
  8674     140E  1C03               	skipc
  8675     140F  2C11               	goto	u2631
  8676     1410  2C12               	goto	u2630
  8677     1411                     u2631:
  8678     1411  2C18               	goto	l2554
  8679     1412                     u2630:
  8680     1412                     l2552:
  8681     1412  082D               	movf	___awmod@divisor,w
  8682     1413  02AF               	subwf	___awmod@dividend,f
  8683     1414  082E               	movf	___awmod@divisor+1,w
  8684     1415  1C03               	skipc
  8685     1416  03B0               	decf	___awmod@dividend+1,f
  8686     1417  02B0               	subwf	___awmod@dividend+1,f
  8687     1418                     l2554:
  8688     1418  3001               	movlw	1
  8689     1419                     u2645:
  8690     1419  1003               	clrc
  8691     141A  0CAE               	rrf	___awmod@divisor+1,f
  8692     141B  0CAD               	rrf	___awmod@divisor,f
  8693     141C  3EFF               	addlw	-1
  8694     141D  1D03               	skipz
  8695     141E  2C19               	goto	u2645
  8696     141F                     l2556:
  8697     141F  3001               	movlw	1
  8698     1420  02B2               	subwf	___awmod@counter,f
  8699     1421  1D03               	btfss	3,2
  8700     1422  2C24               	goto	u2651
  8701     1423  2C25               	goto	u2650
  8702     1424                     u2651:
  8703     1424  2C08               	goto	l2550
  8704     1425                     u2650:
  8705     1425                     l2558:
  8706     1425  0833               	movf	___awmod@sign,w
  8707     1426  1903               	btfsc	3,2
  8708     1427  2C29               	goto	u2661
  8709     1428  2C2A               	goto	u2660
  8710     1429                     u2661:
  8711     1429  2C2F               	goto	l2562
  8712     142A                     u2660:
  8713     142A                     l2560:
  8714     142A  09AF               	comf	___awmod@dividend,f
  8715     142B  09B0               	comf	___awmod@dividend+1,f
  8716     142C  0AAF               	incf	___awmod@dividend,f
  8717     142D  1903               	skipnz
  8718     142E  0AB0               	incf	___awmod@dividend+1,f
  8719     142F                     l2562:
  8720     142F  0830               	movf	___awmod@dividend+1,w
  8721     1430  00AE               	movwf	?___awmod+1
  8722     1431  082F               	movf	___awmod@dividend,w
  8723     1432  00AD               	movwf	?___awmod
  8724     1433                     l636:
  8725     1433  0008               	return
  8726     1434                     __end_of___awmod:
  8727                           
  8728                           	psect	text27
  8729     1623                     __ptext27:	
  8730 ;; *************** function ___awdiv *****************
  8731 ;; Defined at:
  8732 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  divisor         2   13[BANK0 ] int 
  8735 ;;  dividend        2   15[BANK0 ] int 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;  quotient        2   20[BANK0 ] int 
  8738 ;;  sign            1   19[BANK0 ] unsigned char 
  8739 ;;  counter         1   18[BANK0 ] unsigned char 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  2   13[BANK0 ] int 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8749 ;;      Params:         0       4       0       0       0
  8750 ;;      Locals:         0       4       0       0       0
  8751 ;;      Temps:          0       1       0       0       0
  8752 ;;      Totals:         0       9       0       0       0
  8753 ;;Total ram usage:        9 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 3
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_main
  8760 ;;		_d2b
  8761 ;;		_uint8ToString
  8762 ;;		_intToStr
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766     1623                     ___awdiv:	
  8767                           ;psect for function ___awdiv
  8768                           
  8769     1623                     l2484:	
  8770                           ;incstack = 0
  8771                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8772                           
  8773     1623  1283               	bcf	3,5	;RP0=0, select bank0
  8774     1624  1303               	bcf	3,6	;RP1=0, select bank0
  8775     1625  01B3               	clrf	___awdiv@sign
  8776     1626                     l2486:
  8777     1626  1FAE               	btfss	___awdiv@divisor+1,7
  8778     1627  2E29               	goto	u2481
  8779     1628  2E2A               	goto	u2480
  8780     1629                     u2481:
  8781     1629  2E31               	goto	l2492
  8782     162A                     u2480:
  8783     162A                     l2488:
  8784     162A  09AD               	comf	___awdiv@divisor,f
  8785     162B  09AE               	comf	___awdiv@divisor+1,f
  8786     162C  0AAD               	incf	___awdiv@divisor,f
  8787     162D  1903               	skipnz
  8788     162E  0AAE               	incf	___awdiv@divisor+1,f
  8789     162F                     l2490:
  8790     162F  01B3               	clrf	___awdiv@sign
  8791     1630  0AB3               	incf	___awdiv@sign,f
  8792     1631                     l2492:
  8793     1631  1FB0               	btfss	___awdiv@dividend+1,7
  8794     1632  2E34               	goto	u2491
  8795     1633  2E35               	goto	u2490
  8796     1634                     u2491:
  8797     1634  2E3E               	goto	l2498
  8798     1635                     u2490:
  8799     1635                     l2494:
  8800     1635  09AF               	comf	___awdiv@dividend,f
  8801     1636  09B0               	comf	___awdiv@dividend+1,f
  8802     1637  0AAF               	incf	___awdiv@dividend,f
  8803     1638  1903               	skipnz
  8804     1639  0AB0               	incf	___awdiv@dividend+1,f
  8805     163A                     l2496:
  8806     163A  3001               	movlw	1
  8807     163B  00B1               	movwf	??___awdiv
  8808     163C  0831               	movf	??___awdiv,w
  8809     163D  06B3               	xorwf	___awdiv@sign,f
  8810     163E                     l2498:
  8811     163E  01B4               	clrf	___awdiv@quotient
  8812     163F  01B5               	clrf	___awdiv@quotient+1
  8813     1640                     l2500:
  8814     1640  082D               	movf	___awdiv@divisor,w
  8815     1641  042E               	iorwf	___awdiv@divisor+1,w
  8816     1642  1903               	btfsc	3,2
  8817     1643  2E45               	goto	u2501
  8818     1644  2E46               	goto	u2500
  8819     1645                     u2501:
  8820     1645  2E7D               	goto	l2520
  8821     1646                     u2500:
  8822     1646                     l2502:
  8823     1646  01B2               	clrf	___awdiv@counter
  8824     1647  0AB2               	incf	___awdiv@counter,f
  8825     1648  2E54               	goto	l2508
  8826     1649                     l2504:
  8827     1649  3001               	movlw	1
  8828     164A                     u2515:
  8829     164A  1003               	clrc
  8830     164B  0DAD               	rlf	___awdiv@divisor,f
  8831     164C  0DAE               	rlf	___awdiv@divisor+1,f
  8832     164D  3EFF               	addlw	-1
  8833     164E  1D03               	skipz
  8834     164F  2E4A               	goto	u2515
  8835     1650                     l2506:
  8836     1650  3001               	movlw	1
  8837     1651  00B1               	movwf	??___awdiv
  8838     1652  0831               	movf	??___awdiv,w
  8839     1653  07B2               	addwf	___awdiv@counter,f
  8840     1654                     l2508:
  8841     1654  1FAE               	btfss	___awdiv@divisor+1,7
  8842     1655  2E57               	goto	u2521
  8843     1656  2E58               	goto	u2520
  8844     1657                     u2521:
  8845     1657  2E49               	goto	l2504
  8846     1658                     u2520:
  8847     1658                     l2510:
  8848     1658  3001               	movlw	1
  8849     1659                     u2535:
  8850     1659  1003               	clrc
  8851     165A  0DB4               	rlf	___awdiv@quotient,f
  8852     165B  0DB5               	rlf	___awdiv@quotient+1,f
  8853     165C  3EFF               	addlw	-1
  8854     165D  1D03               	skipz
  8855     165E  2E59               	goto	u2535
  8856     165F  082E               	movf	___awdiv@divisor+1,w
  8857     1660  0230               	subwf	___awdiv@dividend+1,w
  8858     1661  1D03               	skipz
  8859     1662  2E65               	goto	u2545
  8860     1663  082D               	movf	___awdiv@divisor,w
  8861     1664  022F               	subwf	___awdiv@dividend,w
  8862     1665                     u2545:
  8863     1665  1C03               	skipc
  8864     1666  2E68               	goto	u2541
  8865     1667  2E69               	goto	u2540
  8866     1668                     u2541:
  8867     1668  2E70               	goto	l2516
  8868     1669                     u2540:
  8869     1669                     l2512:
  8870     1669  082D               	movf	___awdiv@divisor,w
  8871     166A  02AF               	subwf	___awdiv@dividend,f
  8872     166B  082E               	movf	___awdiv@divisor+1,w
  8873     166C  1C03               	skipc
  8874     166D  03B0               	decf	___awdiv@dividend+1,f
  8875     166E  02B0               	subwf	___awdiv@dividend+1,f
  8876     166F                     l2514:
  8877     166F  1434               	bsf	___awdiv@quotient,0
  8878     1670                     l2516:
  8879     1670  3001               	movlw	1
  8880     1671                     u2555:
  8881     1671  1003               	clrc
  8882     1672  0CAE               	rrf	___awdiv@divisor+1,f
  8883     1673  0CAD               	rrf	___awdiv@divisor,f
  8884     1674  3EFF               	addlw	-1
  8885     1675  1D03               	skipz
  8886     1676  2E71               	goto	u2555
  8887     1677                     l2518:
  8888     1677  3001               	movlw	1
  8889     1678  02B2               	subwf	___awdiv@counter,f
  8890     1679  1D03               	btfss	3,2
  8891     167A  2E7C               	goto	u2561
  8892     167B  2E7D               	goto	u2560
  8893     167C                     u2561:
  8894     167C  2E58               	goto	l2510
  8895     167D                     u2560:
  8896     167D                     l2520:
  8897     167D  0833               	movf	___awdiv@sign,w
  8898     167E  1903               	btfsc	3,2
  8899     167F  2E81               	goto	u2571
  8900     1680  2E82               	goto	u2570
  8901     1681                     u2571:
  8902     1681  2E87               	goto	l2524
  8903     1682                     u2570:
  8904     1682                     l2522:
  8905     1682  09B4               	comf	___awdiv@quotient,f
  8906     1683  09B5               	comf	___awdiv@quotient+1,f
  8907     1684  0AB4               	incf	___awdiv@quotient,f
  8908     1685  1903               	skipnz
  8909     1686  0AB5               	incf	___awdiv@quotient+1,f
  8910     1687                     l2524:
  8911     1687  0835               	movf	___awdiv@quotient+1,w
  8912     1688  00AE               	movwf	?___awdiv+1
  8913     1689  0834               	movf	___awdiv@quotient,w
  8914     168A  00AD               	movwf	?___awdiv
  8915     168B                     l623:
  8916     168B  0008               	return
  8917     168C                     __end_of___awdiv:
  8918                           
  8919                           	psect	text28
  8920     10D2                     __ptext28:	
  8921 ;; *************** function _b2d *****************
  8922 ;; Defined at:
  8923 ;;		line 399 in file "masterProyecto.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  to_convert      2   19[BANK0 ] int 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  2   19[BANK0 ] int 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, pclath, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8937 ;;      Params:         0       2       0       0       0
  8938 ;;      Locals:         0       0       0       0       0
  8939 ;;      Temps:          0       2       0       0       0
  8940 ;;      Totals:         0       4       0       0       0
  8941 ;;Total ram usage:        4 bytes
  8942 ;; Hardware stack levels used: 1
  8943 ;; Hardware stack levels required when called: 4
  8944 ;; This function calls:
  8945 ;;		___wmul
  8946 ;; This function is called by:
  8947 ;;		_main
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951     10D2                     _b2d:	
  8952                           ;psect for function _b2d
  8953                           
  8954     10D2                     l3344:	
  8955                           ;incstack = 0
  8956                           ; Regs used in _b2d: [wreg+status,2+status,0+pclath+cstack]
  8957                           
  8958                           
  8959                           ;masterProyecto.c: 400:    return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  8960     10D2  300F               	movlw	15
  8961     10D3  1283               	bcf	3,5	;RP0=0, select bank0
  8962     10D4  1303               	bcf	3,6	;RP1=0, select bank0
  8963     10D5  0533               	andwf	b2d@to_convert,w
  8964     10D6  00B5               	movwf	??_b2d
  8965     10D7  3000               	movlw	0
  8966     10D8  0534               	andwf	b2d@to_convert+1,w
  8967     10D9  00B6               	movwf	??_b2d+1
  8968     10DA  0E33               	swapf	b2d@to_convert,w
  8969     10DB  390F               	andlw	15
  8970     10DC  00AD               	movwf	___wmul@multiplier
  8971     10DD  0E34               	swapf	b2d@to_convert+1,w
  8972     10DE  39F0               	andlw	240
  8973     10DF  04AD               	iorwf	___wmul@multiplier,f
  8974     10E0  0E34               	swapf	b2d@to_convert+1,w
  8975     10E1  390F               	andlw	15
  8976     10E2  00AE               	movwf	___wmul@multiplier+1
  8977     10E3  30F0               	movlw	240
  8978     10E4  1DAE               	btfss	___wmul@multiplier+1,3
  8979     10E5  3000               	movlw	0
  8980     10E6  04AE               	iorwf	___wmul@multiplier+1,f
  8981     10E7  300A               	movlw	10
  8982     10E8  00AF               	movwf	___wmul@multiplicand
  8983     10E9  3000               	movlw	0
  8984     10EA  00B0               	movwf	___wmul@multiplicand+1
  8985     10EB  160A  118A  20AB  160A  118A  	fcall	___wmul
  8986     10F0  1283               	bcf	3,5	;RP0=0, select bank0
  8987     10F1  1303               	bcf	3,6	;RP1=0, select bank0
  8988     10F2  0835               	movf	??_b2d,w
  8989     10F3  072D               	addwf	?___wmul,w
  8990     10F4  00B3               	movwf	?_b2d
  8991     10F5  0836               	movf	??_b2d+1,w
  8992     10F6  1803               	skipnc
  8993     10F7  0A36               	incf	??_b2d+1,w
  8994     10F8  072E               	addwf	?___wmul+1,w
  8995     10F9  00B4               	movwf	?_b2d+1
  8996     10FA                     l172:
  8997     10FA  0008               	return
  8998     10FB                     __end_of_b2d:
  8999                           
  9000                           	psect	text29
  9001     10AB                     __ptext29:	
  9002 ;; *************** function ___wmul *****************
  9003 ;; Defined at:
  9004 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  multiplier      2   13[BANK0 ] unsigned int 
  9007 ;;  multiplicand    2   15[BANK0 ] unsigned int 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  product         2   17[BANK0 ] unsigned int 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  2   13[BANK0 ] unsigned int 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9019 ;;      Params:         0       4       0       0       0
  9020 ;;      Locals:         0       2       0       0       0
  9021 ;;      Temps:          0       0       0       0       0
  9022 ;;      Totals:         0       6       0       0       0
  9023 ;;Total ram usage:        6 bytes
  9024 ;; Hardware stack levels used: 1
  9025 ;; Hardware stack levels required when called: 3
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_b2d
  9030 ;;		_d2b
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034     10AB                     ___wmul:	
  9035                           ;psect for function ___wmul
  9036                           
  9037     10AB                     l2878:	
  9038                           ;incstack = 0
  9039                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9040                           
  9041     10AB  1283               	bcf	3,5	;RP0=0, select bank0
  9042     10AC  1303               	bcf	3,6	;RP1=0, select bank0
  9043     10AD  01B1               	clrf	___wmul@product
  9044     10AE  01B2               	clrf	___wmul@product+1
  9045     10AF                     l2880:
  9046     10AF  1C2D               	btfss	___wmul@multiplier,0
  9047     10B0  28B2               	goto	u3311
  9048     10B1  28B3               	goto	u3310
  9049     10B2                     u3311:
  9050     10B2  28B9               	goto	l470
  9051     10B3                     u3310:
  9052     10B3                     l2882:
  9053     10B3  082F               	movf	___wmul@multiplicand,w
  9054     10B4  07B1               	addwf	___wmul@product,f
  9055     10B5  1803               	skipnc
  9056     10B6  0AB2               	incf	___wmul@product+1,f
  9057     10B7  0830               	movf	___wmul@multiplicand+1,w
  9058     10B8  07B2               	addwf	___wmul@product+1,f
  9059     10B9                     l470:
  9060     10B9  3001               	movlw	1
  9061     10BA                     u3325:
  9062     10BA  1003               	clrc
  9063     10BB  0DAF               	rlf	___wmul@multiplicand,f
  9064     10BC  0DB0               	rlf	___wmul@multiplicand+1,f
  9065     10BD  3EFF               	addlw	-1
  9066     10BE  1D03               	skipz
  9067     10BF  28BA               	goto	u3325
  9068     10C0                     l2884:
  9069     10C0  3001               	movlw	1
  9070     10C1                     u3335:
  9071     10C1  1003               	clrc
  9072     10C2  0CAE               	rrf	___wmul@multiplier+1,f
  9073     10C3  0CAD               	rrf	___wmul@multiplier,f
  9074     10C4  3EFF               	addlw	-1
  9075     10C5  1D03               	skipz
  9076     10C6  28C1               	goto	u3335
  9077     10C7                     l2886:
  9078     10C7  082D               	movf	___wmul@multiplier,w
  9079     10C8  042E               	iorwf	___wmul@multiplier+1,w
  9080     10C9  1D03               	btfss	3,2
  9081     10CA  28CC               	goto	u3341
  9082     10CB  28CD               	goto	u3340
  9083     10CC                     u3341:
  9084     10CC  28AF               	goto	l2880
  9085     10CD                     u3340:
  9086     10CD                     l2888:
  9087     10CD  0832               	movf	___wmul@product+1,w
  9088     10CE  00AE               	movwf	?___wmul+1
  9089     10CF  0831               	movf	___wmul@product,w
  9090     10D0  00AD               	movwf	?___wmul
  9091     10D1                     l472:
  9092     10D1  0008               	return
  9093     10D2                     __end_of___wmul:
  9094                           
  9095                           	psect	text30
  9096     120B                     __ptext30:	
  9097 ;; *************** function _USART_print *****************
  9098 ;; Defined at:
  9099 ;;		line 45 in file "USART.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  string          2   14[BANK0 ] PTR const unsigned char 
  9102 ;;		 -> NULL(0), STR_9(2), STR_2(2), STR_1(2), 
  9103 ;;		 -> bufferHum(4), bufferTemp(4), bufferQ(4), 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;  i               2   19[BANK0 ] int 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9115 ;;      Params:         0       2       0       0       0
  9116 ;;      Locals:         0       2       0       0       0
  9117 ;;      Temps:          0       3       0       0       0
  9118 ;;      Totals:         0       7       0       0       0
  9119 ;;Total ram usage:        7 bytes
  9120 ;; Hardware stack levels used: 1
  9121 ;; Hardware stack levels required when called: 4
  9122 ;; This function calls:
  9123 ;;		_USART_send
  9124 ;; This function is called by:
  9125 ;;		_main
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129     120B                     _USART_print:	
  9130                           ;psect for function _USART_print
  9131                           
  9132     120B                     l3278:	
  9133                           ;incstack = 0
  9134                           ; Regs used in _USART_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9135                           
  9136                           
  9137                           ;USART.c: 45: void USART_print(const char *string);USART.c: 46: {;USART.c: 47:     int i
      +                           = 0;
  9138     120B  1283               	bcf	3,5	;RP0=0, select bank0
  9139     120C  1303               	bcf	3,6	;RP1=0, select bank0
  9140     120D  01B3               	clrf	USART_print@i
  9141     120E  01B4               	clrf	USART_print@i+1
  9142     120F  2A34               	goto	l3284
  9143     1210                     l3280:
  9144                           
  9145                           ;USART.c: 50:     {;USART.c: 51:         USART_send(string[i]);
  9146     1210  0833               	movf	USART_print@i,w
  9147     1211  072E               	addwf	USART_print@string,w
  9148     1212  00B1               	movwf	??_USART_print+1
  9149     1213  082F               	movf	USART_print@string+1,w
  9150     1214  00B0               	movwf	??_USART_print
  9151     1215  1803               	skipnc
  9152     1216  0AB0               	incf	??_USART_print,f
  9153     1217  1FB3               	btfss	USART_print@i,7
  9154     1218  2A1A               	goto	u4320
  9155     1219  03B0               	decf	??_USART_print,f
  9156     121A                     u4320:
  9157     121A  1283               	bcf	3,5	;RP0=0, select bank0
  9158     121B  1303               	bcf	3,6	;RP1=0, select bank0
  9159     121C  0830               	movf	??_USART_print,w
  9160     121D  00B2               	movwf	??_USART_print+2
  9161     121E  0832               	movf	??_USART_print+2,w
  9162     121F  00FF               	movwf	btemp+1
  9163     1220  0831               	movf	??_USART_print+1,w
  9164     1221  0084               	movwf	4
  9165     1222  160A  118A  2000  160A  118A  	fcall	stringtab
  9166     1227  160A  158A  27BA  160A  118A  	fcall	_USART_send
  9167     122C                     l3282:
  9168                           
  9169                           ;USART.c: 52:     }
  9170     122C  3001               	movlw	1
  9171     122D  1283               	bcf	3,5	;RP0=0, select bank0
  9172     122E  1303               	bcf	3,6	;RP1=0, select bank0
  9173     122F  07B3               	addwf	USART_print@i,f
  9174     1230  1803               	skipnc
  9175     1231  0AB4               	incf	USART_print@i+1,f
  9176     1232  3000               	movlw	0
  9177     1233  07B4               	addwf	USART_print@i+1,f
  9178     1234                     l3284:
  9179     1234  0833               	movf	USART_print@i,w
  9180     1235  072E               	addwf	USART_print@string,w
  9181     1236  00B1               	movwf	??_USART_print+1
  9182     1237  082F               	movf	USART_print@string+1,w
  9183     1238  00B0               	movwf	??_USART_print
  9184     1239  1803               	skipnc
  9185     123A  0AB0               	incf	??_USART_print,f
  9186     123B  1FB3               	btfss	USART_print@i,7
  9187     123C  2A3E               	goto	u4330
  9188     123D  03B0               	decf	??_USART_print,f
  9189     123E                     u4330:
  9190     123E  1283               	bcf	3,5	;RP0=0, select bank0
  9191     123F  1303               	bcf	3,6	;RP1=0, select bank0
  9192     1240  0830               	movf	??_USART_print,w
  9193     1241  00B2               	movwf	??_USART_print+2
  9194     1242  0832               	movf	??_USART_print+2,w
  9195     1243  00FF               	movwf	btemp+1
  9196     1244  0831               	movf	??_USART_print+1,w
  9197     1245  0084               	movwf	4
  9198     1246  160A  118A  2000  160A  118A  	fcall	stringtab
  9199     124B  3A00               	xorlw	0
  9200     124C  1D03               	skipz
  9201     124D  2A4F               	goto	u4341
  9202     124E  2A50               	goto	u4340
  9203     124F                     u4341:
  9204     124F  2A10               	goto	l3280
  9205     1250                     u4340:
  9206     1250                     l375:
  9207     1250  0008               	return
  9208     1251                     __end_of_USART_print:
  9209                           
  9210                           	psect	text31
  9211     1FBA                     __ptext31:	
  9212 ;; *************** function _USART_send *****************
  9213 ;; Defined at:
  9214 ;;		line 34 in file "USART.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  data            1    wreg     const unsigned char 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;  data            1   13[BANK0 ] const unsigned char 
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9228 ;;      Params:         0       0       0       0       0
  9229 ;;      Locals:         0       1       0       0       0
  9230 ;;      Temps:          0       0       0       0       0
  9231 ;;      Totals:         0       1       0       0       0
  9232 ;;Total ram usage:        1 bytes
  9233 ;; Hardware stack levels used: 1
  9234 ;; Hardware stack levels required when called: 3
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_USART_print
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242     1FBA                     _USART_send:	
  9243                           ;psect for function _USART_send
  9244                           
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in _USART_send: [wreg]
  9248                           ;USART_send@data stored from wreg
  9249     1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  9250     1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  9251     1FBC  00AD               	movwf	USART_send@data
  9252     1FBD                     l2874:
  9253     1FBD                     l363:	
  9254                           ;USART.c: 34: void USART_send(const char data);USART.c: 35: {;USART.c: 36:     while(!TR
      +                          MT);
  9255                           
  9256     1FBD  1683               	bsf	3,5	;RP0=1, select bank1
  9257     1FBE  1303               	bcf	3,6	;RP1=0, select bank1
  9258     1FBF  1C98               	btfss	24,1	;volatile
  9259     1FC0  2FC2               	goto	u3301
  9260     1FC1  2FC3               	goto	u3300
  9261     1FC2                     u3301:
  9262     1FC2  2FBD               	goto	l363
  9263     1FC3                     u3300:
  9264     1FC3                     l2876:
  9265                           
  9266                           ;USART.c: 37:     TXREG = data;
  9267     1FC3  1283               	bcf	3,5	;RP0=0, select bank0
  9268     1FC4  1303               	bcf	3,6	;RP1=0, select bank0
  9269     1FC5  082D               	movf	USART_send@data,w
  9270     1FC6  0099               	movwf	25	;volatile
  9271     1FC7                     l366:
  9272     1FC7  0008               	return
  9273     1FC8                     __end_of_USART_send:
  9274                           
  9275                           	psect	text32
  9276     1038                     __ptext32:	
  9277 ;; *************** function _I2C_Master_Write *****************
  9278 ;; Defined at:
  9279 ;;		line 65 in file "I2C.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;  d               2   30[BANK0 ] unsigned int 
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;		None
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  1    wreg      void 
  9286 ;; Registers used:
  9287 ;;		wreg, status,2, status,0, pclath, cstack
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9293 ;;      Params:         0       2       0       0       0
  9294 ;;      Locals:         0       0       0       0       0
  9295 ;;      Temps:          0       0       0       0       0
  9296 ;;      Totals:         0       2       0       0       0
  9297 ;;Total ram usage:        2 bytes
  9298 ;; Hardware stack levels used: 1
  9299 ;; Hardware stack levels required when called: 4
  9300 ;; This function calls:
  9301 ;;		_I2C_Master_Wait
  9302 ;; This function is called by:
  9303 ;;		_main
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307     1038                     _I2C_Master_Write:	
  9308                           ;psect for function _I2C_Master_Write
  9309                           
  9310     1038                     l3254:	
  9311                           ;incstack = 0
  9312                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9313                           
  9314                           
  9315                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  9316     1038  160A  158A  2793  160A  118A  	fcall	_I2C_Master_Wait
  9317     103D                     l3256:
  9318                           
  9319                           ;I2C.c: 68:     SSPBUF = d;
  9320     103D  1283               	bcf	3,5	;RP0=0, select bank0
  9321     103E  1303               	bcf	3,6	;RP1=0, select bank0
  9322     103F  083E               	movf	I2C_Master_Write@d,w
  9323     1040  0093               	movwf	19	;volatile
  9324     1041                     l258:
  9325     1041  0008               	return
  9326     1042                     __end_of_I2C_Master_Write:
  9327                           
  9328                           	psect	text33
  9329     1F67                     __ptext33:	
  9330 ;; *************** function _I2C_Master_Stop *****************
  9331 ;; Defined at:
  9332 ;;		line 55 in file "I2C.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;		None
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;		None
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0, pclath, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9346 ;;      Params:         0       0       0       0       0
  9347 ;;      Locals:         0       0       0       0       0
  9348 ;;      Temps:          0       0       0       0       0
  9349 ;;      Totals:         0       0       0       0       0
  9350 ;;Total ram usage:        0 bytes
  9351 ;; Hardware stack levels used: 1
  9352 ;; Hardware stack levels required when called: 4
  9353 ;; This function calls:
  9354 ;;		_I2C_Master_Wait
  9355 ;; This function is called by:
  9356 ;;		_main
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360     1F67                     _I2C_Master_Stop:	
  9361                           ;psect for function _I2C_Master_Stop
  9362                           
  9363     1F67                     l3274:	
  9364                           ;incstack = 0
  9365                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9366                           
  9367                           
  9368                           ;I2C.c: 57:     I2C_Master_Wait();
  9369     1F67  160A  158A  2793  160A  158A  	fcall	_I2C_Master_Wait
  9370     1F6C                     l3276:
  9371                           
  9372                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  9373     1F6C  1683               	bsf	3,5	;RP0=1, select bank1
  9374     1F6D  1303               	bcf	3,6	;RP1=0, select bank1
  9375     1F6E  1511               	bsf	17,2	;volatile
  9376     1F6F                     l255:
  9377     1F6F  0008               	return
  9378     1F70                     __end_of_I2C_Master_Stop:
  9379                           
  9380                           	psect	text34
  9381     1F5E                     __ptext34:	
  9382 ;; *************** function _I2C_Master_Start *****************
  9383 ;; Defined at:
  9384 ;;		line 39 in file "I2C.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;		None
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  1    wreg      void 
  9391 ;; Registers used:
  9392 ;;		wreg, status,2, status,0, pclath, cstack
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9398 ;;      Params:         0       0       0       0       0
  9399 ;;      Locals:         0       0       0       0       0
  9400 ;;      Temps:          0       0       0       0       0
  9401 ;;      Totals:         0       0       0       0       0
  9402 ;;Total ram usage:        0 bytes
  9403 ;; Hardware stack levels used: 1
  9404 ;; Hardware stack levels required when called: 4
  9405 ;; This function calls:
  9406 ;;		_I2C_Master_Wait
  9407 ;; This function is called by:
  9408 ;;		_main
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412     1F5E                     _I2C_Master_Start:	
  9413                           ;psect for function _I2C_Master_Start
  9414                           
  9415     1F5E                     l3250:	
  9416                           ;incstack = 0
  9417                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9418                           
  9419                           
  9420                           ;I2C.c: 41:     I2C_Master_Wait();
  9421     1F5E  160A  158A  2793  160A  158A  	fcall	_I2C_Master_Wait
  9422     1F63                     l3252:
  9423                           
  9424                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  9425     1F63  1683               	bsf	3,5	;RP0=1, select bank1
  9426     1F64  1303               	bcf	3,6	;RP1=0, select bank1
  9427     1F65  1411               	bsf	17,0	;volatile
  9428     1F66                     l249:
  9429     1F66  0008               	return
  9430     1F67                     __end_of_I2C_Master_Start:
  9431                           
  9432                           	psect	text35
  9433     1F55                     __ptext35:	
  9434 ;; *************** function _I2C_Master_RepeatedStart *****************
  9435 ;; Defined at:
  9436 ;;		line 47 in file "I2C.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      void 
  9443 ;; Registers used:
  9444 ;;		wreg, status,2, status,0, pclath, cstack
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9450 ;;      Params:         0       0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0
  9453 ;;      Totals:         0       0       0       0       0
  9454 ;;Total ram usage:        0 bytes
  9455 ;; Hardware stack levels used: 1
  9456 ;; Hardware stack levels required when called: 4
  9457 ;; This function calls:
  9458 ;;		_I2C_Master_Wait
  9459 ;; This function is called by:
  9460 ;;		_main
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464     1F55                     _I2C_Master_RepeatedStart:	
  9465                           ;psect for function _I2C_Master_RepeatedStart
  9466                           
  9467     1F55                     l3340:	
  9468                           ;incstack = 0
  9469                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  9470                           
  9471                           
  9472                           ;I2C.c: 49:     I2C_Master_Wait();
  9473     1F55  160A  158A  2793  160A  158A  	fcall	_I2C_Master_Wait
  9474     1F5A                     l3342:
  9475                           
  9476                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  9477     1F5A  1683               	bsf	3,5	;RP0=1, select bank1
  9478     1F5B  1303               	bcf	3,6	;RP1=0, select bank1
  9479     1F5C  1491               	bsf	17,1	;volatile
  9480     1F5D                     l252:
  9481     1F5D  0008               	return
  9482     1F5E                     __end_of_I2C_Master_RepeatedStart:
  9483                           
  9484                           	psect	text36
  9485     1124                     __ptext36:	
  9486 ;; *************** function _I2C_Master_Read *****************
  9487 ;; Defined at:
  9488 ;;		line 74 in file "I2C.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  a               2   13[BANK0 ] unsigned short 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  temp            2   17[BANK0 ] unsigned short 
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  2   13[BANK0 ] unsigned short 
  9495 ;; Registers used:
  9496 ;;		wreg, status,2, status,0, pclath, cstack
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9502 ;;      Params:         0       2       0       0       0
  9503 ;;      Locals:         0       2       0       0       0
  9504 ;;      Temps:          0       2       0       0       0
  9505 ;;      Totals:         0       6       0       0       0
  9506 ;;Total ram usage:        6 bytes
  9507 ;; Hardware stack levels used: 1
  9508 ;; Hardware stack levels required when called: 4
  9509 ;; This function calls:
  9510 ;;		_I2C_Master_Wait
  9511 ;; This function is called by:
  9512 ;;		_main
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516     1124                     _I2C_Master_Read:	
  9517                           ;psect for function _I2C_Master_Read
  9518                           
  9519     1124                     l3324:	
  9520                           ;incstack = 0
  9521                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9522                           
  9523                           
  9524                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  9525     1124  160A  158A  2793  160A  118A  	fcall	_I2C_Master_Wait
  9526     1129                     l3326:
  9527                           
  9528                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  9529     1129  1683               	bsf	3,5	;RP0=1, select bank1
  9530     112A  1303               	bcf	3,6	;RP1=0, select bank1
  9531     112B  1591               	bsf	17,3	;volatile
  9532                           
  9533                           ;I2C.c: 79:     I2C_Master_Wait();
  9534     112C  160A  158A  2793  160A  118A  	fcall	_I2C_Master_Wait
  9535     1131                     l3328:
  9536                           
  9537                           ;I2C.c: 80:     temp = SSPBUF;
  9538     1131  1283               	bcf	3,5	;RP0=0, select bank0
  9539     1132  1303               	bcf	3,6	;RP1=0, select bank0
  9540     1133  0813               	movf	19,w	;volatile
  9541     1134  00AF               	movwf	??_I2C_Master_Read
  9542     1135  01B0               	clrf	??_I2C_Master_Read+1
  9543     1136  082F               	movf	??_I2C_Master_Read,w
  9544     1137  00B1               	movwf	I2C_Master_Read@temp
  9545     1138  0830               	movf	??_I2C_Master_Read+1,w
  9546     1139  00B2               	movwf	I2C_Master_Read@temp+1
  9547     113A                     l3330:
  9548                           
  9549                           ;I2C.c: 81:     I2C_Master_Wait();
  9550     113A  160A  158A  2793  160A  118A  	fcall	_I2C_Master_Wait
  9551     113F                     l3332:
  9552                           
  9553                           ;I2C.c: 82:     if(a == 1){
  9554     113F  1283               	bcf	3,5	;RP0=0, select bank0
  9555     1140  1303               	bcf	3,6	;RP1=0, select bank0
  9556     1141  032D               	decf	I2C_Master_Read@a,w
  9557     1142  042E               	iorwf	I2C_Master_Read@a+1,w
  9558     1143  1D03               	btfss	3,2
  9559     1144  2946               	goto	u4351
  9560     1145  2947               	goto	u4350
  9561     1146                     u4351:
  9562     1146  294B               	goto	l261
  9563     1147                     u4350:
  9564     1147                     l3334:
  9565                           
  9566                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  9567     1147  1683               	bsf	3,5	;RP0=1, select bank1
  9568     1148  1303               	bcf	3,6	;RP1=0, select bank1
  9569     1149  1291               	bcf	17,5	;volatile
  9570                           
  9571                           ;I2C.c: 84:     }else{
  9572     114A  294E               	goto	l262
  9573     114B                     l261:
  9574                           
  9575                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  9576     114B  1683               	bsf	3,5	;RP0=1, select bank1
  9577     114C  1303               	bcf	3,6	;RP1=0, select bank1
  9578     114D  1691               	bsf	17,5	;volatile
  9579     114E                     l262:	
  9580                           ;I2C.c: 86:     }
  9581                           
  9582                           
  9583                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  9584     114E  1611               	bsf	17,4	;volatile
  9585     114F                     l3336:
  9586                           
  9587                           ;I2C.c: 88:     return temp;
  9588     114F  1283               	bcf	3,5	;RP0=0, select bank0
  9589     1150  1303               	bcf	3,6	;RP1=0, select bank0
  9590     1151  0832               	movf	I2C_Master_Read@temp+1,w
  9591     1152  00AE               	movwf	?_I2C_Master_Read+1
  9592     1153  0831               	movf	I2C_Master_Read@temp,w
  9593     1154  00AD               	movwf	?_I2C_Master_Read
  9594     1155                     l263:
  9595     1155  0008               	return
  9596     1156                     __end_of_I2C_Master_Read:
  9597                           
  9598                           	psect	text37
  9599     1F93                     __ptext37:	
  9600 ;; *************** function _I2C_Master_Wait *****************
  9601 ;; Defined at:
  9602 ;;		line 32 in file "I2C.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, status,2
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9616 ;;      Params:         0       0       0       0       0
  9617 ;;      Locals:         0       0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0
  9619 ;;      Totals:         0       0       0       0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used: 1
  9622 ;; Hardware stack levels required when called: 3
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_I2C_Master_Start
  9627 ;;		_I2C_Master_RepeatedStart
  9628 ;;		_I2C_Master_Stop
  9629 ;;		_I2C_Master_Write
  9630 ;;		_I2C_Master_Read
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634     1F93                     _I2C_Master_Wait:	
  9635                           ;psect for function _I2C_Master_Wait
  9636                           
  9637     1F93                     l2870:	
  9638                           ;incstack = 0
  9639                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9640                           
  9641     1F93                     l243:	
  9642                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9643                           
  9644     1F93  1683               	bsf	3,5	;RP0=1, select bank1
  9645     1F94  1303               	bcf	3,6	;RP1=0, select bank1
  9646     1F95  1914               	btfsc	20,2	;volatile
  9647     1F96  2F98               	goto	u3281
  9648     1F97  2F99               	goto	u3280
  9649     1F98                     u3281:
  9650     1F98  2F93               	goto	l243
  9651     1F99                     u3280:
  9652     1F99                     l2872:
  9653     1F99  0811               	movf	17,w	;volatile
  9654     1F9A  391F               	andlw	31
  9655     1F9B  1D03               	btfss	3,2
  9656     1F9C  2F9E               	goto	u3291
  9657     1F9D  2F9F               	goto	u3290
  9658     1F9E                     u3291:
  9659     1F9E  2F93               	goto	l243
  9660     1F9F                     u3290:
  9661     1F9F                     l246:
  9662     1F9F  0008               	return
  9663     1FA0                     __end_of_I2C_Master_Wait:
  9664                           
  9665                           	psect	text38
  9666     0974                     __ptext38:	
  9667 ;; *************** function _isr *****************
  9668 ;; Defined at:
  9669 ;;		line 68 in file "masterProyecto.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;		None
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9683 ;;      Params:         0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0
  9685 ;;      Temps:          0       7       0       0       0
  9686 ;;      Totals:         0       7       0       0       0
  9687 ;;Total ram usage:        7 bytes
  9688 ;; Hardware stack levels used: 1
  9689 ;; Hardware stack levels required when called: 2
  9690 ;; This function calls:
  9691 ;;		i1_I2C_Master_Start
  9692 ;;		i1_I2C_Master_Stop
  9693 ;;		i1_I2C_Master_Write
  9694 ;;		i1_USART_print
  9695 ;;		i1_d2b
  9696 ;; This function is called by:
  9697 ;;		Interrupt level 1
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701     0974                     _isr:	
  9702                           ;psect for function _isr
  9703                           
  9704     0974                     i1l3456:
  9705                           
  9706                           ;masterProyecto.c: 70:      if (INTCONbits.RBIF){
  9707     0974  1C0B               	btfss	11,0	;volatile
  9708     0975  2977               	goto	u447_21
  9709     0976  2978               	goto	u447_20
  9710     0977                     u447_21:
  9711     0977  2A47               	goto	i1l3528
  9712     0978                     u447_20:
  9713     0978                     i1l3458:
  9714                           
  9715                           ;masterProyecto.c: 72:         if (PORTBbits.RB0==0){
  9716     0978  1806               	btfsc	6,0	;volatile
  9717     0979  297B               	goto	u448_21
  9718     097A  297C               	goto	u448_20
  9719     097B                     u448_21:
  9720     097B  29D3               	goto	i1l130
  9721     097C                     u448_20:
  9722     097C                     i1l3460:
  9723                           
  9724                           ;masterProyecto.c: 74:             hour++;
  9725     097C  3001               	movlw	1
  9726     097D  07E1               	addwf	_hour,f
  9727     097E  1803               	skipnc
  9728     097F  0AE2               	incf	_hour+1,f
  9729     0980  3000               	movlw	0
  9730     0981  07E2               	addwf	_hour+1,f
  9731     0982                     i1l3462:
  9732                           
  9733                           ;masterProyecto.c: 75:             if (hour > 23){
  9734     0982  0862               	movf	_hour+1,w
  9735     0983  3A80               	xorlw	128
  9736     0984  00FF               	movwf	btemp+1
  9737     0985  3080               	movlw	128
  9738     0986  027F               	subwf	btemp+1,w
  9739     0987  1D03               	skipz
  9740     0988  298B               	goto	u449_25
  9741     0989  3018               	movlw	24
  9742     098A  0261               	subwf	_hour,w
  9743     098B                     u449_25:
  9744     098B  1C03               	skipc
  9745     098C  298E               	goto	u449_21
  9746     098D  298F               	goto	u449_20
  9747     098E                     u449_21:
  9748     098E  2993               	goto	i1l3466
  9749     098F                     u449_20:
  9750     098F                     i1l3464:
  9751                           
  9752                           ;masterProyecto.c: 76:                 hour = 0;
  9753     098F  1283               	bcf	3,5	;RP0=0, select bank0
  9754     0990  1303               	bcf	3,6	;RP1=0, select bank0
  9755     0991  01E1               	clrf	_hour
  9756     0992  01E2               	clrf	_hour+1
  9757     0993                     i1l3466:
  9758                           
  9759                           ;masterProyecto.c: 78:             I2C_Master_Start();
  9760     0993  160A  158A  2743  120A  158A  	fcall	i1_I2C_Master_Start
  9761     0998                     i1l3468:
  9762                           
  9763                           ;masterProyecto.c: 79:             I2C_Master_Write(0xD0);
  9764     0998  30D0               	movlw	208
  9765     0999  00FB               	movwf	i1I2C_Master_Write@d
  9766     099A  3000               	movlw	0
  9767     099B  00FC               	movwf	i1I2C_Master_Write@d+1
  9768     099C  160A  158A  2770  120A  158A  	fcall	i1_I2C_Master_Write
  9769     09A1                     i1l3470:
  9770                           
  9771                           ;masterProyecto.c: 80:             I2C_Master_Write(0x02);
  9772     09A1  3002               	movlw	2
  9773     09A2  00FB               	movwf	i1I2C_Master_Write@d
  9774     09A3  3000               	movlw	0
  9775     09A4  00FC               	movwf	i1I2C_Master_Write@d+1
  9776     09A5  160A  158A  2770  120A  158A  	fcall	i1_I2C_Master_Write
  9777     09AA                     i1l3472:
  9778                           
  9779                           ;masterProyecto.c: 81:             I2C_Master_Write(d2b(hour));
  9780     09AA  1283               	bcf	3,5	;RP0=0, select bank0
  9781     09AB  1303               	bcf	3,6	;RP1=0, select bank0
  9782     09AC  0862               	movf	_hour+1,w
  9783     09AD  00FA               	movwf	i1d2b@to_convert+1
  9784     09AE  0861               	movf	_hour,w
  9785     09AF  00F9               	movwf	i1d2b@to_convert
  9786     09B0  160A  118A  2434  120A  158A  	fcall	i1_d2b
  9787     09B5  087A               	movf	?i1_d2b+1,w
  9788     09B6  00FC               	movwf	i1I2C_Master_Write@d+1
  9789     09B7  0879               	movf	?i1_d2b,w
  9790     09B8  00FB               	movwf	i1I2C_Master_Write@d
  9791     09B9  160A  158A  2770  120A  158A  	fcall	i1_I2C_Master_Write
  9792     09BE                     i1l3474:
  9793                           
  9794                           ;masterProyecto.c: 82:             I2C_Master_Stop();
  9795     09BE  160A  158A  274C  120A  158A  	fcall	i1_I2C_Master_Stop
  9796     09C3                     i1l3476:
  9797                           
  9798                           ;masterProyecto.c: 83:             _delay((unsigned long)((100)*(8000000/4000.0)));
  9799     09C3  3002               	movlw	2
  9800     09C4  1283               	bcf	3,5	;RP0=0, select bank0
  9801     09C5  1303               	bcf	3,6	;RP1=0, select bank0
  9802     09C6  00A8               	movwf	??_isr+2
  9803     09C7  3004               	movlw	4
  9804     09C8  00A7               	movwf	??_isr+1
  9805     09C9  30B9               	movlw	185
  9806     09CA  00A6               	movwf	??_isr
  9807     09CB                     u512_27:
  9808     09CB  0BA6               	decfsz	??_isr,f
  9809     09CC  29CB               	goto	u512_27
  9810     09CD  0BA7               	decfsz	??_isr+1,f
  9811     09CE  29CB               	goto	u512_27
  9812     09CF  0BA8               	decfsz	??_isr+2,f
  9813     09D0  29CB               	goto	u512_27
  9814     09D1  29D2               	nop2
  9815                           
  9816                           ;masterProyecto.c: 84:         }
  9817     09D2  29DE               	goto	i1l3492
  9818     09D3                     i1l130:	
  9819                           ;masterProyecto.c: 86:         else if (PORTBbits.RB1 ==0){
  9820                           
  9821     09D3  1886               	btfsc	6,1	;volatile
  9822     09D4  29D6               	goto	u450_21
  9823     09D5  29D7               	goto	u450_20
  9824     09D6                     u450_21:
  9825     09D6  29DE               	goto	i1l3492
  9826     09D7                     u450_20:
  9827     09D7                     i1l3478:
  9828                           
  9829                           ;masterProyecto.c: 87:             hour--;
  9830     09D7  30FF               	movlw	255
  9831     09D8  07E1               	addwf	_hour,f
  9832     09D9  1803               	skipnc
  9833     09DA  0AE2               	incf	_hour+1,f
  9834     09DB  30FF               	movlw	255
  9835     09DC  07E2               	addwf	_hour+1,f
  9836     09DD  2993               	goto	i1l3466
  9837     09DE                     i1l3492:
  9838                           
  9839                           ;masterProyecto.c: 97:         if (PORTBbits.RB2==0){
  9840     09DE  1283               	bcf	3,5	;RP0=0, select bank0
  9841     09DF  1303               	bcf	3,6	;RP1=0, select bank0
  9842     09E0  1906               	btfsc	6,2	;volatile
  9843     09E1  29E3               	goto	u451_21
  9844     09E2  29E4               	goto	u451_20
  9845     09E3                     u451_21:
  9846     09E3  2A3B               	goto	i1l134
  9847     09E4                     u451_20:
  9848     09E4                     i1l3494:
  9849                           
  9850                           ;masterProyecto.c: 99:             min++;
  9851     09E4  3001               	movlw	1
  9852     09E5  07DF               	addwf	_min,f
  9853     09E6  1803               	skipnc
  9854     09E7  0AE0               	incf	_min+1,f
  9855     09E8  3000               	movlw	0
  9856     09E9  07E0               	addwf	_min+1,f
  9857     09EA                     i1l3496:
  9858                           
  9859                           ;masterProyecto.c: 100:             if (min > 59){
  9860     09EA  0860               	movf	_min+1,w
  9861     09EB  3A80               	xorlw	128
  9862     09EC  00FF               	movwf	btemp+1
  9863     09ED  3080               	movlw	128
  9864     09EE  027F               	subwf	btemp+1,w
  9865     09EF  1D03               	skipz
  9866     09F0  29F3               	goto	u452_25
  9867     09F1  303C               	movlw	60
  9868     09F2  025F               	subwf	_min,w
  9869     09F3                     u452_25:
  9870     09F3  1C03               	skipc
  9871     09F4  29F6               	goto	u452_21
  9872     09F5  29F7               	goto	u452_20
  9873     09F6                     u452_21:
  9874     09F6  29FB               	goto	i1l3500
  9875     09F7                     u452_20:
  9876     09F7                     i1l3498:
  9877                           
  9878                           ;masterProyecto.c: 101:                 min = 0;
  9879     09F7  1283               	bcf	3,5	;RP0=0, select bank0
  9880     09F8  1303               	bcf	3,6	;RP1=0, select bank0
  9881     09F9  01DF               	clrf	_min
  9882     09FA  01E0               	clrf	_min+1
  9883     09FB                     i1l3500:
  9884                           
  9885                           ;masterProyecto.c: 103:             I2C_Master_Start();
  9886     09FB  160A  158A  2743  120A  158A  	fcall	i1_I2C_Master_Start
  9887     0A00                     i1l3502:
  9888                           
  9889                           ;masterProyecto.c: 104:             I2C_Master_Write(0xD0);
  9890     0A00  30D0               	movlw	208
  9891     0A01  00FB               	movwf	i1I2C_Master_Write@d
  9892     0A02  3000               	movlw	0
  9893     0A03  00FC               	movwf	i1I2C_Master_Write@d+1
  9894     0A04  160A  158A  2770  120A  158A  	fcall	i1_I2C_Master_Write
  9895     0A09                     i1l3504:
  9896                           
  9897                           ;masterProyecto.c: 105:             I2C_Master_Write(0x01);
  9898     0A09  3001               	movlw	1
  9899     0A0A  00FB               	movwf	i1I2C_Master_Write@d
  9900     0A0B  3000               	movlw	0
  9901     0A0C  00FC               	movwf	i1I2C_Master_Write@d+1
  9902     0A0D  160A  158A  2770  120A  158A  	fcall	i1_I2C_Master_Write
  9903     0A12                     i1l3506:
  9904                           
  9905                           ;masterProyecto.c: 106:             I2C_Master_Write(d2b(min));
  9906     0A12  1283               	bcf	3,5	;RP0=0, select bank0
  9907     0A13  1303               	bcf	3,6	;RP1=0, select bank0
  9908     0A14  0860               	movf	_min+1,w
  9909     0A15  00FA               	movwf	i1d2b@to_convert+1
  9910     0A16  085F               	movf	_min,w
  9911     0A17  00F9               	movwf	i1d2b@to_convert
  9912     0A18  160A  118A  2434  120A  158A  	fcall	i1_d2b
  9913     0A1D  087A               	movf	?i1_d2b+1,w
  9914     0A1E  00FC               	movwf	i1I2C_Master_Write@d+1
  9915     0A1F  0879               	movf	?i1_d2b,w
  9916     0A20  00FB               	movwf	i1I2C_Master_Write@d
  9917     0A21  160A  158A  2770  120A  158A  	fcall	i1_I2C_Master_Write
  9918     0A26                     i1l3508:
  9919                           
  9920                           ;masterProyecto.c: 107:             I2C_Master_Stop();
  9921     0A26  160A  158A  274C  120A  158A  	fcall	i1_I2C_Master_Stop
  9922     0A2B                     i1l3510:
  9923                           
  9924                           ;masterProyecto.c: 108:             _delay((unsigned long)((100)*(8000000/4000.0)));
  9925     0A2B  3002               	movlw	2
  9926     0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  9927     0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  9928     0A2E  00A8               	movwf	??_isr+2
  9929     0A2F  3004               	movlw	4
  9930     0A30  00A7               	movwf	??_isr+1
  9931     0A31  30B9               	movlw	185
  9932     0A32  00A6               	movwf	??_isr
  9933     0A33                     u513_27:
  9934     0A33  0BA6               	decfsz	??_isr,f
  9935     0A34  2A33               	goto	u513_27
  9936     0A35  0BA7               	decfsz	??_isr+1,f
  9937     0A36  2A33               	goto	u513_27
  9938     0A37  0BA8               	decfsz	??_isr+2,f
  9939     0A38  2A33               	goto	u513_27
  9940     0A39  2A3A               	nop2
  9941                           
  9942                           ;masterProyecto.c: 109:         }
  9943     0A3A  2A46               	goto	i1l3526
  9944     0A3B                     i1l134:	
  9945                           ;masterProyecto.c: 111:         else if (PORTBbits.RB3 ==0){
  9946                           
  9947     0A3B  1986               	btfsc	6,3	;volatile
  9948     0A3C  2A3E               	goto	u453_21
  9949     0A3D  2A3F               	goto	u453_20
  9950     0A3E                     u453_21:
  9951     0A3E  2A46               	goto	i1l3526
  9952     0A3F                     u453_20:
  9953     0A3F                     i1l3512:
  9954                           
  9955                           ;masterProyecto.c: 112:             min--;
  9956     0A3F  30FF               	movlw	255
  9957     0A40  07DF               	addwf	_min,f
  9958     0A41  1803               	skipnc
  9959     0A42  0AE0               	incf	_min+1,f
  9960     0A43  30FF               	movlw	255
  9961     0A44  07E0               	addwf	_min+1,f
  9962     0A45  29FB               	goto	i1l3500
  9963     0A46                     i1l3526:
  9964                           
  9965                           ;masterProyecto.c: 122:         INTCONbits.RBIF=0;
  9966     0A46  100B               	bcf	11,0	;volatile
  9967     0A47                     i1l3528:
  9968                           
  9969                           ;masterProyecto.c: 124:      if (RCIF){
  9970     0A47  1283               	bcf	3,5	;RP0=0, select bank0
  9971     0A48  1303               	bcf	3,6	;RP1=0, select bank0
  9972     0A49  1E8C               	btfss	12,5	;volatile
  9973     0A4A  2A4C               	goto	u454_21
  9974     0A4B  2A4D               	goto	u454_20
  9975     0A4C                     u454_21:
  9976     0A4C  2A97               	goto	i1l3552
  9977     0A4D                     u454_20:
  9978     0A4D                     i1l3530:
  9979                           
  9980                           ;masterProyecto.c: 125:         PORTD = 0;
  9981     0A4D  0188               	clrf	8	;volatile
  9982     0A4E                     i1l3532:
  9983                           
  9984                           ;masterProyecto.c: 126:         if (RCREG == '1'){
  9985     0A4E  3031               	movlw	49
  9986     0A4F  061A               	xorwf	26,w	;volatile
  9987     0A50  1D03               	btfss	3,2
  9988     0A51  2A53               	goto	u455_21
  9989     0A52  2A54               	goto	u455_20
  9990     0A53                     u455_21:
  9991     0A53  2A5E               	goto	i1l3536
  9992     0A54                     u455_20:
  9993     0A54                     i1l3534:
  9994                           
  9995                           ;masterProyecto.c: 127:             USART_print(bufferQ);
  9996     0A54  30AC               	movlw	(low (_bufferQ| 0))& (0+255)
  9997     0A55  00F1               	movwf	i1USART_print@string
  9998     0A56  3000               	movlw	0
  9999     0A57  00F2               	movwf	i1USART_print@string+1
 10000     0A58  160A  118A  21C9  120A  158A  	fcall	i1_USART_print
 10001                           
 10002                           ;masterProyecto.c: 128:         }
 10003     0A5D  2A94               	goto	i1l3550
 10004     0A5E                     i1l3536:
 10005     0A5E  3032               	movlw	50
 10006     0A5F  061A               	xorwf	26,w	;volatile
 10007     0A60  1D03               	btfss	3,2
 10008     0A61  2A63               	goto	u456_21
 10009     0A62  2A64               	goto	u456_20
 10010     0A63                     u456_21:
 10011     0A63  2A6E               	goto	i1l3540
 10012     0A64                     u456_20:
 10013     0A64                     i1l3538:
 10014                           
 10015                           ;masterProyecto.c: 130:             USART_print(bufferTemp);
 10016     0A64  30A4               	movlw	(low (_bufferTemp| 0))& (0+255)
 10017     0A65  00F1               	movwf	i1USART_print@string
 10018     0A66  3000               	movlw	0
 10019     0A67  00F2               	movwf	i1USART_print@string+1
 10020     0A68  160A  118A  21C9  120A  158A  	fcall	i1_USART_print
 10021                           
 10022                           ;masterProyecto.c: 131:         }
 10023     0A6D  2A94               	goto	i1l3550
 10024     0A6E                     i1l3540:
 10025     0A6E  3033               	movlw	51
 10026     0A6F  061A               	xorwf	26,w	;volatile
 10027     0A70  1D03               	btfss	3,2
 10028     0A71  2A73               	goto	u457_21
 10029     0A72  2A74               	goto	u457_20
 10030     0A73                     u457_21:
 10031     0A73  2A7E               	goto	i1l3544
 10032     0A74                     u457_20:
 10033     0A74                     i1l3542:
 10034                           
 10035                           ;masterProyecto.c: 133:            USART_print(bufferHum);
 10036     0A74  30A8               	movlw	(low (_bufferHum| 0))& (0+255)
 10037     0A75  00F1               	movwf	i1USART_print@string
 10038     0A76  3000               	movlw	0
 10039     0A77  00F2               	movwf	i1USART_print@string+1
 10040     0A78  160A  118A  21C9  120A  158A  	fcall	i1_USART_print
 10041                           
 10042                           ;masterProyecto.c: 134:         }
 10043     0A7D  2A94               	goto	i1l3550
 10044     0A7E                     i1l3544:
 10045     0A7E  3034               	movlw	52
 10046     0A7F  061A               	xorwf	26,w	;volatile
 10047     0A80  1D03               	btfss	3,2
 10048     0A81  2A83               	goto	u458_21
 10049     0A82  2A84               	goto	u458_20
 10050     0A83                     u458_21:
 10051     0A83  2A94               	goto	i1l142
 10052     0A84                     u458_20:
 10053     0A84                     i1l3546:
 10054                           
 10055                           ;masterProyecto.c: 137:            USART_print(bufferAlarm);
 10056     0A84  0857               	movf	_bufferAlarm,w
 10057     0A85  00F1               	movwf	i1USART_print@string
 10058     0A86  3000               	movlw	0
 10059     0A87  1D03               	btfss	3,2
 10060     0A88  3080               	movlw	128
 10061     0A89  00F2               	movwf	i1USART_print@string+1
 10062     0A8A  160A  118A  21C9  120A  158A  	fcall	i1_USART_print
 10063     0A8F                     i1l3548:
 10064                           
 10065                           ;masterProyecto.c: 138:            bufferAlarm = "0";
 10066     0A8F  3025               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
 10067     0A90  1283               	bcf	3,5	;RP0=0, select bank0
 10068     0A91  1303               	bcf	3,6	;RP1=0, select bank0
 10069     0A92  00D7               	movwf	_bufferAlarm
 10070     0A93  2A94               	goto	i1l3550
 10071     0A94                     i1l142:
 10072     0A94                     i1l3550:
 10073                           
 10074                           ;masterProyecto.c: 141:         RCIF = 0;
 10075     0A94  1283               	bcf	3,5	;RP0=0, select bank0
 10076     0A95  1303               	bcf	3,6	;RP1=0, select bank0
 10077     0A96  128C               	bcf	12,5	;volatile
 10078     0A97                     i1l3552:
 10079                           
 10080                           ;masterProyecto.c: 144:      if (T0IF){
 10081     0A97  1D0B               	btfss	11,2	;volatile
 10082     0A98  2A9A               	goto	u459_21
 10083     0A99  2A9B               	goto	u459_20
 10084     0A9A                     u459_21:
 10085     0A9A  2ABE               	goto	i1l149
 10086     0A9B                     u459_20:
 10087     0A9B                     i1l3554:
 10088                           
 10089                           ;masterProyecto.c: 145:          TMR0 = 217 ;
 10090     0A9B  30D9               	movlw	217
 10091     0A9C  0081               	movwf	1	;volatile
 10092     0A9D                     i1l3556:
 10093                           
 10094                           ;masterProyecto.c: 146:          count++;
 10095     0A9D  3001               	movlw	1
 10096     0A9E  00A6               	movwf	??_isr
 10097     0A9F  0826               	movf	??_isr,w
 10098     0AA0  07FD               	addwf	_count,f
 10099     0AA1                     i1l3558:
 10100                           
 10101                           ;masterProyecto.c: 148:          if (count <= on_time)
 10102     0AA1  087D               	movf	_count,w
 10103     0AA2  00A6               	movwf	??_isr
 10104     0AA3  01A7               	clrf	??_isr+1
 10105     0AA4  0827               	movf	??_isr+1,w
 10106     0AA5  0251               	subwf	_on_time+1,w
 10107     0AA6  1D03               	skipz
 10108     0AA7  2AAA               	goto	u460_25
 10109     0AA8  0826               	movf	??_isr,w
 10110     0AA9  0250               	subwf	_on_time,w
 10111     0AAA                     u460_25:
 10112     0AAA  1C03               	skipc
 10113     0AAB  2AAD               	goto	u460_21
 10114     0AAC  2AAE               	goto	u460_20
 10115     0AAD                     u460_21:
 10116     0AAD  2AAF               	goto	i1l3562
 10117     0AAE                     u460_20:
 10118     0AAE                     i1l3560:
 10119                           
 10120                           ;masterProyecto.c: 149:     {;masterProyecto.c: 150:         RA1=1;
 10121     0AAE  1485               	bsf	5,1	;volatile
 10122     0AAF                     i1l3562:
 10123                           
 10124                           ;masterProyecto.c: 153:     if (count >= on_time)
 10125     0AAF  087D               	movf	_count,w
 10126     0AB0  00A6               	movwf	??_isr
 10127     0AB1  01A7               	clrf	??_isr+1
 10128     0AB2  0851               	movf	_on_time+1,w
 10129     0AB3  0227               	subwf	??_isr+1,w
 10130     0AB4  1D03               	skipz
 10131     0AB5  2AB8               	goto	u461_25
 10132     0AB6  0850               	movf	_on_time,w
 10133     0AB7  0226               	subwf	??_isr,w
 10134     0AB8                     u461_25:
 10135     0AB8  1C03               	skipc
 10136     0AB9  2ABB               	goto	u461_21
 10137     0ABA  2ABC               	goto	u461_20
 10138     0ABB                     u461_21:
 10139     0ABB  2ABD               	goto	i1l148
 10140     0ABC                     u461_20:
 10141     0ABC                     i1l3564:
 10142                           
 10143                           ;masterProyecto.c: 154:     {;masterProyecto.c: 155:         RA1=0;
 10144     0ABC  1085               	bcf	5,1	;volatile
 10145     0ABD                     i1l148:	
 10146                           ;masterProyecto.c: 157:     }
 10147                           
 10148                           
 10149                           ;masterProyecto.c: 158:      T0IF = 0;
 10150     0ABD  110B               	bcf	11,2	;volatile
 10151     0ABE                     i1l149:
 10152     0ABE  082C               	movf	??_isr+6,w
 10153     0ABF  00FF               	movwf	btemp+1
 10154     0AC0  082B               	movf	??_isr+5,w
 10155     0AC1  008A               	movwf	10
 10156     0AC2  082A               	movf	??_isr+4,w
 10157     0AC3  0084               	movwf	4
 10158     0AC4  0E29               	swapf	??_isr+3,w
 10159     0AC5  0083               	movwf	3
 10160     0AC6  0EFE               	swapf	btemp,f
 10161     0AC7  0E7E               	swapf	btemp,w
 10162     0AC8  0009               	retfie
 10163     0AC9                     __end_of_isr:
 10164                           
 10165                           	psect	intentry
 10166     0004                     __pintentry:	
 10167                           ;incstack = 0
 10168                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10169                           
 10170     0004                     interrupt_function:
 10171     007E                     saved_w	set	btemp
 10172     0004  00FE               	movwf	btemp
 10173     0005  0E03               	swapf	3,w
 10174     0006  1283               	bcf	3,5	;RP0=0, select bank0
 10175     0007  1303               	bcf	3,6	;RP1=0, select bank0
 10176     0008  00A9               	movwf	??_isr+3
 10177     0009  0804               	movf	4,w
 10178     000A  00AA               	movwf	??_isr+4
 10179     000B  080A               	movf	10,w
 10180     000C  00AB               	movwf	??_isr+5
 10181     000D  087F               	movf	btemp+1,w
 10182     000E  00AC               	movwf	??_isr+6
 10183     000F  120A  158A  2974   	ljmp	_isr
 10184                           
 10185                           	psect	text39
 10186     1434                     __ptext39:	
 10187 ;; *************** function i1_d2b *****************
 10188 ;; Defined at:
 10189 ;;		line 403 in file "masterProyecto.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;  to_convert      2    9[COMMON] int 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  multiplier      2    4[BANK0 ] unsigned int 
 10194 ;;  bcd             2    2[BANK0 ] unsigned int 
 10195 ;;  digit           2    0[BANK0 ] unsigned int 
 10196 ;; Return value:  Size  Location     Type
 10197 ;;                  2    9[COMMON] int 
 10198 ;; Registers used:
 10199 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10200 ;; Tracked objects:
 10201 ;;		On entry : 0/0
 10202 ;;		On exit  : 0/0
 10203 ;;		Unchanged: 0/0
 10204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10205 ;;      Params:         2       0       0       0       0
 10206 ;;      Locals:         0       6       0       0       0
 10207 ;;      Temps:          0       0       0       0       0
 10208 ;;      Totals:         2       6       0       0       0
 10209 ;;Total ram usage:        8 bytes
 10210 ;; Hardware stack levels used: 1
 10211 ;; Hardware stack levels required when called: 1
 10212 ;; This function calls:
 10213 ;;		i1___awdiv
 10214 ;;		i1___awmod
 10215 ;;		i1___wmul
 10216 ;; This function is called by:
 10217 ;;		_isr
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221     1434                     i1_d2b:	
 10222                           ;psect for function i1_d2b
 10223                           
 10224     1434                     i1l3420:	
 10225                           ;incstack = 0
 10226                           ; Regs used in i1_d2b: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10227                           
 10228                           
 10229                           ;masterProyecto.c: 404:     unsigned int bcd=0;
 10230     1434  1283               	bcf	3,5	;RP0=0, select bank0
 10231     1435  1303               	bcf	3,6	;RP1=0, select bank0
 10232     1436  01A2               	clrf	i1d2b@bcd
 10233     1437  01A3               	clrf	i1d2b@bcd+1
 10234     1438                     i1l3422:
 10235                           
 10236                           ;masterProyecto.c: 405:     unsigned int multiplier = 1;
 10237     1438  3001               	movlw	1
 10238     1439  00A4               	movwf	i1d2b@multiplier
 10239     143A  3000               	movlw	0
 10240     143B  00A5               	movwf	i1d2b@multiplier+1
 10241                           
 10242                           ;masterProyecto.c: 407:     while (to_convert >0){
 10243     143C  2C7D               	goto	i1l3430
 10244     143D                     i1l3424:
 10245                           
 10246                           ;masterProyecto.c: 408:         unsigned int digit = to_convert % 10;
 10247     143D  300A               	movlw	10
 10248     143E  00F0               	movwf	i1___awmod@divisor
 10249     143F  3000               	movlw	0
 10250     1440  00F1               	movwf	i1___awmod@divisor+1
 10251     1441  087A               	movf	i1d2b@to_convert+1,w
 10252     1442  00F3               	movwf	i1___awmod@dividend+1
 10253     1443  0879               	movf	i1d2b@to_convert,w
 10254     1444  00F2               	movwf	i1___awmod@dividend
 10255     1445  160A  118A  2380  160A  118A  	fcall	i1___awmod
 10256     144A  0871               	movf	?i1___awmod+1,w
 10257     144B  1283               	bcf	3,5	;RP0=0, select bank0
 10258     144C  1303               	bcf	3,6	;RP1=0, select bank0
 10259     144D  00A1               	movwf	i1d2b@digit+1
 10260     144E  0870               	movf	?i1___awmod,w
 10261     144F  00A0               	movwf	i1d2b@digit
 10262                           
 10263                           ;masterProyecto.c: 409:         bcd += digit * multiplier;
 10264     1450  0821               	movf	i1d2b@digit+1,w
 10265     1451  00F1               	movwf	i1___wmul@multiplier+1
 10266     1452  0820               	movf	i1d2b@digit,w
 10267     1453  00F0               	movwf	i1___wmul@multiplier
 10268     1454  0825               	movf	i1d2b@multiplier+1,w
 10269     1455  00F3               	movwf	i1___wmul@multiplicand+1
 10270     1456  0824               	movf	i1d2b@multiplier,w
 10271     1457  00F2               	movwf	i1___wmul@multiplicand
 10272     1458  160A  118A  2086  160A  118A  	fcall	i1___wmul
 10273     145D  0870               	movf	?i1___wmul,w
 10274     145E  1283               	bcf	3,5	;RP0=0, select bank0
 10275     145F  1303               	bcf	3,6	;RP1=0, select bank0
 10276     1460  07A2               	addwf	i1d2b@bcd,f
 10277     1461  1803               	skipnc
 10278     1462  0AA3               	incf	i1d2b@bcd+1,f
 10279     1463  0871               	movf	?i1___wmul+1,w
 10280     1464  07A3               	addwf	i1d2b@bcd+1,f
 10281     1465                     i1l3426:
 10282                           
 10283                           ;masterProyecto.c: 410:         multiplier *= 16;
 10284     1465  3004               	movlw	4
 10285     1466                     u442_25:
 10286     1466  1003               	clrc
 10287     1467  0DA4               	rlf	i1d2b@multiplier,f
 10288     1468  0DA5               	rlf	i1d2b@multiplier+1,f
 10289     1469  3EFF               	addlw	-1
 10290     146A  1D03               	skipz
 10291     146B  2C66               	goto	u442_25
 10292     146C                     i1l3428:
 10293                           
 10294                           ;masterProyecto.c: 411:         to_convert /= 10;
 10295     146C  300A               	movlw	10
 10296     146D  00F0               	movwf	i1___awdiv@divisor
 10297     146E  3000               	movlw	0
 10298     146F  00F1               	movwf	i1___awdiv@divisor+1
 10299     1470  087A               	movf	i1d2b@to_convert+1,w
 10300     1471  00F3               	movwf	i1___awdiv@dividend+1
 10301     1472  0879               	movf	i1d2b@to_convert,w
 10302     1473  00F2               	movwf	i1___awdiv@dividend
 10303     1474  160A  118A  2554  160A  118A  	fcall	i1___awdiv
 10304     1479  0871               	movf	?i1___awdiv+1,w
 10305     147A  00FA               	movwf	i1d2b@to_convert+1
 10306     147B  0870               	movf	?i1___awdiv,w
 10307     147C  00F9               	movwf	i1d2b@to_convert
 10308     147D                     i1l3430:
 10309                           
 10310                           ;masterProyecto.c: 407:     while (to_convert >0){
 10311     147D  087A               	movf	i1d2b@to_convert+1,w
 10312     147E  3A80               	xorlw	128
 10313     147F  00FF               	movwf	btemp+1
 10314     1480  3080               	movlw	128
 10315     1481  027F               	subwf	btemp+1,w
 10316     1482  1D03               	skipz
 10317     1483  2C86               	goto	u443_25
 10318     1484  3001               	movlw	1
 10319     1485  0279               	subwf	i1d2b@to_convert,w
 10320     1486                     u443_25:
 10321     1486  1803               	skipnc
 10322     1487  2C89               	goto	u443_21
 10323     1488  2C8A               	goto	u443_20
 10324     1489                     u443_21:
 10325     1489  2C3D               	goto	i1l3424
 10326     148A                     u443_20:
 10327     148A                     i1l3432:
 10328                           
 10329                           ;masterProyecto.c: 413:    return bcd;
 10330     148A  1283               	bcf	3,5	;RP0=0, select bank0
 10331     148B  1303               	bcf	3,6	;RP1=0, select bank0
 10332     148C  0823               	movf	i1d2b@bcd+1,w
 10333     148D  00FA               	movwf	?i1_d2b+1
 10334     148E  0822               	movf	i1d2b@bcd,w
 10335     148F  00F9               	movwf	?i1_d2b
 10336     1490                     i1l178:
 10337     1490  0008               	return
 10338     1491                     __end_ofi1_d2b:
 10339                           
 10340                           	psect	text40
 10341     1086                     __ptext40:	
 10342 ;; *************** function i1___wmul *****************
 10343 ;; Defined at:
 10344 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  multiplier      2    0[COMMON] unsigned int 
 10347 ;;  multiplicand    2    2[COMMON] unsigned int 
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  product         2    4[COMMON] unsigned int 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  2    0[COMMON] unsigned int 
 10352 ;; Registers used:
 10353 ;;		wreg, status,2, status,0
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10359 ;;      Params:         4       0       0       0       0
 10360 ;;      Locals:         2       0       0       0       0
 10361 ;;      Temps:          0       0       0       0       0
 10362 ;;      Totals:         6       0       0       0       0
 10363 ;;Total ram usage:        6 bytes
 10364 ;; Hardware stack levels used: 1
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		i1_d2b
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372     1086                     i1___wmul:	
 10373                           ;psect for function i1___wmul
 10374                           
 10375     1086                     i1l3154:	
 10376                           ;incstack = 0
 10377                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 10378                           
 10379     1086  01F4               	clrf	i1___wmul@product
 10380     1087  01F5               	clrf	i1___wmul@product+1
 10381     1088                     i1l3156:
 10382     1088  1C70               	btfss	i1___wmul@multiplier,0
 10383     1089  288B               	goto	u407_21
 10384     108A  288C               	goto	u407_20
 10385     108B                     u407_21:
 10386     108B  2892               	goto	i1l470
 10387     108C                     u407_20:
 10388     108C                     i1l3158:
 10389     108C  0872               	movf	i1___wmul@multiplicand,w
 10390     108D  07F4               	addwf	i1___wmul@product,f
 10391     108E  1803               	skipnc
 10392     108F  0AF5               	incf	i1___wmul@product+1,f
 10393     1090  0873               	movf	i1___wmul@multiplicand+1,w
 10394     1091  07F5               	addwf	i1___wmul@product+1,f
 10395     1092                     i1l470:
 10396     1092  3001               	movlw	1
 10397     1093                     u408_25:
 10398     1093  1003               	clrc
 10399     1094  0DF2               	rlf	i1___wmul@multiplicand,f
 10400     1095  0DF3               	rlf	i1___wmul@multiplicand+1,f
 10401     1096  3EFF               	addlw	-1
 10402     1097  1D03               	skipz
 10403     1098  2893               	goto	u408_25
 10404     1099                     i1l3160:
 10405     1099  3001               	movlw	1
 10406     109A                     u409_25:
 10407     109A  1003               	clrc
 10408     109B  0CF1               	rrf	i1___wmul@multiplier+1,f
 10409     109C  0CF0               	rrf	i1___wmul@multiplier,f
 10410     109D  3EFF               	addlw	-1
 10411     109E  1D03               	skipz
 10412     109F  289A               	goto	u409_25
 10413     10A0                     i1l3162:
 10414     10A0  0870               	movf	i1___wmul@multiplier,w
 10415     10A1  0471               	iorwf	i1___wmul@multiplier+1,w
 10416     10A2  1D03               	btfss	3,2
 10417     10A3  28A5               	goto	u410_21
 10418     10A4  28A6               	goto	u410_20
 10419     10A5                     u410_21:
 10420     10A5  2888               	goto	i1l3156
 10421     10A6                     u410_20:
 10422     10A6                     i1l3164:
 10423     10A6  0875               	movf	i1___wmul@product+1,w
 10424     10A7  00F1               	movwf	?i1___wmul+1
 10425     10A8  0874               	movf	i1___wmul@product,w
 10426     10A9  00F0               	movwf	?i1___wmul
 10427     10AA                     i1l472:
 10428     10AA  0008               	return
 10429     10AB                     __end_ofi1___wmul:
 10430                           
 10431                           	psect	text41
 10432     1380                     __ptext41:	
 10433 ;; *************** function i1___awmod *****************
 10434 ;; Defined at:
 10435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  divisor         2    0[COMMON] int 
 10438 ;;  dividend        2    2[COMMON] int 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;  sign            1    6[COMMON] unsigned char 
 10441 ;;  counter         1    5[COMMON] unsigned char 
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  2    0[COMMON] int 
 10444 ;; Registers used:
 10445 ;;		wreg, status,2, status,0
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10451 ;;      Params:         4       0       0       0       0
 10452 ;;      Locals:         2       0       0       0       0
 10453 ;;      Temps:          1       0       0       0       0
 10454 ;;      Totals:         7       0       0       0       0
 10455 ;;Total ram usage:        7 bytes
 10456 ;; Hardware stack levels used: 1
 10457 ;; This function calls:
 10458 ;;		Nothing
 10459 ;; This function is called by:
 10460 ;;		i1_d2b
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464     1380                     i1___awmod:	
 10465                           ;psect for function i1___awmod
 10466                           
 10467     1380                     i1l3212:	
 10468                           ;incstack = 0
 10469                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
 10470                           
 10471     1380  01F6               	clrf	i1___awmod@sign
 10472     1381                     i1l3214:
 10473     1381  1FF3               	btfss	i1___awmod@dividend+1,7
 10474     1382  2B84               	goto	u421_21
 10475     1383  2B85               	goto	u421_20
 10476     1384                     u421_21:
 10477     1384  2B8C               	goto	i1l3220
 10478     1385                     u421_20:
 10479     1385                     i1l3216:
 10480     1385  09F2               	comf	i1___awmod@dividend,f
 10481     1386  09F3               	comf	i1___awmod@dividend+1,f
 10482     1387  0AF2               	incf	i1___awmod@dividend,f
 10483     1388  1903               	skipnz
 10484     1389  0AF3               	incf	i1___awmod@dividend+1,f
 10485     138A                     i1l3218:
 10486     138A  01F6               	clrf	i1___awmod@sign
 10487     138B  0AF6               	incf	i1___awmod@sign,f
 10488     138C                     i1l3220:
 10489     138C  1FF1               	btfss	i1___awmod@divisor+1,7
 10490     138D  2B8F               	goto	u422_21
 10491     138E  2B90               	goto	u422_20
 10492     138F                     u422_21:
 10493     138F  2B95               	goto	i1l3224
 10494     1390                     u422_20:
 10495     1390                     i1l3222:
 10496     1390  09F0               	comf	i1___awmod@divisor,f
 10497     1391  09F1               	comf	i1___awmod@divisor+1,f
 10498     1392  0AF0               	incf	i1___awmod@divisor,f
 10499     1393  1903               	skipnz
 10500     1394  0AF1               	incf	i1___awmod@divisor+1,f
 10501     1395                     i1l3224:
 10502     1395  0870               	movf	i1___awmod@divisor,w
 10503     1396  0471               	iorwf	i1___awmod@divisor+1,w
 10504     1397  1903               	btfsc	3,2
 10505     1398  2B9A               	goto	u423_21
 10506     1399  2B9B               	goto	u423_20
 10507     139A                     u423_21:
 10508     139A  2BCA               	goto	i1l3242
 10509     139B                     u423_20:
 10510     139B                     i1l3226:
 10511     139B  01F5               	clrf	i1___awmod@counter
 10512     139C  0AF5               	incf	i1___awmod@counter,f
 10513     139D  2BA9               	goto	i1l3232
 10514     139E                     i1l3228:
 10515     139E  3001               	movlw	1
 10516     139F                     u424_25:
 10517     139F  1003               	clrc
 10518     13A0  0DF0               	rlf	i1___awmod@divisor,f
 10519     13A1  0DF1               	rlf	i1___awmod@divisor+1,f
 10520     13A2  3EFF               	addlw	-1
 10521     13A3  1D03               	skipz
 10522     13A4  2B9F               	goto	u424_25
 10523     13A5                     i1l3230:
 10524     13A5  3001               	movlw	1
 10525     13A6  00F4               	movwf	??i1___awmod
 10526     13A7  0874               	movf	??i1___awmod,w
 10527     13A8  07F5               	addwf	i1___awmod@counter,f
 10528     13A9                     i1l3232:
 10529     13A9  1FF1               	btfss	i1___awmod@divisor+1,7
 10530     13AA  2BAC               	goto	u425_21
 10531     13AB  2BAD               	goto	u425_20
 10532     13AC                     u425_21:
 10533     13AC  2B9E               	goto	i1l3228
 10534     13AD                     u425_20:
 10535     13AD                     i1l3234:
 10536     13AD  0871               	movf	i1___awmod@divisor+1,w
 10537     13AE  0273               	subwf	i1___awmod@dividend+1,w
 10538     13AF  1D03               	skipz
 10539     13B0  2BB3               	goto	u426_25
 10540     13B1  0870               	movf	i1___awmod@divisor,w
 10541     13B2  0272               	subwf	i1___awmod@dividend,w
 10542     13B3                     u426_25:
 10543     13B3  1C03               	skipc
 10544     13B4  2BB6               	goto	u426_21
 10545     13B5  2BB7               	goto	u426_20
 10546     13B6                     u426_21:
 10547     13B6  2BBD               	goto	i1l3238
 10548     13B7                     u426_20:
 10549     13B7                     i1l3236:
 10550     13B7  0870               	movf	i1___awmod@divisor,w
 10551     13B8  02F2               	subwf	i1___awmod@dividend,f
 10552     13B9  0871               	movf	i1___awmod@divisor+1,w
 10553     13BA  1C03               	skipc
 10554     13BB  03F3               	decf	i1___awmod@dividend+1,f
 10555     13BC  02F3               	subwf	i1___awmod@dividend+1,f
 10556     13BD                     i1l3238:
 10557     13BD  3001               	movlw	1
 10558     13BE                     u427_25:
 10559     13BE  1003               	clrc
 10560     13BF  0CF1               	rrf	i1___awmod@divisor+1,f
 10561     13C0  0CF0               	rrf	i1___awmod@divisor,f
 10562     13C1  3EFF               	addlw	-1
 10563     13C2  1D03               	skipz
 10564     13C3  2BBE               	goto	u427_25
 10565     13C4                     i1l3240:
 10566     13C4  3001               	movlw	1
 10567     13C5  02F5               	subwf	i1___awmod@counter,f
 10568     13C6  1D03               	btfss	3,2
 10569     13C7  2BC9               	goto	u428_21
 10570     13C8  2BCA               	goto	u428_20
 10571     13C9                     u428_21:
 10572     13C9  2BAD               	goto	i1l3234
 10573     13CA                     u428_20:
 10574     13CA                     i1l3242:
 10575     13CA  0876               	movf	i1___awmod@sign,w
 10576     13CB  1903               	btfsc	3,2
 10577     13CC  2BCE               	goto	u429_21
 10578     13CD  2BCF               	goto	u429_20
 10579     13CE                     u429_21:
 10580     13CE  2BD4               	goto	i1l3246
 10581     13CF                     u429_20:
 10582     13CF                     i1l3244:
 10583     13CF  09F2               	comf	i1___awmod@dividend,f
 10584     13D0  09F3               	comf	i1___awmod@dividend+1,f
 10585     13D1  0AF2               	incf	i1___awmod@dividend,f
 10586     13D2  1903               	skipnz
 10587     13D3  0AF3               	incf	i1___awmod@dividend+1,f
 10588     13D4                     i1l3246:
 10589     13D4  0873               	movf	i1___awmod@dividend+1,w
 10590     13D5  00F1               	movwf	?i1___awmod+1
 10591     13D6  0872               	movf	i1___awmod@dividend,w
 10592     13D7  00F0               	movwf	?i1___awmod
 10593     13D8                     i1l636:
 10594     13D8  0008               	return
 10595     13D9                     __end_ofi1___awmod:
 10596                           
 10597                           	psect	text42
 10598     1554                     __ptext42:	
 10599 ;; *************** function i1___awdiv *****************
 10600 ;; Defined at:
 10601 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;  divisor         2    0[COMMON] int 
 10604 ;;  dividend        2    2[COMMON] int 
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;  quotient        2    7[COMMON] int 
 10607 ;;  sign            1    6[COMMON] unsigned char 
 10608 ;;  counter         1    5[COMMON] unsigned char 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  2    0[COMMON] int 
 10611 ;; Registers used:
 10612 ;;		wreg, status,2, status,0
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10618 ;;      Params:         4       0       0       0       0
 10619 ;;      Locals:         4       0       0       0       0
 10620 ;;      Temps:          1       0       0       0       0
 10621 ;;      Totals:         9       0       0       0       0
 10622 ;;Total ram usage:        9 bytes
 10623 ;; Hardware stack levels used: 1
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		i1_d2b
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631     1554                     i1___awdiv:	
 10632                           ;psect for function i1___awdiv
 10633                           
 10634     1554                     i1l3168:	
 10635                           ;incstack = 0
 10636                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
 10637                           
 10638     1554  01F6               	clrf	i1___awdiv@sign
 10639     1555                     i1l3170:
 10640     1555  1FF1               	btfss	i1___awdiv@divisor+1,7
 10641     1556  2D58               	goto	u411_21
 10642     1557  2D59               	goto	u411_20
 10643     1558                     u411_21:
 10644     1558  2D60               	goto	i1l3176
 10645     1559                     u411_20:
 10646     1559                     i1l3172:
 10647     1559  09F0               	comf	i1___awdiv@divisor,f
 10648     155A  09F1               	comf	i1___awdiv@divisor+1,f
 10649     155B  0AF0               	incf	i1___awdiv@divisor,f
 10650     155C  1903               	skipnz
 10651     155D  0AF1               	incf	i1___awdiv@divisor+1,f
 10652     155E                     i1l3174:
 10653     155E  01F6               	clrf	i1___awdiv@sign
 10654     155F  0AF6               	incf	i1___awdiv@sign,f
 10655     1560                     i1l3176:
 10656     1560  1FF3               	btfss	i1___awdiv@dividend+1,7
 10657     1561  2D63               	goto	u412_21
 10658     1562  2D64               	goto	u412_20
 10659     1563                     u412_21:
 10660     1563  2D6D               	goto	i1l3182
 10661     1564                     u412_20:
 10662     1564                     i1l3178:
 10663     1564  09F2               	comf	i1___awdiv@dividend,f
 10664     1565  09F3               	comf	i1___awdiv@dividend+1,f
 10665     1566  0AF2               	incf	i1___awdiv@dividend,f
 10666     1567  1903               	skipnz
 10667     1568  0AF3               	incf	i1___awdiv@dividend+1,f
 10668     1569                     i1l3180:
 10669     1569  3001               	movlw	1
 10670     156A  00F4               	movwf	??i1___awdiv
 10671     156B  0874               	movf	??i1___awdiv,w
 10672     156C  06F6               	xorwf	i1___awdiv@sign,f
 10673     156D                     i1l3182:
 10674     156D  01F7               	clrf	i1___awdiv@quotient
 10675     156E  01F8               	clrf	i1___awdiv@quotient+1
 10676     156F                     i1l3184:
 10677     156F  0870               	movf	i1___awdiv@divisor,w
 10678     1570  0471               	iorwf	i1___awdiv@divisor+1,w
 10679     1571  1903               	btfsc	3,2
 10680     1572  2D74               	goto	u413_21
 10681     1573  2D75               	goto	u413_20
 10682     1574                     u413_21:
 10683     1574  2DAC               	goto	i1l3204
 10684     1575                     u413_20:
 10685     1575                     i1l3186:
 10686     1575  01F5               	clrf	i1___awdiv@counter
 10687     1576  0AF5               	incf	i1___awdiv@counter,f
 10688     1577  2D83               	goto	i1l3192
 10689     1578                     i1l3188:
 10690     1578  3001               	movlw	1
 10691     1579                     u414_25:
 10692     1579  1003               	clrc
 10693     157A  0DF0               	rlf	i1___awdiv@divisor,f
 10694     157B  0DF1               	rlf	i1___awdiv@divisor+1,f
 10695     157C  3EFF               	addlw	-1
 10696     157D  1D03               	skipz
 10697     157E  2D79               	goto	u414_25
 10698     157F                     i1l3190:
 10699     157F  3001               	movlw	1
 10700     1580  00F4               	movwf	??i1___awdiv
 10701     1581  0874               	movf	??i1___awdiv,w
 10702     1582  07F5               	addwf	i1___awdiv@counter,f
 10703     1583                     i1l3192:
 10704     1583  1FF1               	btfss	i1___awdiv@divisor+1,7
 10705     1584  2D86               	goto	u415_21
 10706     1585  2D87               	goto	u415_20
 10707     1586                     u415_21:
 10708     1586  2D78               	goto	i1l3188
 10709     1587                     u415_20:
 10710     1587                     i1l3194:
 10711     1587  3001               	movlw	1
 10712     1588                     u416_25:
 10713     1588  1003               	clrc
 10714     1589  0DF7               	rlf	i1___awdiv@quotient,f
 10715     158A  0DF8               	rlf	i1___awdiv@quotient+1,f
 10716     158B  3EFF               	addlw	-1
 10717     158C  1D03               	skipz
 10718     158D  2D88               	goto	u416_25
 10719     158E  0871               	movf	i1___awdiv@divisor+1,w
 10720     158F  0273               	subwf	i1___awdiv@dividend+1,w
 10721     1590  1D03               	skipz
 10722     1591  2D94               	goto	u417_25
 10723     1592  0870               	movf	i1___awdiv@divisor,w
 10724     1593  0272               	subwf	i1___awdiv@dividend,w
 10725     1594                     u417_25:
 10726     1594  1C03               	skipc
 10727     1595  2D97               	goto	u417_21
 10728     1596  2D98               	goto	u417_20
 10729     1597                     u417_21:
 10730     1597  2D9F               	goto	i1l3200
 10731     1598                     u417_20:
 10732     1598                     i1l3196:
 10733     1598  0870               	movf	i1___awdiv@divisor,w
 10734     1599  02F2               	subwf	i1___awdiv@dividend,f
 10735     159A  0871               	movf	i1___awdiv@divisor+1,w
 10736     159B  1C03               	skipc
 10737     159C  03F3               	decf	i1___awdiv@dividend+1,f
 10738     159D  02F3               	subwf	i1___awdiv@dividend+1,f
 10739     159E                     i1l3198:
 10740     159E  1477               	bsf	i1___awdiv@quotient,0
 10741     159F                     i1l3200:
 10742     159F  3001               	movlw	1
 10743     15A0                     u418_25:
 10744     15A0  1003               	clrc
 10745     15A1  0CF1               	rrf	i1___awdiv@divisor+1,f
 10746     15A2  0CF0               	rrf	i1___awdiv@divisor,f
 10747     15A3  3EFF               	addlw	-1
 10748     15A4  1D03               	skipz
 10749     15A5  2DA0               	goto	u418_25
 10750     15A6                     i1l3202:
 10751     15A6  3001               	movlw	1
 10752     15A7  02F5               	subwf	i1___awdiv@counter,f
 10753     15A8  1D03               	btfss	3,2
 10754     15A9  2DAB               	goto	u419_21
 10755     15AA  2DAC               	goto	u419_20
 10756     15AB                     u419_21:
 10757     15AB  2D87               	goto	i1l3194
 10758     15AC                     u419_20:
 10759     15AC                     i1l3204:
 10760     15AC  0876               	movf	i1___awdiv@sign,w
 10761     15AD  1903               	btfsc	3,2
 10762     15AE  2DB0               	goto	u420_21
 10763     15AF  2DB1               	goto	u420_20
 10764     15B0                     u420_21:
 10765     15B0  2DB6               	goto	i1l3208
 10766     15B1                     u420_20:
 10767     15B1                     i1l3206:
 10768     15B1  09F7               	comf	i1___awdiv@quotient,f
 10769     15B2  09F8               	comf	i1___awdiv@quotient+1,f
 10770     15B3  0AF7               	incf	i1___awdiv@quotient,f
 10771     15B4  1903               	skipnz
 10772     15B5  0AF8               	incf	i1___awdiv@quotient+1,f
 10773     15B6                     i1l3208:
 10774     15B6  0878               	movf	i1___awdiv@quotient+1,w
 10775     15B7  00F1               	movwf	?i1___awdiv+1
 10776     15B8  0877               	movf	i1___awdiv@quotient,w
 10777     15B9  00F0               	movwf	?i1___awdiv
 10778     15BA                     i1l623:
 10779     15BA  0008               	return
 10780     15BB                     __end_ofi1___awdiv:
 10781                           
 10782                           	psect	text43
 10783     11C9                     __ptext43:	
 10784 ;; *************** function i1_USART_print *****************
 10785 ;; Defined at:
 10786 ;;		line 45 in file "USART.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;  string          2    1[COMMON] PTR const unsigned char 
 10789 ;;		 -> NULL(0), STR_9(2), STR_2(2), STR_1(2), 
 10790 ;;		 -> bufferHum(4), bufferTemp(4), bufferQ(4), 
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;  i               2    6[COMMON] int 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      void 
 10795 ;; Registers used:
 10796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10802 ;;      Params:         2       0       0       0       0
 10803 ;;      Locals:         2       0       0       0       0
 10804 ;;      Temps:          3       0       0       0       0
 10805 ;;      Totals:         7       0       0       0       0
 10806 ;;Total ram usage:        7 bytes
 10807 ;; Hardware stack levels used: 1
 10808 ;; Hardware stack levels required when called: 1
 10809 ;; This function calls:
 10810 ;;		i1_USART_send
 10811 ;; This function is called by:
 10812 ;;		_isr
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816     11C9                     i1_USART_print:	
 10817                           ;psect for function i1_USART_print
 10818                           
 10819     11C9                     i1l3448:	
 10820                           ;incstack = 0
 10821                           ; Regs used in i1_USART_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10822                           
 10823                           
 10824                           ;USART.c: 45: void USART_print(const char *string);USART.c: 46: {;USART.c: 47:     int i
      +                           = 0;
 10825     11C9  01F6               	clrf	i1USART_print@i
 10826     11CA  01F7               	clrf	i1USART_print@i+1
 10827     11CB  29EE               	goto	i1l3454
 10828     11CC                     i1l3450:
 10829                           
 10830                           ;USART.c: 50:     {;USART.c: 51:         USART_send(string[i]);
 10831     11CC  0876               	movf	i1USART_print@i,w
 10832     11CD  0771               	addwf	i1USART_print@string,w
 10833     11CE  00F4               	movwf	??i1_USART_print+1
 10834     11CF  0872               	movf	i1USART_print@string+1,w
 10835     11D0  00F3               	movwf	??i1_USART_print
 10836     11D1  1803               	skipnc
 10837     11D2  0AF3               	incf	??i1_USART_print,f
 10838     11D3  1FF6               	btfss	i1USART_print@i,7
 10839     11D4  29D6               	goto	u444_20
 10840     11D5  03F3               	decf	??i1_USART_print,f
 10841     11D6                     u444_20:
 10842     11D6  0873               	movf	??i1_USART_print,w
 10843     11D7  00F5               	movwf	??i1_USART_print+2
 10844     11D8  0875               	movf	??i1_USART_print+2,w
 10845     11D9  1283               	bcf	3,5	;RP0=0, select bank0
 10846     11DA  1303               	bcf	3,6	;RP1=0, select bank0
 10847     11DB  00FF               	movwf	btemp+1
 10848     11DC  0874               	movf	??i1_USART_print+1,w
 10849     11DD  0084               	movwf	4
 10850     11DE  160A  118A  2000  160A  118A  	fcall	stringtab
 10851     11E3  160A  158A  277A  160A  118A  	fcall	i1_USART_send
 10852     11E8                     i1l3452:
 10853                           
 10854                           ;USART.c: 52:     }
 10855     11E8  3001               	movlw	1
 10856     11E9  07F6               	addwf	i1USART_print@i,f
 10857     11EA  1803               	skipnc
 10858     11EB  0AF7               	incf	i1USART_print@i+1,f
 10859     11EC  3000               	movlw	0
 10860     11ED  07F7               	addwf	i1USART_print@i+1,f
 10861     11EE                     i1l3454:
 10862     11EE  0876               	movf	i1USART_print@i,w
 10863     11EF  0771               	addwf	i1USART_print@string,w
 10864     11F0  00F4               	movwf	??i1_USART_print+1
 10865     11F1  0872               	movf	i1USART_print@string+1,w
 10866     11F2  00F3               	movwf	??i1_USART_print
 10867     11F3  1803               	skipnc
 10868     11F4  0AF3               	incf	??i1_USART_print,f
 10869     11F5  1FF6               	btfss	i1USART_print@i,7
 10870     11F6  29F8               	goto	u445_20
 10871     11F7  03F3               	decf	??i1_USART_print,f
 10872     11F8                     u445_20:
 10873     11F8  0873               	movf	??i1_USART_print,w
 10874     11F9  00F5               	movwf	??i1_USART_print+2
 10875     11FA  0875               	movf	??i1_USART_print+2,w
 10876     11FB  1283               	bcf	3,5	;RP0=0, select bank0
 10877     11FC  1303               	bcf	3,6	;RP1=0, select bank0
 10878     11FD  00FF               	movwf	btemp+1
 10879     11FE  0874               	movf	??i1_USART_print+1,w
 10880     11FF  0084               	movwf	4
 10881     1200  160A  118A  2000  160A  118A  	fcall	stringtab
 10882     1205  3A00               	xorlw	0
 10883     1206  1D03               	skipz
 10884     1207  2A09               	goto	u446_21
 10885     1208  2A0A               	goto	u446_20
 10886     1209                     u446_21:
 10887     1209  29CC               	goto	i1l3450
 10888     120A                     u446_20:
 10889     120A                     i1l375:
 10890     120A  0008               	return
 10891     120B                     __end_ofi1_USART_print:
 10892                           
 10893                           	psect	text44
 10894     1F7A                     __ptext44:	
 10895 ;; *************** function i1_USART_send *****************
 10896 ;; Defined at:
 10897 ;;		line 34 in file "USART.c"
 10898 ;; Parameters:    Size  Location     Type
 10899 ;;  data            1    wreg     const unsigned char 
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;  data            1    0[COMMON] const unsigned char 
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  1    wreg      void 
 10904 ;; Registers used:
 10905 ;;		wreg
 10906 ;; Tracked objects:
 10907 ;;		On entry : 0/0
 10908 ;;		On exit  : 0/0
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10911 ;;      Params:         0       0       0       0       0
 10912 ;;      Locals:         1       0       0       0       0
 10913 ;;      Temps:          0       0       0       0       0
 10914 ;;      Totals:         1       0       0       0       0
 10915 ;;Total ram usage:        1 bytes
 10916 ;; Hardware stack levels used: 1
 10917 ;; This function calls:
 10918 ;;		Nothing
 10919 ;; This function is called by:
 10920 ;;		i1_USART_print
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924     1F7A                     i1_USART_send:	
 10925                           ;psect for function i1_USART_send
 10926                           
 10927                           
 10928                           ;incstack = 0
 10929                           ; Regs used in i1_USART_send: [wreg]
 10930                           ;i1USART_send@data stored from wreg
 10931     1F7A  00F0               	movwf	i1USART_send@data
 10932     1F7B                     i1l3150:
 10933     1F7B                     i1l363:	
 10934                           ;USART.c: 34: void USART_send(const char data);USART.c: 35: {;USART.c: 36:     while(!TR
      +                          MT);
 10935                           
 10936     1F7B  1683               	bsf	3,5	;RP0=1, select bank1
 10937     1F7C  1303               	bcf	3,6	;RP1=0, select bank1
 10938     1F7D  1C98               	btfss	24,1	;volatile
 10939     1F7E  2F80               	goto	u406_21
 10940     1F7F  2F81               	goto	u406_20
 10941     1F80                     u406_21:
 10942     1F80  2F7B               	goto	i1l363
 10943     1F81                     u406_20:
 10944     1F81                     i1l3152:
 10945                           
 10946                           ;USART.c: 37:     TXREG = data;
 10947     1F81  0870               	movf	i1USART_send@data,w
 10948     1F82  1283               	bcf	3,5	;RP0=0, select bank0
 10949     1F83  1303               	bcf	3,6	;RP1=0, select bank0
 10950     1F84  0099               	movwf	25	;volatile
 10951     1F85                     i1l366:
 10952     1F85  0008               	return
 10953     1F86                     __end_ofi1_USART_send:
 10954                           
 10955                           	psect	text45
 10956     1F70                     __ptext45:	
 10957 ;; *************** function i1_I2C_Master_Write *****************
 10958 ;; Defined at:
 10959 ;;		line 65 in file "I2C.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  d               2   11[COMMON] unsigned int 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;		None
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1    wreg      void 
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0, pclath, cstack
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10973 ;;      Params:         2       0       0       0       0
 10974 ;;      Locals:         0       0       0       0       0
 10975 ;;      Temps:          0       0       0       0       0
 10976 ;;      Totals:         2       0       0       0       0
 10977 ;;Total ram usage:        2 bytes
 10978 ;; Hardware stack levels used: 1
 10979 ;; Hardware stack levels required when called: 1
 10980 ;; This function calls:
 10981 ;;		i1_I2C_Master_Wait
 10982 ;; This function is called by:
 10983 ;;		_isr
 10984 ;; This function uses a non-reentrant model
 10985 ;;
 10986                           
 10987     1F70                     i1_I2C_Master_Write:	
 10988                           ;psect for function i1_I2C_Master_Write
 10989                           
 10990     1F70                     i1l3444:	
 10991                           ;incstack = 0
 10992                           ; Regs used in i1_I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10993                           
 10994                           
 10995                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
 10996     1F70  160A  158A  2786  160A  158A  	fcall	i1_I2C_Master_Wait
 10997     1F75                     i1l3446:
 10998                           
 10999                           ;I2C.c: 68:     SSPBUF = d;
 11000     1F75  087B               	movf	i1I2C_Master_Write@d,w
 11001     1F76  1283               	bcf	3,5	;RP0=0, select bank0
 11002     1F77  1303               	bcf	3,6	;RP1=0, select bank0
 11003     1F78  0093               	movwf	19	;volatile
 11004     1F79                     i1l258:
 11005     1F79  0008               	return
 11006     1F7A                     __end_ofi1_I2C_Master_Write:
 11007                           
 11008                           	psect	text46
 11009     1F4C                     __ptext46:	
 11010 ;; *************** function i1_I2C_Master_Stop *****************
 11011 ;; Defined at:
 11012 ;;		line 55 in file "I2C.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;		None
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;		None
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  1    wreg      void 
 11019 ;; Registers used:
 11020 ;;		wreg, status,2, status,0, pclath, cstack
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11026 ;;      Params:         0       0       0       0       0
 11027 ;;      Locals:         0       0       0       0       0
 11028 ;;      Temps:          0       0       0       0       0
 11029 ;;      Totals:         0       0       0       0       0
 11030 ;;Total ram usage:        0 bytes
 11031 ;; Hardware stack levels used: 1
 11032 ;; Hardware stack levels required when called: 1
 11033 ;; This function calls:
 11034 ;;		i1_I2C_Master_Wait
 11035 ;; This function is called by:
 11036 ;;		_isr
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040     1F4C                     i1_I2C_Master_Stop:	
 11041                           ;psect for function i1_I2C_Master_Stop
 11042                           
 11043     1F4C                     i1l3440:	
 11044                           ;incstack = 0
 11045                           ; Regs used in i1_I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11046                           
 11047                           
 11048                           ;I2C.c: 57:     I2C_Master_Wait();
 11049     1F4C  160A  158A  2786  160A  158A  	fcall	i1_I2C_Master_Wait
 11050     1F51                     i1l3442:
 11051                           
 11052                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 11053     1F51  1683               	bsf	3,5	;RP0=1, select bank1
 11054     1F52  1303               	bcf	3,6	;RP1=0, select bank1
 11055     1F53  1511               	bsf	17,2	;volatile
 11056     1F54                     i1l255:
 11057     1F54  0008               	return
 11058     1F55                     __end_ofi1_I2C_Master_Stop:
 11059                           
 11060                           	psect	text47
 11061     1F43                     __ptext47:	
 11062 ;; *************** function i1_I2C_Master_Start *****************
 11063 ;; Defined at:
 11064 ;;		line 39 in file "I2C.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;		None
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;		None
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      void 
 11071 ;; Registers used:
 11072 ;;		wreg, status,2, status,0, pclath, cstack
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11078 ;;      Params:         0       0       0       0       0
 11079 ;;      Locals:         0       0       0       0       0
 11080 ;;      Temps:          0       0       0       0       0
 11081 ;;      Totals:         0       0       0       0       0
 11082 ;;Total ram usage:        0 bytes
 11083 ;; Hardware stack levels used: 1
 11084 ;; Hardware stack levels required when called: 1
 11085 ;; This function calls:
 11086 ;;		i1_I2C_Master_Wait
 11087 ;; This function is called by:
 11088 ;;		_isr
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092     1F43                     i1_I2C_Master_Start:	
 11093                           ;psect for function i1_I2C_Master_Start
 11094                           
 11095     1F43                     i1l3436:	
 11096                           ;incstack = 0
 11097                           ; Regs used in i1_I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11098                           
 11099                           
 11100                           ;I2C.c: 41:     I2C_Master_Wait();
 11101     1F43  160A  158A  2786  160A  158A  	fcall	i1_I2C_Master_Wait
 11102     1F48                     i1l3438:
 11103                           
 11104                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 11105     1F48  1683               	bsf	3,5	;RP0=1, select bank1
 11106     1F49  1303               	bcf	3,6	;RP1=0, select bank1
 11107     1F4A  1411               	bsf	17,0	;volatile
 11108     1F4B                     i1l249:
 11109     1F4B  0008               	return
 11110     1F4C                     __end_ofi1_I2C_Master_Start:
 11111                           
 11112                           	psect	text48
 11113     1F86                     __ptext48:	
 11114 ;; *************** function i1_I2C_Master_Wait *****************
 11115 ;; Defined at:
 11116 ;;		line 32 in file "I2C.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;		None
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;		None
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      void 
 11123 ;; Registers used:
 11124 ;;		wreg, status,2
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11130 ;;      Params:         0       0       0       0       0
 11131 ;;      Locals:         0       0       0       0       0
 11132 ;;      Temps:          0       0       0       0       0
 11133 ;;      Totals:         0       0       0       0       0
 11134 ;;Total ram usage:        0 bytes
 11135 ;; Hardware stack levels used: 1
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		i1_I2C_Master_Start
 11140 ;;		i1_I2C_Master_Stop
 11141 ;;		i1_I2C_Master_Write
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           
 11145     1F86                     i1_I2C_Master_Wait:	
 11146                           ;psect for function i1_I2C_Master_Wait
 11147                           
 11148     1F86                     i1l3146:	
 11149                           ;incstack = 0
 11150                           ; Regs used in i1_I2C_Master_Wait: [wreg+status,2]
 11151                           
 11152     1F86                     i1l243:	
 11153                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11154                           
 11155     1F86  1683               	bsf	3,5	;RP0=1, select bank1
 11156     1F87  1303               	bcf	3,6	;RP1=0, select bank1
 11157     1F88  1914               	btfsc	20,2	;volatile
 11158     1F89  2F8B               	goto	u404_21
 11159     1F8A  2F8C               	goto	u404_20
 11160     1F8B                     u404_21:
 11161     1F8B  2F86               	goto	i1l243
 11162     1F8C                     u404_20:
 11163     1F8C                     i1l3148:
 11164     1F8C  0811               	movf	17,w	;volatile
 11165     1F8D  391F               	andlw	31
 11166     1F8E  1D03               	btfss	3,2
 11167     1F8F  2F91               	goto	u405_21
 11168     1F90  2F92               	goto	u405_20
 11169     1F91                     u405_21:
 11170     1F91  2F86               	goto	i1l243
 11171     1F92                     u405_20:
 11172     1F92                     i1l246:
 11173     1F92  0008               	return
 11174     1F93                     __end_ofi1_I2C_Master_Wait:
 11175     007E                     btemp	set	126	;btemp
 11176     007E                     wtemp0	set	126
 11177                           
 11178                           	psect	idloc
 11179                           
 11180                           ;Config register IDLOC0 @ 0x2000
 11181                           ;	unspecified, using default values
 11182     2000                     	org	8192
 11183     2000  3FFF               	dw	16383
 11184                           
 11185                           ;Config register IDLOC1 @ 0x2001
 11186                           ;	unspecified, using default values
 11187     2001                     	org	8193
 11188     2001  3FFF               	dw	16383
 11189                           
 11190                           ;Config register IDLOC2 @ 0x2002
 11191                           ;	unspecified, using default values
 11192     2002                     	org	8194
 11193     2002  3FFF               	dw	16383
 11194                           
 11195                           ;Config register IDLOC3 @ 0x2003
 11196                           ;	unspecified, using default values
 11197     2003                     	org	8195
 11198     2003  3FFF               	dw	16383
 11199                           
 11200                           	psect	config
 11201                           
 11202                           ;Config register CONFIG1 @ 0x2007
 11203                           ;	Oscillator Selection bits
 11204                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11205                           ;	Watchdog Timer Enable bit
 11206                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11207                           ;	Power-up Timer Enable bit
 11208                           ;	PWRTE = OFF, PWRT disabled
 11209                           ;	RE3/MCLR pin function select bit
 11210                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11211                           ;	Code Protection bit
 11212                           ;	CP = OFF, Program memory code protection is disabled
 11213                           ;	Data Code Protection bit
 11214                           ;	CPD = OFF, Data memory code protection is disabled
 11215                           ;	Brown Out Reset Selection bits
 11216                           ;	BOREN = OFF, BOR disabled
 11217                           ;	Internal External Switchover bit
 11218                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11219                           ;	Fail-Safe Clock Monitor Enabled bit
 11220                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11221                           ;	Low Voltage Programming Enable bit
 11222                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11223                           ;	In-Circuit Debugger Mode bit
 11224                           ;	DEBUG = 0x1, unprogramme 11225     2007                     	org	8199
 11226     2007  20D4               	dw	8404
 11227                           
 11228                           ;Config register CONFIG2 @ 0x2008
 11229                           ;	Brown-out Reset Selection bit
 11230                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11231                           ;	Flash Program Memory Self Write Enable bits
 11232                           ;	WRT = OFF, Write protection off
 11233     2008                     	org	8200
 11234     2008  3FFF               	dw	16383

Data Sizes:
    Strings     40
    Constant    0
    Data        8
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     48      67
    BANK1            80     25      53
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    USART_print@string	PTR const unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), STR_9(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 
		 -> bufferHum(BANK1[4]), bufferTemp(BANK1[4]), bufferQ(BANK1[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_10(CODE[11]), STR_8(CODE[3]), STR_7(CODE[2]), 
		 -> STR_6(CODE[3]), STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[7]), 
		 -> bufferMin(BANK1[4]), bufferSec(BANK1[4]), bufferHour(BANK1[4]), bufferHum(BANK1[4]), 
		 -> bufferTemp(BANK1[4]), bufferQ(BANK1[4]), 

    floatToStr@buffer	PTR unsigned char  size(1) Largest target is 4
		 -> bufferQ(BANK1[4]), 

    intToStr@str	PTR unsigned char  size(1) Largest target is 4
		 -> bufferQ(BANK1[4]), 

    reverse@str	PTR unsigned char  size(1) Largest target is 4
		 -> bufferQ(BANK1[4]), 

    uint8ToString@str	PTR unsigned char  size(1) Largest target is 4
		 -> bufferMin(BANK1[4]), bufferSec(BANK1[4]), bufferHour(BANK1[4]), bufferHum(BANK1[4]), 
		 -> bufferTemp(BANK1[4]), 

    bufferAlarm	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), STR_9(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_I2C_Master_Write
    i1_d2b->i1___awdiv
    i1_USART_print->i1_USART_send
    i1_I2C_Master_Write->i1_d2b

Critical Paths under _main in BANK0

    _uint8ToString->___awdiv
    _setup->_USART_init_baud
    _USART_init_baud->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    _floatToStr->___flmul
    _intToStr->_reverse
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flsub->___xxtofl
    ___flmul->__Umul8_16
    _d2b->___awdiv
    _b2d->_I2C_Master_Read
    _b2d->___wmul
    _USART_print->_USART_send
    _I2C_Master_Write->_d2b

Critical Paths under _isr in BANK0

    _isr->i1_d2b
    i1_I2C_Master_Write->i1_d2b

Critical Paths under _main in BANK1

    _main->_floatToStr

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   28893
                                             22 BANK1      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                        _USART_print
                            ___awdiv
                           ___xxtofl
                                _b2d
                                _d2b
                         _floatToStr
                              _setup
                      _uint8ToString
 ---------------------------------------------------------------------------------
 (1) _uint8ToString                                       10     9      1    2555
                                             22 BANK0     10     9      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3564
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _USART_init_baud
                           _ioc_init
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             1     1      0      66
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USART_init_baud                                     10     6      4     610
                                             27 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1332
                                             18 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                             14 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     684
                                             17 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                             17 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                             14 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     564
                                             27 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                             13 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _floatToStr                                          22    15      7   12235
                                              0 BANK1     22    15      7
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _intToStr
 ---------------------------------------------------------------------------------
 (2) _intToStr                                             8     3      5    2806
                                             24 BANK0      8     3      5
                            ___awdiv
                            ___awmod
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                             11     9      2     378
                                             13 BANK0     11     9      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                             22 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             33 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             36 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             13 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                             13 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                             22 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                             13 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                             13 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _d2b                                                  8     6      2    2622
                                             22 BANK0      8     6      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                             13 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                             13 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _b2d                                                  4     2      2     668
                                             19 BANK0      4     2      2
                    _I2C_Master_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART_print                                          7     5      2     388
                                             14 BANK0      7     5      2
                         _USART_send
 ---------------------------------------------------------------------------------
 (2) _USART_send                                           1     1      0      22
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    2674
                                             30 BANK0      2     0      2
                    _I2C_Master_Wait
                                _d2b (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     501
                                             13 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  7     7      0    1636
                                              6 BANK0      7     7      0
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
                      i1_USART_print
                              i1_d2b
 ---------------------------------------------------------------------------------
 (6) i1_d2b                                                8     6      2    1086
                                              9 COMMON     2     0      2
                                              0 BANK0      6     6      0
                          i1___awdiv
                          i1___awmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) i1_USART_print                                        7     5      2     216
                                              1 COMMON     7     5      2
                       i1_USART_send
 ---------------------------------------------------------------------------------
 (7) i1_USART_send                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Master_Write                                   2     0      2     334
                                             11 COMMON     2     0      2
                  i1_I2C_Master_Wait
                              i1_d2b (ARG)
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Master_Stop                                    0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Master_Start                                   0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Master_Wait                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
     _d2b (ARG)
       ___awdiv
       ___awmod
       ___wmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _USART_print
     _USART_send
   ___awdiv
   ___xxtofl
     ___awdiv (ARG)
   _b2d
     _I2C_Master_Read (ARG)
     ___wmul (ARG)
   _d2b
   _floatToStr
     ___fladd
     ___flge
     ___flmul
       __Umul8_16
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
     ___xxtofl
     _intToStr
       ___awdiv
       ___awmod
       _reverse
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _USART_init_baud
       ___lldiv
     _ioc_init
   _uint8ToString
     ___awdiv
     ___awmod

 _isr (ROOT)
   i1_I2C_Master_Start
     i1_I2C_Master_Wait
   i1_I2C_Master_Stop
     i1_I2C_Master_Wait
   i1_I2C_Master_Write
     i1_I2C_Master_Wait
     i1_d2b (ARG)
       i1___awdiv
       i1___awmod
       i1___wmul
   i1_USART_print
     i1_USART_send
   i1_d2b

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     19      35       7       66.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     30      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      12        0.0%
ABS                  0      0      86       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 30 20:17:20 2023

                     _USART_print 120B                                 pc 0002                   ??_uint8ToString 0037  
                    ___awdiv@sign 0033                                fsr 0004               ___wmul@multiplicand 002F  
                i1___wmul@product 0074               __Umul8_16@word_mpld 0033                               l203 1700  
                             l211 0CBA                               l300 1052                               l301 1053  
                             l302 1059                               l303 105A                               l240 11C8  
                             l304 1060                               l312 1FB9                               l321 1553  
                             l306 1061                               l330 1296                               l243 1F93  
                             l252 1F5D                               l172 10FA                               l324 118E  
                             l261 114B                               l309 1FE3                               l246 1F9F  
                             l262 114E                               l318 132A                               l182 17FF  
                             l263 1155                               l255 1F6F                               l360 137F  
                             l249 1F66                               l281 1FFF                               l169 07FC  
                             l258 1041                               l178 14F1                               l194 12DE  
                             l506 1622                               l363 1FBD                               l366 1FC7  
                             l470 10B9                               l375 1250                               l623 168B  
                             l472 10D1                               l298 104B                               l299 104C  
                             l636 1433                               l644 0834                               l652 1FAC  
                             l805 0774                               l806 077E                               l647 08A0  
                             l663 1763                               l903 08DE                               l648 08B9  
                             l656 1778                               l809 1085                               l905 0973  
                             l666 1778                               l763 0582                               l916 093D  
                             l917 0949                               l909 0921                               l871 0FF3  
                             l767 0605                               l880 1123                               l784 06CE  
                             l776 077E                               l865 0F6F                               l769 05DE  
                             l794 0714                               l859 0FFF                               l788 06F2  
                             l797 0752                               l878 1111                               _GIE 005F  
                             _RA1 0029                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             _PS0 0408                               _PS1 0409                               _PS2 040A  
                             _PSA 040B                               _b2d 10D2                               _d2b 1491  
                 _USART_init_baud 132B                               _min 005F                               _sec 005D  
                             _isr 0974                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0033                      ___flmul@aexp 0048                      ___flmul@bexp 0049  
                    ___flmul@sign 0043                      ___flmul@temp 004E                      ___flmul@prod 004A  
                            ?_b2d 0033                              ?_d2b 0036                      ___fltol@exp1 004A  
                            l3000 0D14                              l3010 0D3D                              l3002 0D19  
                            l3020 0DD6                              l3012 0D58                              l3030 0E35  
                            l3022 0DDF                              l3014 0D74                              l3006 0D22  
                            l3110 08E6                              l3102 08BD                              l3040 0ECD  
                            l3032 0E4C                              l3024 0DED                              l3016 0D9E  
                            l3008 0D30                              l3120 0906                              l3104 08C2  
                            l4000 0387                              l3050 0F3B                              l3042 0EF3  
                            l3034 0E69                              l3026 0E0A                              l3018 0DBA  
                            l3130 0937                              l3122 090A                              l3114 08EF  
                            l3106 08C6                              l2410 1049                              l4010 03F0  
                            l4002 038E                              l2500 1640                              l3060 0F53  
                            l3052 0F3F                              l3044 0F1B                              l3036 0E94  
                            l3028 0E18                              l3140 096A                              l3132 0941  
                            l3124 0918                              l3116 08F2                              l3108 08D6  
                            l2412 1050                              l2420 115F                              l3300 07AA  
                            l4020 0428                              l4012 0403                              l4004 0394  
                            l2510 1658                              l2502 1646                              l3070 0F74  
                            l3062 0F54                              l3054 0F40                              l3046 0F24  
                            l3038 0EA2                              l3142 096B                              l3134 094B  
                            l3126 0928                              l3118 08FF                              l2414 1057  
                            l2430 117B                              l2422 1160                              l3310 07F2  
                            l3302 07CE                              l4030 0465                              l4022 042F  
                            l4014 040D                              l4006 039B                              l2512 1669  
                            l2504 1649                              l2520 167D                              l3072 0F79  
                            l3080 0FAA                              l3064 0F58                              l3056 0F49  
                            l3048 0F32                              l2600 056A                              l3136 0961  
                            l3128 0933                              l2440 129C                              l2416 105E  
                            l2408 1045                              l2432 1181                              l2424 116E  
                            l3320 07FA                              l3312 07F3                              l3304 07D9  
                            l4040 04AD                              l4032 0477                              l4024 0441  
                            l4016 0417                              l4008 03AD                              l3330 113A  
                            l3250 1F5E                              l2522 1682                              l2514 166F  
                            l2506 1650                              l2530 13DC                              l3090 0FDD  
                            l3082 0FB7                              l3074 0F87                              l3066 0F6C  
                            l3058 0F4F                              l2610 0588                              l2602 056F  
                            l3138 0966                              l2442 12A5                              l2450 1FCB  
                            l2434 1184                              l2426 1171                              l2418 1159  
                            l3322 07FB                              l3314 07F4                              l3306 07EE  
                            l4050 04D4                              l4042 04B8                              l4034 0482  
                            l4026 044C                              l4018 041E                              l3332 113F  
                            l3324 1124                              l3340 1F55                              l3252 1F63  
                            l2524 1687                              l2516 1670                              l2508 1654  
                            l2540 13F0                              l2532 13E0                              l3260 1495  
                            l3092 0FE9                              l3084 0FC2                              l3076 0F8B  
                            l2700 06D6                              l2620 0596                              l2612 058C  
                            l2604 0577                              l2444 12C4                              l2460 15BB  
                            l2452 1FCC                              l2436 118B                              l2428 1178  
                            l3316 07F5                              l3308 07F1                              l4060 0511  
                            l4052 04DE                              l4044 04BF                              l4036 0494  
                            l4028 045E                              l3334 1147                              l3326 1129  
                            l3342 1F5A                              l3254 1038                              l2518 1677  
                            l2550 1408                              l2542 13F6                              l2534 13E5  
                            l3270 14EB                              l3262 149A                              l3094 0FED  
                            l3086 0FD1                              l3078 0FA4                              l2710 06F1  
                            l2702 06DB                              l2630 05A0                              l2622 0598  
                            l2614 0590                              l2606 0578                              l2446 12CA  
                            l2438 129A                              l2470 15EA                              l2462 15CD  
                            l2454 1FD2                              l3318 07F6                              l3350 177E  
                            l4054 04EE                              l4046 04C8                              l4062 0514  
                            l4038 049B                              l3336 114F                              l3328 1131  
                            l3256 103D                              l3280 1210                              l3344 10D2  
                            l2560 142A                              l2552 1412                              l2544 13F9  
                            l2536 13E7                              l2528 13D9                              l3264 14C4  
                            l3096 0FEE                              l3088 0FDB                              l2712 06F6  
                            l2720 0702                              l2640 05AA                              l2632 05A2  
                            l2624 059A                              l2616 0592                              l2608 057A  
                            l2448 12D0                              l2472 15FC                              l2464 15D0  
                            l2480 161A                              l2456 1FD5                              l2800 1272  
                            l3360 178D                              l3352 177F                              l4064 051A  
                            l4056 04F4                              l4048 04CE                              l3274 1F67  
                            l3282 122C                              l2490 162F                              l2562 142F  
                            l2554 1418                              l2546 1400                              l2538 13EB  
                            l3266 14CB                              l3258 1491                              l3098 0FF7  
                            l2714 06F9                              l2706 06E4                              l2722 0706  
                            l2650 05E2                              l2642 05AC                              l2634 05A4  
                            l2626 059C                              l2618 0594                              l2570 0530  
                            l2474 160A                              l2466 15DD                              l2458 1FE0  
                            l2802 127A                              l2810 1FFD                              l3290 078F  
                            l3370 17CC                              l3362 17A8                              l3354 1784  
                            l4066 051F                              l4058 0503                              l3276 1F6C  
                            l3284 1234                              l2492 1631                              l2484 1623  
                            l2556 141F                              l2548 1404                              l3268 14DE  
                            l2900 0854                              l2740 074E                              l2732 0719  
                            l2724 0707                              l2716 06FB                              l2708 06ED  
                            l2660 05F9                              l2652 05E9                              l2636 05A6  
                            l2628 059E                              l2644 05AE                              l2580 0547  
                            l2572 0534                              l2476 160B                              l2468 15E1  
                            l2820 1372                              l2812 1FFE                              l2804 1FE7  
                            l3292 0795                              l3380 17F5                              l3372 17CD  
                            l3364 17AC                              l3356 1789                              l3348 177C  
                            l3278 120B                              l2494 1635                              l2486 1626  
                            l2558 1425                              l2902 0878                              l2750 076A  
                            l2742 0757                              l2734 071E                              l2726 070B  
                            l2718 0700                              l2670 0617                              l2654 05EB  
                            l2662 05FD                              l2646 05AF                              l2638 05A8  
                            l2590 055B                              l2582 0548                              l2574 0535  
                            l2566 0527                              l2478 1614                              l2830 11C5  
                            l2822 137B                              l2814 132B                              l2806 1FF7  
                            l3294 0798                              l3286 077F                              l3374 17D1  
                            l3366 17C0                              l2496 163A                              l2488 162A  
                            l2904 087C                              l2760 10FE                              l2912 1FA0  
                            l2752 076E                              l2744 075C                              l2736 072C  
                            l2728 0711                              l2680 063F                              l2672 062E  
                            l2664 0609                              l2656 05EF                              l2648 05C6  
                            l2592 055C                              l2576 053A                              l2584 054A  
                            l2568 052C                              l2920 1701                              l3800 0AC9  
                            l2832 11C6                              l2824 118F                              l2840 1502  
                            l2816 1340                              l2808 1FFA                              l3296 079B  
                            l3288 0785                              l3376 17ED                              l3368 17C5  
                            l2498 163E                              l2906 08B6                              l2770 111F  
                            l2762 1100                              l2914 1FAA                              l2754 0770  
                            l2746 0764                              l2738 0730                              l2690 0668  
                            l2682 0643                              l2674 0632                              l2666 060E  
                            l2658 05F0                              l2594 0560                              l2586 0552  
                            l2578 053F                              l2930 1729                              l2922 170C  
                            l2850 16A9                              l3810 0B59                              l3802 0AF2  
                            l2834 11C7                              l2826 1193                              l2842 1512  
                            l2818 1340                              l3298 07A9                              l3378 17F1  
                            l2908 08B8                              l2764 1107                              l2916 1FAC  
                            l2756 0779                              l2748 0769                              l2692 06A6  
                            l2684 0644                              l2676 0636                              l2596 0564  
                            l2588 0555                              l2932 1731                              l2860 16D9  
                            l2852 16AF                              l3820 0C03                              l3812 0BAD  
                            l3804 0B27                              l2828 1196                              l2844 1518  
                            l2836 14F2                              l2780 12F4                              l3900 0186  
                            l2870 1F93                              l2766 110B                              l2758 077D  
                            l2694 06AC                              l2686 064D                              l2678 063D  
                            l2598 0565                              l2950 1758                              l2942 173F  
                            l2934 1733                              l2926 1715                              l2862 16E7  
                            l2854 16C2                              l2846 168C                              l3830 0C7F  
                            l3822 0C43                              l3814 0BB0                              l3806 0B2C  
                            l2774 1FAD                              l2838 14F8                              l2790 1319  
                            l2782 12F7                              l3910 01B4                              l3902 0190  
                            l2872 1F99                              l2880 10AF                              l2768 111A  
                            l2696 06B1                              l2688 0652                              l2952 1768  
                            l2936 1737                              l2944 1751                              l2928 1728  
                            l2864 16F3                              l2856 16C9                              l2848 1691  
                            l3832 0C83                              l3824 0C67                              l3816 0BEF  
                            l3808 0B30                              l2792 131C                              l2784 12FD  
                            l2776 12E2                              l3920 01E6                              l3912 01C2  
                            l3904 0195                              l3840 0048                              l2874 1FBD  
                            l2882 10B3                              l2970 0CC9                              l2962 0CBB  
                            l2698 06C0                              l2954 176D                              l2866 16FC  
                            l2858 16D3                              l3834 0CB2                              l3826 0C6B  
                            l3818 0BF5                              l2794 1322                              l2778 12E7  
                            l2786 1306                              l3930 0215                              l3922 01F1  
                            l3914 01C7                              l3906 01A4                              l3850 007D  
                            l3842 004D                              l2876 1FC3                              l2884 10C0  
                            l2892 0816                              l2980 0CE5                              l2972 0CCE  
                            l2964 0CC0                              l2956 1062                              l3836 0CB6  
                            l3828 0C78                              l2788 130C                              l2796 1251  
                            l3940 0247                              l3932 0223                              l3924 01F6  
                            l3916 01D6                              l3908 01A9                              l3860 00BD  
                            l3852 008C                              l3844 0058                              l2886 10C7  
                            l2878 10AB                              l2894 082C                              l2990 0CF8  
                            l2982 0CEA                              l2974 0CD3                              l2966 0CC4  
                            l2958 1066                              l2798 1256                              l3950 0281  
                            l3942 0251                              l3934 0228                              l3926 0205  
                            l3918 01DB                              l3870 00EC                              l3862 00C2  
                            l3854 0091                              l3846 0062                              l3838 0038  
                            l2888 10CD                              l2896 0848                              l2992 0CFD  
                            l2984 0CEE                              l2976 0CDB                              l2968 0CC8  
                            l3960 02AC                              l3952 0286                              l3944 0256  
                            l3936 0237                              l3928 020A                              l3880 0126  
                            l3872 0102                              l3864 00D1                              l3856 009C  
                            l3848 0078                              l2898 0850                              l2994 0D05  
                            l2986 0CF2                              l2978 0CDD                              l3970 02E7  
                            l3962 02C7                              l3954 0291                              l3946 0261  
                            l3938 023C                              l3890 0154                              l3882 0130  
                            l3874 0107                              l3866 00D6                              l3858 00A7  
                            l2996 0D07                              l2988 0CF3                              l3980 0321  
                            l3972 02EC                              l3964 02CC                              l3956 029C  
                            l3948 027C                              l3892 0162                              l3884 0135  
                            l3876 0116                              l3868 00E1                              l2998 0D0F  
                            l3990 0356                              l3982 032B                              l3974 02F7  
                            l3966 02D1                              l3958 02A1                              l3894 0167  
                            l3886 0144                              l3878 011B                              l3992 035D  
                            l3984 0335                              l3976 0312                              l3968 02DC  
                            l3896 0176                              l3888 0149                              l3994 0368  
                            l3986 033A                              l3978 0317                              l3898 017B  
                            l3996 0375                              l3988 034B                              ?_isr 0070  
                            l3998 037C                              STR_1 1034                              STR_2 1029  
                            STR_3 1024                              STR_4 102E                              STR_5 1029  
                            STR_6 102B                              STR_7 1029                              STR_8 1031  
                            STR_9 1036                              _T0IE 005D                              _T0IF 005A  
                            _T0CS 040D                              u3000 0706                              u3001 0705  
                            u3010 070B                              u3011 070A                              _T0SE 040C  
                            u3100 0769                              u3020 0711                              _IOCB 0096  
                            u3101 0768                              u3021 0710                              u3110 076E  
                            u3030 0718                              u3111 076D                              u3031 0717  
                            u3120 077D                              u3040 071E                              u4000 0941  
                            u2400 12DE                              u3200 1260                              u3121 077C  
                            u3041 071D                              u4001 0940                              u2401 12DD  
                            u3130 110B                              u3050 0730                              u4010 0956  
                            u2410 15CD                              u3210 1284                              u3131 110A  
                            u3051 072F                              u2411 15CC                              u3300 1FC3  
                            u2500 1646                              u3060 073F                              u4020 0966  
                            u3220 1296                              u3301 1FC2                              u2501 1645  
                            u4021 0965                              u2405 12DA                              u3221 1295  
                            u3310 10B3                              u3150 111F                              u3070 074E  
                            u4030 096A                              u2430 15E1                              u2350 1049  
                            u3230 1350                              u3311 10B2                              u3151 111E  
                            u3071 074D                              u4031 0969                              u4015 0951  
                            u2431 15E0                              u2351 1048                              u2520 1658  
                            u2600 13F6                              u3080 0757                              u2360 1050  
                            u3160 12E7                              u3240 137B                              u2521 1657  
                            u2601 13F5                              u3401 088B                              u3145 1112  
                            u3081 0756                              u3065 073A                              u2425 15D2  
                            u2361 104F                              u3161 12E6                              u3241 137A  
                            u3410 08B6                              u3402 088C                              u3090 075C  
                            u2450 15FC                              u3250 11A6                              u2370 1057  
                            u2515 164A                              u3411 08B5                              u3403 0891  
                            u3091 075B                              u2451 15FB                              u2371 1056  
                            u3235 134B                              u3340 10CD                              u2540 1669  
                            u2620 1408                              u3404 0892                              u3420 1FAA  
                            u2700 055B                              u3260 16C8                              u2380 105E  
                            u3180 130C                              u3341 10CC                              u3325 10BA  
                            u2541 1668                              u2621 1407                              u3405 0897  
                            u3421 1FA9                              u2701 055A                              u3261 16C7  
                            u2445 15E3                              u2381 105D                              u3181 130B  
                            u2630 1412                              u4310 14EB                              u3406 0898  
                            u3350 082C                              u2710 0564                              u3510 1768  
                            u3430 170C                              u3270 16E7                              u2470 161A  
                            u3335 10C1                              u2535 1659                              u2631 1411  
                            u2615 13FA                              u4311 14EA                              u3415 08B2  
                            u3351 082B                              u2711 0563                              u3511 1767  
                            u3431 170B                              u3271 16E6                              u2471 1619  
                            u2455 15F8                              u3255 11A1                              u3175 12ED  
                            u5007 0498                              u3280 1F99                              u4320 121A  
                            u2560 167D                              u2480 162A                              u3360 0848  
                            u3600 0D19                              u2800 05EF                              u2720 056A  
                            u3520 176D                              u3440 1723                              u3281 1F98  
                            u2561 167C                              u2545 1665                              u2481 1629  
                            u4305 14C5                              u3361 0847                              u3601 0D18  
                            u2801 05EE                              u2721 0569                              u3521 176C  
                            u3505 175A                              u2465 160C                              u5017 04AA  
                            u3290 1F9F                              u4330 123E                              u2570 1682  
                            u2490 1635                              u2650 1425                              u3370 0854  
                            u3530 0CC8                              u2730 056F                              u3450 1737  
                            u3291 1F9E                              u2571 1681                              u2555 1671  
                            u2491 1634                              u2651 1424                              u2635 140E  
                            u4315 14E7                              u3371 0853                              u3611 0D66  
                            u3531 0CC7                              u2731 056E                              u3451 1736  
                            u3275 16E3                              u5107 151E                              u3195 1312  
                            u2395 1163                              u5027 04BC                              u4340 1250  
                            u2660 142A                              u2580 13E0                              u3612 0D6D  
                            u3540 0CCE                              u2900 0668                              u2820 0605  
                            u2740 0588                              u3460 173E                              u4341 124F  
                            u2661 1429                              u2645 1419                              u2581 13DF  
                            u3381 0863                              u3701 0E86                              u3621 0D82  
                            u3613 0D74                              u3541 0CCD                              u2901 0667  
                            u2821 0604                              u2741 0587                              u3461 173D  
                            u3445 171E                              u5117 1FDB                              u5037 04E6  
                            u4350 1147                              u2590 13EB                              u3390 087C  
                            u3382 0864                              u3702 0E8D                              u3622 0D89  
                            u3550 0CD3                              u2830 0609                              u2750 058C  
                            u2670 0534                              u4351 1146                              u2591 13EA  
                            u3391 087B                              u3383 0869                              u3711 0EB1  
                            u3703 0E94                              u3631 0DAC                              u3623 0D90  
                            u3551 0CD2                              u2911 067F                              u2903 0664  
                            u2831 0608                              u2815 05F2                              u2751 058B  
                            u2671 0533                              u5047 04FC                              u3384 086A  
                            u3800 0F53                              u3720 0ED9                              u3712 0EB8  
                            u3632 0DB3                              u3560 0CF2                              u2920 0693  
                            u2912 0680                              u2840 060E                              u2760 05C6  
                            u2680 053A                              u3480 1750                              u4360 1784  
                            u3385 086F                              u3801 0F52                              u3713 0EBF  
                            u3641 0DC8                              u3633 0DBA                              u3561 0CF1  
                            u2921 0694                              u2913 0685                              u2841 060D  
                            u2761 05C5                              u2681 0539                              u3481 174F  
                            u4361 1783                              u5057 050B                              u3386 0870  
                            u3810 0F58                              u3642 0DCF                              u3570 0CF8  
                            u2930 06B1                              u2922 0699                              u2914 0686  
                            u2770 05D1                              u2690 053F                              u3490 1757  
                            u4370 17C5                              u3811 0F57                              u3731 0EE5  
                            u3643 0DD6                              u3571 0CF7                              u2931 06B0  
                            u2923 069A                              u2915 068B                              u2851 0620  
                            u2771 05CF                              u2691 053E                              u3491 1756  
                            u3475 1740                              u5067 1175                              u4371 17C4  
                            _PEIE 005E                              u3820 0F6C                              u3740 0F01  
                            u3732 0EEC                              u3580 0CFD                              u2940 06D6  
                            u2916 068C                              u2860 0632                              u2852 0627  
                            u2780 05D2                              u3900 08C2                              u4700 0C78  
                            u4380 17FF                              u3821 0F6B                              u3733 0EF3  
                            u3725 0ED4                              u3661 0DFC                              u3581 0CFC  
                            u2941 06D5                              u2861 0631                              u2853 062E  
                            u2765 05C2                              u3901 08C1                              u4701 0C77  
                            u5077 1188                              u4381 17FE                              u3830 0F73  
                            u3662 0E03                              u3590 0D14                              u2950 06DB  
                            u2870 0636                              u2790 05E2                              u3910 08C6  
                            u4710 04C8                              u3831 0F72                              u3751 0F0D  
                            u3671 0E27                              u3663 0E0A                              u3655 0DD8  
                            u3591 0D13                              u2951 06DA                              u2871 0635  
                            u2791 05E1                              u3911 08C5                              u5087 14FE  
                            u4711 04C7                              u3840 0F79                              u3752 0F14  
                            u3672 0E2E                              u2880 0643                              u3920 08E6  
                            u4720 04CE                              u3841 0F78                              u3753 0F1B  
                            u3745 0EFC                              u3673 0E35                              u2881 0642  
                            u3921 08E5                              u4705 0C74                              u5097 150E  
                            u4721 04CD                              u3850 0F8B                              u2970 06F1  
                            u4730 04D4                              u3851 0F8A                              u3691 0E5B  
                            u2971 06F0                              u4731 04D3                              u3860 0F9A  
                            u3780 0F3F                              u3692 0E62                              u2980 06F6  
                            u3940 0905                              u4740 04DE                              _RCIF 0065  
                            u3781 0F3E                              u3765 0F1D                              u3693 0E69  
                            u3685 0E37                              u2981 06F5                              u2965 06E6  
                            u3941 0904                              u4741 04DD                              u3870 0FB7  
                            u2990 0700                              u4750 04F4                              u3871 0FB6  
                            u3775 0F34                              u2991 06FF                              u2895 0646  
                            u3935 08F7                              u4751 04F3                              u4807 013D  
                            u3880 0FD1                              u3960 0927                              u4680 0AF2  
                            u4760 051A                              u3881 0FD0                              u3865 0F95  
                            u3961 0926                              u4681 0AF1                              u4761 0519  
                            u4817 016F                              u3890 0FED                              u4690 0C03  
                            u3891 0FEC                              u3875 0FB3                              u3795 0F42  
                            u3955 0919                              u4691 0C02                              u4907 038B  
                            u4827 019D                              u3980 0937                              u3885 0FCD  
                            u3981 0936                              u4917 0398                              u4837 01CF  
                            u3990 093D                              u3991 093C                              u3975 092C  
                            u4695 0BFF                              u4927 03AA                              u4847 01FE  
                            u4937 041B                              u4857 0230                              u4777 0085  
                            u4947 042C                              u4867 033E                              u4787 00CA  
                            u4957 043E                              u4877 035A                              u4797 010F  
                            u4967 0450                              u4887 036C                              u4977 0462  
                            u4897 0379                              u4987 0474                              u4997 0486  
                            _TMR0 0001                              _TRMT 04C1                              _WPUB 0095  
               ?_Lcd_Write_String 0032  __end_of_I2C_Master_RepeatedStart 1F5E                              _main 0038  
                            _hour 0061                              btemp 007E                              start 0012  
              ??_Lcd_Write_String 0034                   __end_of_Lcd_Cmd 1FE4             __end_ofi1_USART_print 120B  
                           ??_b2d 0035                             ??_d2b 0038                       floatToStr@i 00CA  
                           ??_isr 0026                  ?_I2C_Master_Init 003B                  ?_I2C_Master_Read 002D  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                     ___fltol@sign1 0049  
                 __end_of___fladd 077F                             ?_main 0070                    i1___awdiv@sign 0076  
                 __end_of___awdiv 168C                   __end_of___flneg 1FAD                             STR_10 1010  
                           STR_11 101B                   __end_of___awmod 1434                   __end_of___flmul 1000  
                 __end_of___flsub 1086                   __end_of___fltol 1779                             _ANSEL 0188  
                 __end_of___lldiv 1623                   ___awdiv@divisor 002D                             i1l130 09D3  
                           i1l142 0A94                             i1l134 0A3B                             i1l243 1F86  
                           i1l148 0ABD                             i1l149 0ABE                             i1l246 1F92  
                           i1l255 1F54                             i1l249 1F4B                             i1l258 1F79  
                           i1l178 1490                             i1l363 1F7B                             i1l366 1F85  
                           i1l470 1092                             i1l375 120A                             i1l623 15BA  
                           i1l472 10AA                             i1l636 13D8                   ___awdiv@counter 0032  
                           _RCREG 001A                             i1_d2b 1434                             _SPBRG 0099  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _SSPIE 0463                             _SSPIF 0063                             _TXREG 0019  
                  i1___awmod@sign 0076                             _count 007D                             _setup 077F  
                           pclath 000A                   __end_of_reverse 12DF                  __end_ofi1___wmul 10AB  
                           status 0003               i1___wmul@multiplier 0070                             wtemp0 007E  
                     ioc_init@pin 002D                  __end_of_Lcd_Init 1554                  __end_of_Lcd_Port 1062  
                 __initialization 0015                       ?_USART_send 0070                      __end_of_main 0527  
         __end_of_USART_init_baud 1380                      USART_print@i 0033                            ??_main 00D2  
                          ?i1_d2b 0079                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 003E  
              ??_I2C_Master_Start 002D                ??_I2C_Master_Write 0040                  ___awdiv@dividend 002F  
                          ?_setup 0070                            _ANSELH 0189                            i1l3200 159F  
                          i1l3202 15A6                            d2b@bcd 003A                            i1l3204 15AC  
                          i1l3220 138C                            i1l3212 1380                            i1l3150 1F7B  
                          i1l3206 15B1                            i1l3230 13A5                            i1l3222 1390  
                          i1l3214 1381                            i1l3152 1F81                            i1l3208 15B6  
                          i1l3240 13C4                            i1l3232 13A9                            i1l3224 1395  
                          i1l3216 1385                            i1l3160 1099                            i1l3146 1F86  
                          i1l3170 1555                            i1l3234 13AD                            i1l3226 139B  
                          i1l3242 13CA                            i1l3218 138A                            i1l3162 10A0  
                          i1l3154 1086                            i1l3148 1F8C                            i1l3180 1569  
                          i1l3172 1559                            i1l3244 13CF                            i1l3236 13B7  
                          i1l3228 139E                            i1l3164 10A6                            i1l3156 1088  
                          i1l3420 1434                            i1l3500 09FB                            i1l3190 157F  
                          i1l3182 156D                            i1l3174 155E                            i1l3246 13D4  
                          i1l3238 13BD                            i1l3158 108C                            i1l3430 147D  
                          i1l3422 1438                            i1l3510 0A2B                            i1l3502 0A00  
                          i1l3440 1F4C                            i1l3192 1583                            i1l3184 156F  
                          i1l3176 1560                            i1l3168 1554                            i1l3432 148A  
                          i1l3424 143D                            i1l3512 0A3F                            i1l3504 0A09  
                          i1l3442 1F51                            i1l3450 11CC                            i1l3194 1587  
                          i1l3186 1575                            i1l3178 1564                            i1l3426 1465  
                          i1l3530 0A4D                            i1l3506 0A12                            i1l3436 1F43  
                          i1l3444 1F70                            i1l3452 11E8                            i1l3196 1598  
                          i1l3188 1578                            i1l3428 146C                            i1l3540 0A6E  
                          i1l3532 0A4E                            i1l3508 0A26                            i1l3460 097C  
                          i1l3438 1F48                            i1l3446 1F75                            i1l3454 11EE  
                          i1l3198 159E                            i1l3542 0A74                            i1l3550 0A94  
                          i1l3534 0A54                            i1l3526 0A46                            i1l3470 09A1  
                          i1l3462 0982                            i1l3448 11C9                            i1l3560 0AAE  
                          i1l3544 0A7E                            i1l3536 0A5E                            i1l3552 0A97  
                          i1l3472 09AA                            i1l3464 098F                            i1l3528 0A47  
                          i1l3456 0974                            i1l3562 0AAF                            i1l3554 0A9B  
                          i1l3546 0A84                            i1l3538 0A64                            i1l3474 09BE  
                          i1l3466 0993                            i1l3458 0978                            i1l3564 0ABC  
                          i1l3556 0A9D                            i1l3548 0A8F                            i1l3492 09DE  
                          i1l3476 09C3                            i1l3468 0998                            i1l3558 0AA1  
                          i1l3494 09E4                            i1l3478 09D7                            i1l3496 09EA  
                          i1l3498 09F7                            u410_20 10A6                            u410_21 10A5  
                          u411_20 1559                            u411_21 1558                            u404_20 1F8C  
                          u420_20 15B1                            u412_20 1564                            u404_21 1F8B  
                          u420_21 15B0                            u412_21 1563                            u405_20 1F92  
                          u413_20 1575                            u421_20 1385                            u405_21 1F91  
                          u413_21 1574                            u421_21 1384                            u406_20 1F81  
                          u422_20 1390                            u406_21 1F80                            u422_21 138F  
                          u414_25 1579                            u415_20 1587                            u423_20 139B  
                          u407_20 108C                            u415_21 1586                            u423_21 139A  
                          u407_21 108B                            u416_25 1588                            u424_25 139F  
                          u408_25 1093                            u512_27 09CB                            u417_20 1598  
                          u425_20 13AD                            u417_21 1597                            u425_21 13AC  
                          u417_25 1594                            u409_25 109A                            u513_27 0A33  
                          u426_20 13B7                            u450_20 09D7                            u426_21 13B6  
                          u450_21 09D6                            u418_25 15A0                            u426_25 13B3  
                          u442_25 1466                            u419_20 15AC                            u443_20 148A  
                          u451_20 09E4                            u419_21 15AB                            u443_21 1489  
                          u451_21 09E3                            u427_25 13BE                            u443_25 1486  
                          u444_20 11D6                            u428_20 13CA                            u460_20 0AAE  
                          u452_20 09F7                            u428_21 13C9                            u460_21 0AAD  
                          u452_21 09F6                            u460_25 0AAA                            u452_25 09F3  
                          u445_20 11F8                            u429_20 13CF                            u461_20 0ABC  
                          u453_20 0A3F                            u429_21 13CE                            u461_21 0ABB  
                          u453_21 0A3E                            u461_25 0AB8                            u446_20 120A  
                          u454_20 0A4D                            u446_21 1209                            u454_21 0A4C  
                          u455_20 0A54                            u447_20 0978                            u455_21 0A53  
                          u447_21 0977                            u456_20 0A64                            u448_20 097C  
                          u456_21 0A63                            u448_21 097B                            u457_20 0A74  
                          u449_20 098F                            u457_21 0A73                            u449_21 098E  
                          u449_25 098B                            u458_20 0A84                            u458_21 0A83  
                          u459_20 0A9B                            u459_21 0A9A                         ??_Lcd_Cmd 002E  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013                  __end_of___xxtofl 0974  
                     intToStr@str 003A               i1USART_print@string 0071          _I2C_Master_RepeatedStart 1F55  
                 floatToStr@value 00BC               floatToStr@precision 00C1                uint8ToString@right 003E  
                          ___flge 0816                     d2b@to_convert 0036              USART_init_baud@value 0043  
                       ??___fladd 0035                            ___wmul 10AB                         ??___awdiv 0031  
                       ??___flneg 0031                         ??___awmod 0031                            _caudal 00A0  
                       ??___flmul 003E                         ??___flsub 004C                  __end_of_ioc_init 2000  
                       ??___fltol 0045                         ??___lldiv 0035                     d2b@multiplier 003C  
                __end_of_intToStr 1701                  ___awdiv@quotient 0034                   ___awmod@divisor 002D  
                 ___awmod@counter 0032                 __end_ofi1___awdiv 15BB                 __end_ofi1___awmod 13D9  
                  i1USART_print@i 0076                            saved_w 007E                         ??_reverse 002F  
                 Lcd_Set_Cursor@a 0033                   Lcd_Set_Cursor@b 0031                   Lcd_Set_Cursor@y 0035  
                 Lcd_Set_Cursor@z 0034                        ___flge@ff1 002D                        ___flge@ff2 0031  
                    ___xxtofl@arg 0040                      ___xxtofl@exp 003F                      ___xxtofl@val 0036  
          floatToStr@floatingPart 00CE           __end_of__initialization 0034                        ___flneg@f1 002D  
                _TemperatureValue 0059                 __end_of_Lcd_Clear 1FBA                        ___fltol@f1 0041  
                   __end_ofi1_d2b 1491                    __pcstackCOMMON 0070                      ?_USART_print 002E  
                    __pidataBANK0 1F3B                  ?_USART_init_baud 003B                     __end_of_setup 07FD  
                       ?i1___wmul 0070                    _Lcd_Set_Cursor 12DF                           ??i1_d2b 007B  
                  _OPTION_REGbits 0081     floatToStr@roundedFloatingPart 00C4                  uint8ToString@num 003A  
                uint8ToString@str 0036                     ?i1_USART_send 0070                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                           ??_setup 0045                        __pbssBANK0 0050  
                      __pbssBANK1 00A0                     _HumidityValue 0058               i1I2C_Master_Write@d 007B  
               __end_of__Umul8_16 1124                        __pmaintext 0038                           ?___flge 002D  
                         ?___wmul 002D                        __pintentry 0004            __end_of_Lcd_Set_Cursor 132B  
           __end_of_uint8ToString 1800                   i1d2b@to_convert 0079                        ??i1___wmul 0074  
              i1___awdiv@dividend 0072                   i1d2b@multiplier 0024                         ?___xxtofl 0036  
                      _bufferHour 00B8                    ??i1_USART_send 0070                        _bufferTemp 00A4  
                      ??_Lcd_Init 0031                        ??_Lcd_Port 002D                           _SSPCON2 0091  
                         _SSPSTAT 0094                        _floatToStr 0AC9                        __stringtab 1000  
                       ?_ioc_init 0070                    _Lcd_Write_Char 1156                           _Lcd_Cmd 1FC8  
                       ?_intToStr 0038                  floatToStr@buffer 00C0                i1___awdiv@quotient 0077  
                    ??_USART_send 002D                           ___fladd 0527                           ___awdiv 1623  
                         ___flneg 1FA0                           ___awmod 13D9                           ___flmul 0CBB  
                         ___flsub 1062                           ___fltol 1701                           ___lldiv 15BB  
                         _ala_min 0054                           _ala_sec 0052                   ?_Lcd_Set_Cursor 0031  
                         __ptext1 1779                           __ptext2 077F                           __ptext3 1FE4  
                         __ptext4 132B                           __ptext5 1251                           __ptext6 1156  
                         __ptext7 12DF                           __ptext8 14F2                           __ptext9 1FAD  
               i1_I2C_Master_Wait 1F86                           _bufferQ 00AC                 i1_I2C_Master_Stop 1F4C  
                      ??___xxtofl 003A                ?i1_I2C_Master_Wait 0070                  ___awmod@dividend 002F  
              ?i1_I2C_Master_Stop 0070                           _on_time 0050                           _reverse 1297  
                         clrloop0 1F34            __end_of_Lcd_Write_Char 118F                __end_of_USART_send 1FC8  
            end_of_initialization 0034               ??i1_I2C_Master_Wait 0070               ??i1_I2C_Master_Stop 0070  
      ??_I2C_Master_RepeatedStart 002D                        ??_ioc_init 002D                        ??_intToStr 003D  
                     reverse@temp 0032                   ___lldiv@divisor 002D                   ___lldiv@counter 003A  
                       _RCSTAbits 0018                  I2C_Master_Init@c 003B                  I2C_Master_Read@a 002D  
                       Lcd_Port@a 002D         __end_ofi1_I2C_Master_Wait 1F93             i1___wmul@multiplicand 0072  
       __end_ofi1_I2C_Master_Stop 1F55                         _PORTBbits 0006                         _PORTDbits 0008  
                     ___fladd@grs 0040                     ___xxtofl@sign 003E                         _TRISCbits 0087  
                       i1___awdiv 1554                         i1___awmod 1380                   ?_Lcd_Write_Char 0070  
                     ?_floatToStr 00BC                      _qPulse_Value 005A                 Lcd_Write_String@a 0032  
               Lcd_Write_String@i 0037                       ___flmul@grs 0044                         _TXSTAbits 0098  
            __end_ofi1_USART_send 1F86                         _Lcd_Clear 1FAD                     i1_USART_print 11C9  
                  __end_of___flge 08BA                    __end_of___wmul 10D2                  _Lcd_Write_String 1251  
      __end_ofi1_I2C_Master_Start 1F4C                       _BAUDCTLbits 0187        __end_ofi1_I2C_Master_Write 1F7A  
             start_initialization 0015                       __end_of_b2d 10FB                       __end_of_d2b 14F2  
                     __end_of_isr 0AC9                        ?i1___awdiv 0070                        ?i1___awmod 0070  
                  USART_send@data 002D                 ??_I2C_Master_Init 003F                 ??_I2C_Master_Read 002F  
               ??_I2C_Master_Wait 002D                 ??_I2C_Master_Stop 002D                 uint8ToString@left 003D  
         USART_init_baud@baudrate 003B                 uint8ToString@temp 003F                        ?_Lcd_Clear 0070  
                        ??___flge 0035                    ?i1_USART_print 0071                          ??___wmul 0031  
                      init_fetch0 0803                         __Umul8_16 10FB             uint8ToString@tempChar 003B  
                     __pdataBANK0 005B                i1___awmod@dividend 0072                   Lcd_Write_Char@a 0031  
                 Lcd_Write_Char@y 0030                         ___fladd@a 0031                         ___fladd@b 002D  
                       ___flmul@a 003A                         ___flmul@b 0036                       __pbssCOMMON 007D  
                       ___flsub@a 0044                         ___flsub@b 0048                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00BC                          ?_Lcd_Cmd 0070  
                _I2C_Master_Start 1F5E                  _I2C_Master_Write 1038                  ??_Lcd_Set_Cursor 0032  
                        ?___fladd 002D                          ?___awdiv 002D                          ?___flneg 002D  
                        ?___awmod 002D                          ?___flmul 0036                          ?___flsub 0044  
                        ?___fltol 0041                          ?___lldiv 002D                        ?__Umul8_16 002D  
               i1___awdiv@divisor 0070                         _bufferMin 00B0                         _bufferHum 00A8  
                       _bufferSec 00B4                 i1___awdiv@counter 0075                         __pstrings 1000  
                        ?_reverse 002D                       ??i1___awdiv 0074                       ??i1___awmod 0074  
           floatToStr@integerPart 00CC                 interrupt_function 0004                    ___wmul@product 0031  
                        d2b@digit 0038                         clear_ram0 1F33                       _bufferAlarm 0057  
                        _PIE1bits 008C                          i1d2b@bcd 0022                        reverse@end 0035  
                      reverse@str 0037                   ??i1_USART_print 0073                          Lcd_Cmd@a 0030  
                        _PIR1bits 000C                       ??_Lcd_Clear 0031                       __stringbase 100F  
               ___wmul@multiplier 002D                          i1___wmul 1086                  ??_Lcd_Write_Char 002E  
                        _Lcd_Init 14F2                      i1_USART_send 1F7A                          _Lcd_Port 1042  
             I2C_Master_Read@temp 0031                      ??_floatToStr 00C3                 ??_USART_init_baud 003F  
        __end_of_Lcd_Write_String 1297                         intToStr@d 003B                         intToStr@i 003E  
                       intToStr@x 0038                     ??_USART_print 0030                 i1___awmod@divisor 0070  
                     ??__Umul8_16 002F                 i1___awmod@counter 0075         ?_I2C_Master_RepeatedStart 0070  
              __end_of_floatToStr 0CBB                __end_of__stringtab 1010                     _uint8ToString 1779  
         floatToStr@integerLength 00C6                    uint8ToString@i 003C                          _ala_hour 005B  
                   reverse@length 002D                 USART_print@string 002E                   _I2C_Master_Init 118F  
                 _I2C_Master_Read 1124                          ___xxtofl 08BA                   _I2C_Master_Wait 1F93  
                 _I2C_Master_Stop 1F67                          __ptext10 1FC8                          __ptext11 1042  
                        __ptext20 0527                          __ptext12 118F                          __ptext21 1FA0  
                        __ptext13 15BB                          __ptext30 120B                          __ptext22 0CBB  
                        __ptext14 0AC9                          __ptext31 1FBA                          __ptext23 10FB  
                        __ptext15 168C                          __ptext40 1086                          __ptext32 1038  
                        __ptext24 0816                          __ptext16 1297                          __ptext41 1380  
                        __ptext33 1F67                          __ptext25 1491                          __ptext17 08BA  
                        __ptext42 1554                          __ptext34 1F5E                          __ptext26 13D9  
                        __ptext18 1701                          __ptext43 11C9                          __ptext35 1F55  
                        __ptext27 1623                          __ptext19 1062                          __ptext44 1F7A  
                        __ptext36 1124                          __ptext28 10D2                          __ptext45 1F70  
                        __ptext37 1F93                          __ptext29 10AB                          __ptext46 1F4C  
                        __ptext38 0974                          __ptext47 1F43                          __ptext39 1434  
                        __ptext48 1F86                i1_I2C_Master_Start 1F43                i1_I2C_Master_Write 1F70  
                        _ioc_init 1FE4                          _intToStr 168C               ?i1_I2C_Master_Start 0070  
             ?i1_I2C_Master_Write 007B                          _servoPos 0056                  i1USART_send@data 0070  
                  ?_uint8ToString 0036               __end_of_USART_print 1251              ??i1_I2C_Master_Start 0070  
            ??i1_I2C_Master_Write 007D          __end_of_I2C_Master_Start 1F67          __end_of_I2C_Master_Write 1042  
                      _INTCONbits 000B                          init_ram0 0807                Lcd_Write_Char@temp 002F  
                        intlevel1 0000                        i1d2b@digit 0020                      reverse@start 0033  
                ___lldiv@dividend 0031                         stringcode 100A                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 11C9           __end_of_I2C_Master_Read 1156           __end_of_I2C_Master_Wait 1FA0  
         __end_of_I2C_Master_Stop 1F70                Lcd_Set_Cursor@temp 0036            __Umul8_16@multiplicand 002D  
                ___lldiv@quotient 0036                 I2C_Master_Write@d 003E                          stringdir 100A  
                        stringtab 1000                       _SSPCON2bits 0091                     ___fladd@signs 003D  
                    ___fladd@aexp 003E                      ___fladd@bexp 003F              __Umul8_16@multiplier 0035  
               __Umul8_16@product 0031          floatToStr@floatingLength 00C8                     b2d@to_convert 0033  
                      _USART_send 1FBA  
